{"version": 2, "width": 119, "height": 21, "timestamp": 1620394514, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[0.015594, "o", "sub"]
[0.202826, "o", "was"]
[0.296824, "o", "m k"]
[0.390027, "o", "now"]
[0.482461, "o", "s c"]
[0.57255, "o", "ool"]
[0.667366, "o", " tr"]
[0.75934, "o", "ick"]
[0.852935, "o", "s. "]
[0.946811, "o", "It "]
[1.036848, "o", "can "]
[1.128067, "o", "sho"]
[1.222028, "o", "w y"]
[1.403832, "o", "ou "]
[1.496997, "o", "the"]
[1.590082, "o", " me"]
[1.682643, "o", "tad"]
[1.77267, "o", "ata"]
[1.866467, "o", " di"]
[1.959341, "o", "rec"]
[2.049463, "o", "tly "]
[2.139595, "o", "fro"]
[2.232679, "o", "m t"]
[2.326685, "o", "he "]
[2.416988, "o", "WAS"]
[2.601861, "o", "M w"]
[2.696875, "o", "ith"]
[2.789402, "o", "out"]
[2.879521, "o", " co"]
[2.970126, "o", "nne"]
[3.06152, "o", "ctin"]
[3.151627, "o", "g t"]
[3.241752, "o", "o a"]
[3.331878, "o", "ny "]
[3.421963, "o", "nod"]
[3.516293, "o", "e.\r\n"]
[3.519843, "o", "You"]
[3.702938, "o", " ma"]
[3.796911, "o", "y g"]
[3.890658, "o", "ene"]
[3.982998, "o", "rat"]
[4.074663, "o", "e t"]
[4.167779, "o", "he "]
[4.25947, "o", "WAS"]
[4.34953, "o", "M u"]
[4.439577, "o", "sin"]
[4.533842, "o", "g sr"]
[4.623937, "o", "too"]
[4.806029, "o", "l f"]
[4.900573, "o", "or "]
[4.991829, "o", "ins"]
[5.084004, "o", "tan"]
[5.174299, "o", "ce,"]
[5.267293, "o", " he"]
[5.360749, "o", "re "]
[5.450825, "o", "we "]
[5.544383, "o", "keep"]
[5.638156, "o", " it"]
[5.728179, "o", " si"]
[5.910193, "o", "mpl"]
[6.00031, "o", "e a"]
[6.092858, "o", "nd "]
[6.182938, "o", "fet"]
[6.272964, "o", "ch "]
[6.365446, "o", "it "]
[6.45954, "o", "fro"]
[6.550821, "o", "m a "]
[6.640876, "o", "nod"]
[6.730945, "o", "e w"]
[6.821827, "o", "ith"]
[7.00593, "o", ":\r\n"]
[7.00927, "o", "We "]
[7.197016, "o", "use"]
[7.287129, "o", " th"]
[7.377211, "o", "e f"]
[7.468086, "o", "oll"]
[7.559533, "o", "owi"]
[7.653465, "o", "ng "]
[7.747063, "o", "com"]
[7.837088, "o", "man"]
[7.928009, "o", "d:\r\n"]
[7.931342, "o", "sub"]
[8.111883, "o", "was"]
[8.20294, "o", "m g"]
[8.297046, "o", "et "]
[8.390262, "o", "--u"]
[8.480383, "o", "rl "]
[8.570796, "o", "wss"]
[8.660845, "o", "://"]
[8.750902, "o", "rpc"]
[8.840975, "o", ".po"]
[8.931319, "o", "lkad"]
[9.115474, "o", "ot."]
[9.209618, "o", "io "]
[9.299623, "o", "--o"]
[9.392752, "o", "utp"]
[9.484731, "o", "ut "]
[9.574939, "o", "run"]
[9.666373, "o", "tim"]
[9.759585, "o", "e.w"]
[9.849728, "o", "asm"]
[9.939858, "o", "\r\n"]
[9.945861, "o", "Running subwasm v0.4.0\r\nGetting runtime from \"wss://rpc.polkadot.io\"\r\n"]
[10.416376, "o", "Got the runtime, its size is 1876380\r\nSaving runtime to \"runtime.wasm\"\r\n"]
[10.923934, "o", "Let"]
[11.10965, "o", "'s "]
[11.20041, "o", "ask"]
[11.291271, "o", " su"]
[11.385652, "o", "bwa"]
[11.475691, "o", "sm "]
[11.568045, "o", "to "]
[11.659625, "o", "cal"]
[11.752632, "o", "l i"]
[11.847123, "o", "nto"]
[11.939854, "o", " the"]
[12.029926, "o", " ru"]
[12.210112, "o", "nti"]
[12.302401, "o", "me "]
[12.395902, "o", "and"]
[12.488904, "o", " sh"]
[12.578939, "o", "ow "]
[12.669035, "o", "us "]
[12.759999, "o", "the"]
[12.850119, "o", " me"]
[12.94028, "o", "tada"]
[13.03263, "o", "ta:"]
[13.21274, "o", "\r\n"]
[13.216043, "o", "We "]
[13.403562, "o", "use"]
[13.498596, "o", " th"]
[13.593722, "o", "e f"]
[13.685501, "o", "oll"]
[13.780535, "o", "owi"]
[13.871961, "o", "ng "]
[13.96199, "o", "com"]
[14.055715, "o", "man"]
[14.149761, "o", "d:\r\n"]
[14.153119, "o", "sub"]
[14.337347, "o", "was"]
[14.427263, "o", "m m"]
[14.51739, "o", "eta"]
[14.609695, "o", " --"]
[14.702915, "o", "sou"]
[14.797151, "o", "rce"]
[14.889617, "o", " ru"]
[14.979766, "o", "nti"]
[15.069854, "o", "me."]
[15.159985, "o", "wasm"]
[15.347233, "o", "\r\n"]
[15.354929, "o", "Running subwasm v0.4.0\r\n"]
[15.558829, "o", "{\r\n  \"V12\": {\r\n    \"modules\": [\r\n      {\r\n        \"name\": \"System\",\r\n        \"storage\": {\r\n          \"prefix\": \"System\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Account\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"AccountInfo<T::Index, T::AccountData>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n  "]
[15.558995, "o", "              0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n      "]
[15.559014, "o", "          0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The full account information for a particular account ID.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ExtrinsicCount\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Total extrinsics count for the current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"BlockWeight\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"ConsumedWeight\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r"]
[15.55912, "o", "\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current weight for the block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"AllExtrinsicsLen\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Total length (in bytes) for all extrinsics put together, for the current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"BlockHash\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \""]
[15.559167, "o", "key\": \"T::BlockNumber\",\r\n                  \"value\": \"T::Hash\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Map of block numbers to block hashes.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ExtrinsicData\",\r\n              \"modifier"]
[15.559198, "o", "\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"u32\",\r\n                  \"value\": \"Vec<u8>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Extrinsics data for the current block (maps an extrinsic's index to its data).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Number\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::BlockNumber\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current block number being processed. Set by `execute_block`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ParentHash\",\r\n              \"modifier\": \"Default\",\r\n  "]
[15.559227, "o", "            \"ty\": {\r\n                \"Plain\": \"T::Hash\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Hash of the previous block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Digest\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"DigestOf<T>\"\r\n"]
[15.559256, "o", "              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Digest of the current block, also part of the block header.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Events\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<EventRecord<T::Event, T::Hash>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Events deposited for the current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"EventCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"EventIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The number of events in the `Events<T>` list.\"\r\n              ]\r"]
[15.55929, "o", "\r\n            },\r\n            {\r\n              \"name\": \"EventTopics\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"Vec<(T::BlockNumber, EventIndex)>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Mapping between a topic (represented by T::Hash) and a vector of indexes\",\r\n                \" of events in the `<Events<T>>` list.\",\r\n                \"\",\r\n                \" All topic vectors have deterministic storage locations depending on the topic. This\",\r\n                \" allows light-clients to leverage the changes trie storage tracking mechanism and\",\r\n                \" in case of changes fetch the list of events of interest.\",\r\n                \"\",\r\n                \" The value has the type `(T::BlockNumber, EventI"]
[15.559428, "o", "ndex)` because if we used only just\",\r\n                \" the `EventIndex` then in case if the topic has the same contents on the next block\",\r\n                \" no notification will be triggered thus the event might be lost.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"LastRuntimeUpgrade\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"LastRuntimeUpgradeInfo\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Stores the `spec_version` and `spec_name` of when the last runtime upgrade happened.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"UpgradedToU32RefCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" True if we have upgraded so that `type RefCo"]
[15.559631, "o", "unt` is `u32`. False (default) if not.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"UpgradedToTripleRefCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" True if we have upgraded so that AccountInfo contains three types of `RefCount`. False\",\r\n                \" (default) if not.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ExecutionPhase\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"Phase\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The execution phase of the block.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"fill_block\",\r\n            \"arguments\": [\r\n              {\r\n "]
[15.559808, "o", "               \"name\": \"_ratio\",\r\n                \"ty\": \"Perbill\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" A dispatch that will fill the block weight up to the given ratio.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remark\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"_remark\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Make some on-chain remark.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_heap_pages\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"pages\",\r\n                \"ty\": \"u64\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the number of pages in the WebAssembly environment's heap.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - "]
[15.559955, "o", "`O(1)`\",\r\n              \" - 1 storage write.\",\r\n              \" - Base Weight: 1.405 µs\",\r\n              \" - 1 write to HEAP_PAGES\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_code\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"code\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the new runtime code.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(C + S)` where `C` length of `code` and `S` complexity of `can_set_code`\",\r\n              \" - 1 storage write (codec `O(C)`).\",\r\n              \" - 1 call to `can_set_code`: `O(S)` (calls `sp_io::misc::runtime_version` which is expensive).\",\r\n              \" - 1 event.\",\r\n              \" The weight of this function is dependent on the runtime, but generally this is very expensive.\",\r\n              \" We will treat this as a full block.\",\r\n              \" # </weight>\"\r\n            ]\r\n        "]
[15.560165, "o", "  },\r\n          {\r\n            \"name\": \"set_code_without_checks\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"code\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the new runtime code without doing any checks of the given `code`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(C)` where `C` length of `code`\",\r\n              \" - 1 storage write (codec `O(C)`).\",\r\n              \" - 1 event.\",\r\n              \" The weight of this function is dependent on the runtime. We will treat this as a full block.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_changes_trie_config\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"changes_trie_config\",\r\n                \"ty\": \"Option<ChangesTrieConfiguration>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the new changes trie configuration.\""]
[15.560262, "o", ",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`\",\r\n              \" - 1 storage write or delete (codec `O(1)`).\",\r\n              \" - 1 call to `deposit_log`: Uses `append` API, so O(1)\",\r\n              \" - Base Weight: 7.218 µs\",\r\n              \" - DB Weight:\",\r\n              \"     - Writes: Changes Trie, System Digest\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_storage\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"items\",\r\n                \"ty\": \"Vec<KeyValue>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set some items of storage.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(I)` where `I` length of `items`\",\r\n              \" - `I` storage writes (`O(1)`).\",\r\n              \" - Base Weight: 0.568 * i µs\",\r\n              \" - Writes: Number of items\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"n"]
[15.560376, "o", "ame\": \"kill_storage\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"keys\",\r\n                \"ty\": \"Vec<Key>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Kill some items from storage.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(IK)` where `I` length of `keys` and `K` length of one key\",\r\n              \" - `I` storage deletions.\",\r\n              \" - Base Weight: .378 * i µs\",\r\n              \" - Writes: Number of items\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"kill_prefix\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"prefix\",\r\n                \"ty\": \"Key\"\r\n              },\r\n              {\r\n                \"name\": \"_subkeys\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Kill all storage items with a key that starts with the given prefix.\",\r\n              \"\",\r\n              \" **"]
[15.560471, "o", "NOTE:** We rely on the Root origin to provide us the number of subkeys under\",\r\n              \" the prefix we are removing to accurately calculate the weight of this function.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(P)` where `P` amount of keys with prefix `prefix`\",\r\n              \" - `P` storage deletions.\",\r\n              \" - Base Weight: 0.834 * P µs\",\r\n              \" - Writes: Number of subkeys + 1\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remark_with_event\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"remark\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Make some on-chain remark and emit event.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(b)` where b is the length of the remark.\",\r\n              \" - 1 event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"eve"]
[15.56049, "o", "nt\": [\r\n          {\r\n            \"name\": \"ExtrinsicSuccess\",\r\n            \"arguments\": [\r\n              \"DispatchInfo\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An extrinsic completed successfully. \\\\[info\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ExtrinsicFailed\",\r\n            \"arguments\": [\r\n              \"DispatchError\",\r\n              \"DispatchInfo\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An extrinsic failed. \\\\[error, info\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"CodeUpdated\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" `:code` was updated.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NewAccount\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A new \\\\[account\\\\] was created.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"KilledAccount\",\r\n            \"arguments\""]
[15.5606, "o", ": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An \\\\[account\\\\] was reaped.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Remarked\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" On on-chain remark happened. \\\\[origin, remark_hash\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"BlockWeights\",\r\n            \"ty\": \"limits::BlockWeights\",\r\n            \"value\": [\r\n              0,\r\n              242,\r\n              5,\r\n              42,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              32,\r\n              74,\r\n              169,\r\n              209,\r\n              1,\r\n              0,\r\n              0,\r\n              64,\r\n              89,\r\n              115,\r\n              7,\r\n              0,\r\n              0,\r\n              0,\r\n              0"]
[15.56069, "o", ",\r\n              1,\r\n              192,\r\n              118,\r\n              108,\r\n              143,\r\n              88,\r\n              1,\r\n              0,\r\n              0,\r\n              1,\r\n              0,\r\n              152,\r\n              247,\r\n              62,\r\n              93,\r\n              1,\r\n              0,\r\n              0,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              64,\r\n              89,\r\n              115,\r\n              7,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              1,\r\n              192,\r\n              254,\r\n              190,\r\n              249,\r\n              204,\r\n              1,\r\n              0,\r\n              0,\r\n              1,\r\n              0,\r\n              32,\r\n              74,\r\n              169,\r\n              209,\r\n              1,\r\n              0,\r\n              0,\r\n              1,\r\n              "]
[15.56075, "o", "0,\r\n              136,\r\n              82,\r\n              106,\r\n              116,\r\n              0,\r\n              0,\r\n              0,\r\n              64,\r\n              89,\r\n              115,\r\n              7,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Block & extrinsics weights: base values and limits.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BlockLength\",\r\n            \"ty\": \"limits::BlockLength\",\r\n            \"value\": [\r\n              0,\r\n              0,\r\n              60,\r\n              0,\r\n              0,\r\n              0,\r\n              80,\r\n              0,\r\n              0,\r\n              0,\r\n              80,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum length of a block (in bytes).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BlockHashCount\",\r\n            \"ty\":"]
[15.560879, "o", " \"T::BlockNumber\",\r\n            \"value\": [\r\n              96,\r\n              9,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Maximum number of block number to block hash mappings to keep (oldest pruned first).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DbWeight\",\r\n            \"ty\": \"RuntimeDbWeight\",\r\n            \"value\": [\r\n              64,\r\n              120,\r\n              125,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              225,\r\n              245,\r\n              5,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The weight of runtime database operations the runtime can invoke.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Version\",\r\n            \"ty\": \"RuntimeVersion\",\r\n            \"value\": [\r\n              32,\r\n              112,\r\n              111,"]
[15.561023, "o", "\r\n              108,\r\n              107,\r\n              97,\r\n              100,\r\n              111,\r\n              116,\r\n              60,\r\n              112,\r\n              97,\r\n              114,\r\n              105,\r\n              116,\r\n              121,\r\n              45,\r\n              112,\r\n              111,\r\n              108,\r\n              107,\r\n              97,\r\n              100,\r\n              111,\r\n              116,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              30,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              48,\r\n              223,\r\n              106,\r\n              203,\r\n              104,\r\n              153,\r\n              7,\r\n              96,\r\n              155,\r\n              3,\r\n              0,\r\n              0,\r\n              0,\r\n              55,\r\n              227,\r\n              151,\r\n              252,\r\n              124,\r\n              145,\r\n   "]
[15.561086, "o", "           245,\r\n              228,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              64,\r\n              254,\r\n              58,\r\n              212,\r\n              1,\r\n              248,\r\n              149,\r\n              154,\r\n              4,\r\n              0,\r\n              0,\r\n              0,\r\n              210,\r\n              188,\r\n              152,\r\n              151,\r\n              238,\r\n              208,\r\n              143,\r\n              21,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              247,\r\n              139,\r\n              39,\r\n              139,\r\n              229,\r\n              63,\r\n              69,\r\n              76,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              175,\r\n              44,\r\n              2,\r\n              151,\r\n              162,\r\n              62,\r\n              109,\r\n              61,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n "]
[15.56114, "o", "             237,\r\n              153,\r\n              197,\r\n              172,\r\n              178,\r\n              94,\r\n              237,\r\n              245,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              203,\r\n              202,\r\n              37,\r\n              227,\r\n              159,\r\n              20,\r\n              35,\r\n              135,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              104,\r\n              122,\r\n              212,\r\n              74,\r\n              211,\r\n              127,\r\n              3,\r\n              194,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              171,\r\n              60,\r\n              5,\r\n              114,\r\n              41,\r\n              31,\r\n              235,\r\n              139,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              188,\r\n              157,\r\n              137,\r\n              144,\r\n              79,\r\n          "]
[15.561181, "o", "    91,\r\n              146,\r\n              63,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              55,\r\n              200,\r\n              187,\r\n              19,\r\n              80,\r\n              169,\r\n              162,\r\n              168,\r\n              1,\r\n              0,\r\n              0,\r\n              0,\r\n              7,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Get the chain's current version.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SS58Prefix\",\r\n            \"ty\": \"u8\",\r\n            \"value\": [\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The designated SS85 prefix of this chain.\",\r\n              \"\",\r\n              \" This replaces the \\\"ss58Format\\\" property declared in the chain spec. Reason is\",\r\n              \" that the runtime should know about the prefix in order to make use of it as\",\r\n              \" an identifier of the cha"]
[15.561229, "o", "in.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InvalidSpecName\",\r\n            \"documentation\": [\r\n              \" The name of specification does not match between the current runtime\",\r\n              \" and the new runtime.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SpecVersionNeedsToIncrease\",\r\n            \"documentation\": [\r\n              \" The specification version is not allowed to decrease between the current runtime\",\r\n              \" and the new runtime.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"FailedToExtractRuntimeVersion\",\r\n            \"documentation\": [\r\n              \" Failed to extract the runtime version from the new runtime.\",\r\n              \"\",\r\n              \" Either calling `Core_version` or decoding `RuntimeVersion` failed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NonDefaultComposite\",\r\n            \"documentation\": [\r\n              \" Suicide called when the account has "]
[15.561269, "o", "non-default composite data.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NonZeroRefCount\",\r\n            \"documentation\": [\r\n              \" There is a non-zero reference count preventing the account from being purged.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 0\r\n      },\r\n      {\r\n        \"name\": \"RandomnessCollectiveFlip\",\r\n        \"storage\": {\r\n          \"prefix\": \"RandomnessCollectiveFlip\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"RandomMaterial\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::Hash>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Series of block headers from the last 81 blocks that acts as random seed material. This\",\r\n                \" is arranged as a ring buffer with `block_number % 81` being the index into the `Vec` of\",\r\n                \" the oldest hash.\"\r\n              ]\r\n            }\r\n   "]
[15.561303, "o", "       ]\r\n        },\r\n        \"calls\": null,\r\n        \"event\": null,\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 31\r\n      },\r\n      {\r\n        \"name\": \"Scheduler\",\r\n        \"storage\": {\r\n          \"prefix\": \"Scheduler\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Agenda\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::BlockNumber\",\r\n                  \"value\": \"Vec<Option<Scheduled<<T as Config>::Call, T::BlockNumber, T::\\nPalletsOrigin, T::AccountId>>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Items to be executed, indexed by the block number that they should be executed on.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Lookup\",\r\n              \"modifier\": \"Optional\",\r\n            "]
[15.561338, "o", "  \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"Vec<u8>\",\r\n                  \"value\": \"TaskAddress<T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Lookup from identity to the block number and index of the task.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"StorageVersion\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Releases\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Storage version of the pallet.\",\r\n                \"\",\r\n                \" New networks start with last version.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"schedule\",\r\n            \"arguments\": [\r\n     "]
[15.561396, "o", "         {\r\n                \"name\": \"when\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_periodic\",\r\n                \"ty\": \"Option<schedule::Period<T::BlockNumber>>\"\r\n              },\r\n              {\r\n                \"name\": \"priority\",\r\n                \"ty\": \"schedule::Priority\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Anonymously schedule a task.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - S = Number of already scheduled calls\",\r\n              \" - Base Weight: 22.29 + .126 * S µs\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Agenda\",\r\n              \"     - Write: Agenda\",\r\n              \" - Will use base weight of 25 which should be good for up to 30 scheduled calls\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n      "]
[15.561468, "o", "      \"name\": \"cancel\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"when\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel an anonymously scheduled task.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - S = Number of already scheduled calls\",\r\n              \" - Base Weight: 22.15 + 2.869 * S µs\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Agenda\",\r\n              \"     - Write: Agenda, Lookup\",\r\n              \" - Will use base weight of 100 which should be good for up to 30 scheduled calls\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"schedule_named\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"id\",\r\n                \"ty\": \"Vec<u8>\"\r\n              },\r\n              {\r\n                \"name\": \"w"]
[15.561544, "o", "hen\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_periodic\",\r\n                \"ty\": \"Option<schedule::Period<T::BlockNumber>>\"\r\n              },\r\n              {\r\n                \"name\": \"priority\",\r\n                \"ty\": \"schedule::Priority\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a named task.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - S = Number of already scheduled calls\",\r\n              \" - Base Weight: 29.6 + .159 * S µs\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Agenda, Lookup\",\r\n              \"     - Write: Agenda, Lookup\",\r\n              \" - Will use base weight of 35 which should be good for more than 30 scheduled calls\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_nam"]
[15.561664, "o", "ed\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"id\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel a named scheduled task.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - S = Number of already scheduled calls\",\r\n              \" - Base Weight: 24.91 + 2.907 * S µs\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Agenda, Lookup\",\r\n              \"     - Write: Agenda, Lookup\",\r\n              \" - Will use base weight of 100 which should be good for up to 30 scheduled calls\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"schedule_after\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"after\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_periodic\",\r\n                \"ty\": \"Option<schedule::Period<T::BlockNumber>>\"\r\n              },\r\n              "]
[15.561721, "o", "{\r\n                \"name\": \"priority\",\r\n                \"ty\": \"schedule::Priority\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Anonymously schedule a task after a delay.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Same as [`schedule`].\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"schedule_named_after\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"id\",\r\n                \"ty\": \"Vec<u8>\"\r\n              },\r\n              {\r\n                \"name\": \"after\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_periodic\",\r\n                \"ty\": \"Option<schedule::Period<T::BlockNumber>>\"\r\n              },\r\n              {\r\n                \"name\": \"priority\",\r\n                \"ty\": \"schedule::Priority\"\r\n          "]
[15.561808, "o", "    },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a named task after a delay.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Same as [`schedule_named`].\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Scheduled\",\r\n            \"arguments\": [\r\n              \"BlockNumber\",\r\n              \"u32\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Scheduled some task. \\\\[when, index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Canceled\",\r\n            \"arguments\": [\r\n              \"BlockNumber\",\r\n              \"u32\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Canceled some task. \\\\[when, index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Dispatched\",\r\n            \"arguments\": [\r\n              \""]
[15.561862, "o", "TaskAddress<BlockNumber>\",\r\n              \"Option<Vec<u8>>\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Dispatched some task. \\\\[task, id, result\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"FailedToSchedule\",\r\n            \"documentation\": [\r\n              \" Failed to schedule a call\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotFound\",\r\n            \"documentation\": [\r\n              \" Cannot find the scheduled call.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TargetBlockNumberInPast\",\r\n            \"documentation\": [\r\n              \" Given target block number is in the past.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"RescheduleNoChange\",\r\n            \"documentation\": [\r\n              \" Reschedule failed because it does not change scheduled time.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 1\r\n      }"]
[15.56192, "o", ",\r\n      {\r\n        \"name\": \"Babe\",\r\n        \"storage\": {\r\n          \"prefix\": \"Babe\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"EpochIndex\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u64\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current epoch index.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Authorities\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(AuthorityId, BabeAuthorityWeight)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current epoch authorities.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"GenesisSlot\",\r\n    "]
[15.561971, "o", "          \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Slot\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The slot at which the first epoch actually started. This is 0\",\r\n                \" until the first block of the chain.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentSlot\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Slot\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current slot number.\"\r\n              ]\r\n            },\r\n            {\r\n            "]
[15.562039, "o", "  \"name\": \"Randomness\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"schnorrkel::Randomness\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The epoch randomness for the *current* epoch.\",\r\n                \"\",\r\n                \" # Security\",\r\n                \"\",\r\n         "]
[15.562204, "o", "       \" This MUST NOT be used for gambling, as it can be influenced by a\",\r\n                \" malicious validator in the short term. It MAY be used in many\",\r\n                \" cryptographic protocols, however, so long as one remembers that this\",\r\n                \" (like everything else on-chain) it is public. For example, it can be\",\r\n                \" used where a number is needed that cannot have been chosen by an\",\r\n                \" adversary, for purposes such as public-coin zero-knowledge proofs.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"PendingEpochConfigChange\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"NextConfigDescriptor\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Pending epoch configuration change that will be applied when the next epoch is enacted.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextR"]
[15.562307, "o", "andomness\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"schnorrkel::Randomness\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Next epoch randomness.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextAuthorities\",\r\n              \"modifier\": \"De"]
[15.56235, "o", "fault\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(AuthorityId, BabeAuthorityWeight)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Next epoch authorities.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SegmentIndex\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Randomness under construction.\",\r\n                \"\",\r\n                \" We make a tradeoff between storage accesses and list length.\",\r\n                \" We store the under-construction randomness in segments of up to\",\r\n                \" `UNDER_CONSTRUCTION_SEGMENT_LENGTH`.\",\r\n                \"\",\r\n                \" Once a segment reaches this length, we begin the next one.\",\r\n       "]
[15.562386, "o", "         \" We reset all segments and return to `0` at the beginning of every\",\r\n                \" epoch.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"UnderConstruction\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"u32\",\r\n                  \"value\": \"Vec<schnorrkel::Randomness>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" TWOX-NOTE: `SegmentIndex` is an increasing integer, so this is okay.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Initialized\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"MaybeRandomness\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Temporary valu"]
[15.562415, "o", "e (cleared at block finalization) which is `Some`\",\r\n                \" if per-block initialization has already been called for current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"AuthorVrfRandomness\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"MaybeRandomness\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Temporary value (cleared at block finalization) that includes the VRF output generated\",\r\n                \" at this block. This field should always be populated during block processing unless\",\r\n                \" secondary plain slots are enabled (which don't contain a VRF output).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"EpochStart\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"(T::BlockNumber, T::BlockNumber)\"\r\n              },\r\n              \"default\": [\r\n        "]
[15.562453, "o", "        0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The block numbers when the last and current epoch have started, respectively `N-1` and\",\r\n                \" `N`.\",\r\n                \" NOTE: We track this is in order to annotate the block number when a given pool of\",\r\n                \" entropy was fixed (i.e. it was known to chain observers). Since epochs are defined in\",\r\n                \" slots, which may be skipped, the block numbers may not line up with the slot numbers.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Lateness\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::BlockNumber\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n       "]
[15.562503, "o", "         \" How late the current block is compared to its parent.\",\r\n                \"\",\r\n                \" This entry is populated as part of block execution and is cleaned up\",\r\n                \" on block finalization. Querying this storage entry outside of block\",\r\n                \" execution context should always yield zero.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"EpochConfig\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"BabeEpochConfiguration\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The configuration for the current epoch. Should never be `None` as it is initialized in genesis.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextEpochConfig\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"BabeEpochConfiguration\"\r\n              },\r\n              \"default\": [\r\n          "]
[15.56255, "o", "      0\r\n              ],\r\n              \"documentation\": [\r\n                \" The configuration for the next epoch, `None` if the config will not change\",\r\n                \" (you can fallback to `EpochConfig` instead in that case).\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"report_equivocation\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"equivocation_proof\",\r\n                \"ty\": \"EquivocationProof<T::Header>\"\r\n              },\r\n              {\r\n                \"name\": \"key_owner_proof\",\r\n                \"ty\": \"T::KeyOwnerProof\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Report authority equivocation/misbehavior. This method will verify\",\r\n              \" the equivocation proof and validate the given key ownership proof\",\r\n              \" against the extracted offender. If both are valid, the offence will\",\r\n              \" be reported.\"\r\n            ]\r\n          },\r\n     "]
[15.562619, "o", "     {\r\n            \"name\": \"report_equivocation_unsigned\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"equivocation_proof\",\r\n                \"ty\": \"EquivocationProof<T::Header>\"\r\n              },\r\n              {\r\n                \"name\": \"key_owner_proof\",\r\n                \"ty\": \"T::KeyOwnerProof\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Report authority equivocation/misbehavior. This method will verify\",\r\n              \" the equivocation proof and validate the given key ownership proof\",\r\n              \" against the extracted offender. If both are valid, the offence will\",\r\n              \" be reported.\",\r\n              \" This extrinsic must be called unsigned and it is expected that only\",\r\n              \" block authors will call it (validated in `ValidateUnsigned`), as such\",\r\n              \" if the block author is defined it will be defined as the equivocation\",\r\n              \" reporter.\"\r\n            ]\r\n          },\r\n          {\r\n      "]
[15.562661, "o", "      \"name\": \"plan_config_change\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"config\",\r\n                \"ty\": \"NextConfigDescriptor\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Plan an epoch config change. The epoch config change is recorded and will be enacted on\",\r\n              \" the next call to `enact_epoch_change`. The config will be activated one epoch after.\",\r\n              \" Multiple calls to this method will replace any existing planned config change that had\",\r\n              \" not been enacted yet.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": null,\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"EpochDuration\",\r\n            \"ty\": \"u64\",\r\n            \"value\": [\r\n              96,\r\n              9,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount of time, in slots, that each ep"]
[15.562731, "o", "och should last.\",\r\n              \" NOTE: Currently it is not possible to change the epoch duration after\",\r\n              \" the chain has started. Attempting to do so will brick block production.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ExpectedBlockTime\",\r\n            \"ty\": \"T::Moment\",\r\n            \"value\": [\r\n              112,\r\n              23,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The expected average block time at which BABE should be creating\",\r\n              \" blocks. Since BABE is probabilistic it is not trivial to figure out\",\r\n              \" what the expected average block time should be based on the slot\",\r\n              \" duration and the security parameter `c` (where `1 - c` represents\",\r\n              \" the probability of a slot being empty).\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\":"]
[15.562794, "o", " \"InvalidEquivocationProof\",\r\n            \"documentation\": [\r\n              \" An equivocation proof provided as part of an equivocation report is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidKeyOwnershipProof\",\r\n            \"documentation\": [\r\n              \" A key ownership proof provided as part of an equivocation report is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateOffenceReport\",\r\n            \"documentation\": [\r\n              \" A given equivocation report is valid but already previously reported.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 2\r\n      },\r\n      {\r\n        \"name\": \"Timestamp\",\r\n        \"storage\": {\r\n          \"prefix\": \"Timestamp\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Now\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::Moment\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n "]
[15.562832, "o", "               0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current time for the current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DidUpdate\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Did the timestamp get updated in this block?\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"set\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"now\",\r\n                \"ty\": \"Compact<T::Moment>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the current time.\",\r\n              \"\",\r\n              \" This call should be invoked exactly once per block. It will panic at the final"]
[15.562874, "o", "ization\",\r\n              \" phase, if this call hasn't been invoked by that time.\",\r\n              \"\",\r\n              \" The timestamp should be greater than the previous one by the amount specified by\",\r\n              \" `MinimumPeriod`.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be `Inherent`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)` (Note that implementations of `OnTimestampSet` must also be `O(1)`)\",\r\n              \" - 1 storage read and 1 storage mutation (codec `O(1)`). (because of `DidUpdate::take` in `on_finalize`)\",\r\n              \" - 1 event handler `on_timestamp_set`. Must be `O(1)`.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": null,\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"MinimumPeriod\",\r\n            \"ty\": \"T::Moment\",\r\n            \"value\": [\r\n              184,\r\n              11,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,"]
[15.562925, "o", "\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum period between blocks. Beware that this is different to the *expected* period\",\r\n              \" that the block production apparatus provides. Your chosen consensus system will generally\",\r\n              \" work with this to determine a sensible block time. e.g. For Aura, it will be double this\",\r\n              \" period on default settings.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [],\r\n        \"index\": 3\r\n      },\r\n      {\r\n        \"name\": \"Indices\",\r\n        \"storage\": {\r\n          \"prefix\": \"Indices\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Accounts\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountIndex\",\r\n                  \"value\": \"(T::AccountId, BalanceOf<T>, bool)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n       "]
[15.562963, "o", "       \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The lookup from index to account.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"claim\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"T::AccountIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Assign an previously unassigned index.\",\r\n              \"\",\r\n              \" Payment: `Deposit` is reserved from the sender account.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `index`: the index to be claimed. This must not be in use.\",\r\n              \"\",\r\n              \" Emits `IndexAssigned` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - One storage mutation (codec `O(1)`).\",\r\n              \" - One"]
[15.562998, "o", " reserve operation.\",\r\n              \" - One event.\",\r\n              \" -------------------\",\r\n              \" - DB Weight: 1 Read/Write (Accounts)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"T::AccountIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Assign an index already owned by the sender to another account. The balance reservation\",\r\n              \" is effectively transferred to the new account.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `index`: the index to be re-assigned. This must be owned by the sender.\",\r\n              \" - `new`: the new owner of the index. This function is a no-op if it is equal to sender.\""]
[15.563031, "o", ",\r\n              \"\",\r\n              \" Emits `IndexAssigned` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - One storage mutation (codec `O(1)`).\",\r\n              \" - One transfer operation.\",\r\n              \" - One event.\",\r\n              \" -------------------\",\r\n              \" - DB Weight:\",\r\n              \"    - Reads: Indices Accounts, System Account (recipient)\",\r\n              \"    - Writes: Indices Accounts, System Account (recipient)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"free\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"T::AccountIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Free up an index owned by the sender.\",\r\n              \"\",\r\n              \" Payment: Any previous deposit placed for the index is unreserved in the sender account.\",\r\n              \"\",\r\n              \" The d"]
[15.563063, "o", "ispatch origin for this call must be _Signed_ and the sender must own the index.\",\r\n              \"\",\r\n              \" - `index`: the index to be freed. This must be owned by the sender.\",\r\n              \"\",\r\n              \" Emits `IndexFreed` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - One storage mutation (codec `O(1)`).\",\r\n              \" - One reserve operation.\",\r\n              \" - One event.\",\r\n              \" -------------------\",\r\n              \" - DB Weight: 1 Read/Write (Accounts)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"T::AccountIndex\"\r\n              },\r\n              {\r\n                \"name\": \"freeze\",\r\n                \"ty\": \"bool\"\r\n              }\r\n  "]
[15.563103, "o", "          ],\r\n            \"documentation\": [\r\n              \" Force an index to an account. This doesn't require a deposit. If the index is already\",\r\n              \" held, then any deposit is reimbursed to its current owner.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Root_.\",\r\n              \"\",\r\n              \" - `index`: the index to be (re-)assigned.\",\r\n              \" - `new`: the new owner of the index. This function is a no-op if it is equal to sender.\",\r\n              \" - `freeze`: if set to `true`, will freeze the index so it cannot be transferred.\",\r\n              \"\",\r\n              \" Emits `IndexAssigned` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - One storage mutation (codec `O(1)`).\",\r\n              \" - Up to one reserve operation.\",\r\n              \" - One event.\",\r\n              \" -------------------\",\r\n              \" - DB Weight:\",\r\n              \"    - Reads: Indices Accounts, System Acc"]
[15.563144, "o", "ount (original owner)\",\r\n              \"    - Writes: Indices Accounts, System Account (original owner)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"freeze\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"T::AccountIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Freeze an index so it will always point to the sender account. This consumes the deposit.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the signing account must have a\",\r\n              \" non-frozen account `index`.\",\r\n              \"\",\r\n              \" - `index`: the index to be frozen in place.\",\r\n              \"\",\r\n              \" Emits `IndexFrozen` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - One storage mutation (codec `O(1)`).\",\r\n              \" - Up to one slash operation.\",\r\n         "]
[15.563185, "o", "     \" - One event.\",\r\n              \" -------------------\",\r\n              \" - DB Weight: 1 Read/Write (Accounts)\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"IndexAssigned\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A account index was assigned. \\\\[index, who\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IndexFreed\",\r\n            \"arguments\": [\r\n              \"AccountIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A account index has been freed up (unassigned). \\\\[index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IndexFrozen\",\r\n            \"arguments\": [\r\n              \"AccountIndex\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A account index has been frozen to its current account ID. \\\\[index, who\\\\]\"\r"]
[15.563228, "o", "\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"Deposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              232,\r\n              118,\r\n              72,\r\n              23,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The deposit needed for reserving an index.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [],\r\n        \"index\": 4\r\n      },\r\n      {\r\n        \"name\": \"Balances\",\r\n        \"storage\": {\r\n          \"prefix\": \"Balances\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"TotalIssuance\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::Balance\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n "]
[15.563266, "o", "               0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The total units issued in the system.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Account\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"AccountData<T::Balance>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n "]
[15.563302, "o", "               0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n     "]
[15.563333, "o", "           0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The balance of an account.\",\r\n                \"\",\r\n                \" NOTE: This is only used in the case that this pallet is used to store balances.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Locks\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"Vec<BalanceLock<T::Balance>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Any liquidity locks on some account balances.\",\r\n                \" NOTE: Should only be accessed when setting, changing and freeing a lock.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"StorageVersion\",\r\n              \"modifier\": \"Defa"]
[15.563362, "o", "ult\",\r\n              \"ty\": {\r\n                \"Plain\": \"Releases\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Storage version of the pallet.\",\r\n                \"\",\r\n                \" This is set to v2.0.0 for new networks.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"dest\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<T::Balance>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Transfer some liquid free balance to another account.\",\r\n              \"\",\r\n              \" `transfer` will set the `FreeBalance` of the sender and receiver.\",\r\n              \" It will decrease the total issuance of the system by the `TransferFee`.\","]
[15.563411, "o", "\r\n              \" If the sender's account is below the existential deposit as a result\",\r\n              \" of the transfer, the account will be reaped.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be `Signed` by the transactor.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Dependent on arguments but not critical, given proper implementations for\",\r\n              \"   input config types. See related functions below.\",\r\n              \" - It contains a limited number of reads and writes internally and no complex computation.\",\r\n              \"\",\r\n              \" Related functions:\",\r\n              \"\",\r\n              \"   - `ensure_can_withdraw` is always called internally but has a bounded complexity.\",\r\n              \"   - Transferring balances to accounts that did not exist before will cause\",\r\n              \"      `T::OnNewAccount::on_new_account` to be called.\",\r\n              \"   - Removing enough funds from an account will trigger `T::DustRemoval::on_unb"]
[15.563454, "o", "alanced`.\",\r\n              \"   - `transfer_keep_alive` works the same way as `transfer`, but has an additional\",\r\n              \"     check that the transfer will not kill the origin account.\",\r\n              \" ---------------------------------\",\r\n              \" - Base Weight: 73.64 µs, worst case scenario (account created, account removed)\",\r\n              \" - DB Weight: 1 Read and 1 Write to destination account\",\r\n              \" - Origin account is already in memory, so no DB operations for them.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_balance\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"new_free\",\r\n                \"ty\": \"Compact<T::Balance>\"\r\n              },\r\n              {\r\n                \"name\": \"new_reserved\",\r\n                \"ty\": \"Compact<T::Balance>\"\r\n              }\r\n            ]"]
[15.563487, "o", ",\r\n            \"documentation\": [\r\n              \" Set the balances of a given account.\",\r\n              \"\",\r\n              \" This will alter `FreeBalance` and `ReservedBalance` in storage. it will\",\r\n              \" also decrease the total issuance of the system (`TotalIssuance`).\",\r\n              \" If the new free or reserved balance is below the existential deposit,\",\r\n              \" it will reset the account nonce (`frame_system::AccountNonce`).\",\r\n              \"\",\r\n              \" The dispatch origin for this call is `root`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments.\",\r\n              \" - Contains a limited number of reads and writes.\",\r\n              \" ---------------------\",\r\n              \" - Base Weight:\",\r\n              \"     - Creating: 27.56 µs\",\r\n              \"     - Killing: 35.11 µs\",\r\n              \" - DB Weight: 1 Read, 1 Write to `who`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"f"]
[15.563534, "o", "orce_transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"source\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"dest\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<T::Balance>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Exactly as `transfer`, except the origin must be root and the source account may be\",\r\n              \" specified.\",\r\n              \" # <weight>\",\r\n              \" - Same as transfer, but additional read and write because the source account is\",\r\n              \"   not assumed to be in the overlay.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"transfer_keep_alive\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"dest\",\r\n                \"ty\": \"<T::Lookup as StaticLook"]
[15.563572, "o", "up>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<T::Balance>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Same as the [`transfer`] call, but with a check that the transfer will not kill the\",\r\n              \" origin account.\",\r\n              \"\",\r\n              \" 99% of the time you want [`transfer`] instead.\",\r\n              \"\",\r\n              \" [`transfer`]: struct.Pallet.html#method.transfer\",\r\n              \" # <weight>\",\r\n              \" - Cheaper than transfer because account cannot be killed.\",\r\n              \" - Base Weight: 51.4 µs\",\r\n              \" - DB Weight: 1 Read and 1 Write to dest (sender is in overlay already)\",\r\n              \" #</weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Endowed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An"]
[15.563606, "o", " account was created with some free balance. \\\\[account, free_balance\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DustLost\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account was removed whose balance was non-zero but below ExistentialDeposit,\",\r\n              \" resulting in an outright loss. \\\\[account, balance\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Transfer\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Transfer succeeded. \\\\[from, to, value\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BalanceSet\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A balance was set by root. \\\\[who,"]
[15.563636, "o", " free, reserved\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Deposit\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some amount was deposited (e.g. for transaction fees). \\\\[who, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Reserved\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some balance was reserved (moved from free to reserved). \\\\[who, value\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Unreserved\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some balance was unreserved (moved from reserved to free). \\\\[who, value\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ReserveRepatriated\",\r\n            \"arguments\": [\r"]
[15.563676, "o", "\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"Balance\",\r\n              \"Status\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some balance was moved from the reserve of the first account to the second account.\",\r\n              \" Final argument indicates the destination balance type.\",\r\n              \" \\\\[from, to, balance, destination_status\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"ExistentialDeposit\",\r\n            \"ty\": \"T::Balance\",\r\n            \"value\": [\r\n              0,\r\n              228,\r\n              11,\r\n              84,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum amount required to keep an account open.\"\r\n            ]\r\n          }\r\n        ],\r\n  "]
[15.563713, "o", "      \"errors\": [\r\n          {\r\n            \"name\": \"VestingBalance\",\r\n            \"documentation\": [\r\n              \" Vesting balance too high to send value\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"LiquidityRestrictions\",\r\n            \"documentation\": [\r\n              \" Account liquidity restrictions prevent withdrawal\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Overflow\",\r\n            \"documentation\": [\r\n              \" Got an overflow after adding\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InsufficientBalance\",\r\n            \"documentation\": [\r\n              \" Balance too low to send value\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ExistentialDeposit\",\r\n            \"documentation\": [\r\n              \" Value too low to create account due to existential deposit\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"KeepAlive\",\r\n            \"documentation\": [\r\n              \" Transfer/payment would kill account\"\r\n"]
[15.563761, "o", "            ]\r\n          },\r\n          {\r\n            \"name\": \"ExistingVestingSchedule\",\r\n            \"documentation\": [\r\n              \" A vesting schedule already exists for this account\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DeadAccount\",\r\n            \"documentation\": [\r\n              \" Beneficiary account must pre-exist\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 5\r\n      },\r\n      {\r\n        \"name\": \"TransactionPayment\",\r\n        \"storage\": {\r\n          \"prefix\": \"TransactionPayment\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"NextFeeMultiplier\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Multiplier\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                100,\r\n                167,\r\n                179,\r\n                182,\r\n                224,\r\n                13,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n       "]
[15.563795, "o", "         0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": []\r\n            },\r\n            {\r\n              \"name\": \"StorageVersion\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Releases\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": []\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": null,\r\n        \"event\": null,\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"TransactionByteFee\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              64,\r\n              66,\r\n              15,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The fee to be paid for making "]
[15.563837, "o", "a transaction; the per-byte portion.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WeightToFee\",\r\n            \"ty\": \"Vec<WeightToFeeCoefficient<BalanceOf<T>>>\",\r\n            \"value\": [\r\n              4,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              180,\r\n              196,\r\n              4,\r\n              0,\r\n              1\r\n            ],\r\n            \"documentation\": [\r\n              \" The polynomial that is applied in order to derive fee from weight.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [],\r\n        \"index\": 32\r\n      },\r\n      {\r\n        \"name\": \"Authorship\",\r\n        \"storage\": {\r\n          \"prefix\": \"Authorship\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Uncles\",\r\n      "]
[15.563874, "o", "        \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<UncleEntryItem<T::BlockNumber, T::Hash, T::AccountId>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Uncles\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Author\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::AccountId\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Author of current block.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DidSetUncles\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Whether uncles were already set in this block.\"\r\n              ]\r\n          "]
[15.563913, "o", "  }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"set_uncles\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new_uncles\",\r\n                \"ty\": \"Vec<T::Header>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Provide a set of uncles.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": null,\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InvalidUncleParent\",\r\n            \"documentation\": [\r\n              \" The uncle parent not in the chain.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnclesAlreadySet\",\r\n            \"documentation\": [\r\n              \" Uncles already set in the block.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyUncles\",\r\n            \"documentation\": [\r\n              \" Too many uncles.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"GenesisUncle\",\r\n            \"documentation\": [\r\n              \" Th"]
[15.563951, "o", "e uncle is genesis.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooHighUncle\",\r\n            \"documentation\": [\r\n              \" The uncle is too high in chain.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UncleAlreadyIncluded\",\r\n            \"documentation\": [\r\n              \" The uncle is already included.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"OldUncle\",\r\n            \"documentation\": [\r\n              \" The uncle isn't recent enough to be included.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 6\r\n      },\r\n      {\r\n        \"name\": \"Staking\",\r\n        \"storage\": {\r\n          \"prefix\": \"Staking\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"HistoryDepth\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                84,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentati"]
[15.563983, "o", "on\": [\r\n                \" Number of eras to keep in history.\",\r\n                \"\",\r\n                \" Information is kept for eras in `[current_era - history_depth; current_era]`.\",\r\n                \"\",\r\n                \" Must be more than the number of eras delayed by session otherwise. I.e. active era must\",\r\n                \" always be in history. I.e. `active_era > current_era - history_depth` must be\",\r\n                \" guaranteed.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ValidatorCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The ideal number of staking participants.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"MinimumValidatorCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n "]
[15.564015, "o", "               \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Minimum number of staking participants before emergency conditions are imposed.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Invulnerables\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::AccountId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Any validators that may never be slashed or forcibly kicked. It's a Vec since they're\",\r\n                \" easy to initialize and the performance hit is minimal (we expect no more than four\",\r\n                \" invulnerables) and restricted to testnets.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Bonded\",\r\n              \"modifier\": \"Optional\",\r\n          "]
[15.564125, "o", "    \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"T::AccountId\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Map from all locked \\\"stash\\\" accounts to the controller account.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Ledger\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"StakingLedger<T::AccountId, BalanceOf<T>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Map from all (unlocked) \\\"controller\\\" accounts to the info regarding the s"]
[15.564173, "o", "taking.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Payee\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"RewardDestination<T::AccountId>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Where the reward payment should be made. Keyed by stash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Validators\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"ValidatorPrefs\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0\r\n     "]
[15.564226, "o", "         ],\r\n              \"documentation\": [\r\n                \" The map from (wannabe) validator stash key to the preferences of that validator.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Nominators\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"Nominations<T::AccountId>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The map from nominator stash key to the set of stash keys of all validators to nominate.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentEra\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"EraIndex\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n            "]
[15.564263, "o", "  \"documentation\": [\r\n                \" The current era index.\",\r\n                \"\",\r\n                \" This is the latest planned era, depending on how the Session pallet queues the validator\",\r\n                \" set, it might be active or not.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ActiveEra\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"ActiveEraInfo\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The active era information, it holds index and start.\",\r\n                \"\",\r\n                \" The active era is the era being currently rewarded. Validator set of this era must be\",\r\n                \" equal to [`SessionInterface::validators`].\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasStartSessionIndex\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"h"]
[15.564325, "o", "asher\": \"Twox64Concat\",\r\n                  \"key\": \"EraIndex\",\r\n                  \"value\": \"SessionIndex\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The session index at which the era start for the last `HISTORY_DEPTH` eras.\",\r\n                \"\",\r\n                \" Note: This tracks the starting session (i.e. session index when era start being active)\",\r\n                \" for the eras in `[CurrentEra - HISTORY_DEPTH, CurrentEra]`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasStakers\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"EraIndex\",\r\n                  \"key2\": \"T::AccountId\",\r\n                  \"value\": \"Exposure<T::AccountId, BalanceOf<T>>\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                "]
[15.56438, "o", "}\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Exposure of validator at era.\",\r\n                \"\",\r\n                \" This is keyed first by the era index to allow bulk deletion and then the stash account.\",\r\n                \"\",\r\n                \" Is it removed after `HISTORY_DEPTH` eras.\",\r\n                \" If stakers hasn't been set or has been removed then empty exposure is returned.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasStakersClipped\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"EraIndex\",\r\n                  \"key2\": \"T::AccountId\",\r\n                  \"value\": \"Exposure<T::AccountId, BalanceOf<T>>\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n    "]
[15.564417, "o", "            0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Clipped Exposure of validator at era.\",\r\n                \"\",\r\n                \" This is similar to [`ErasStakers`] but number of nominators exposed is reduced to the\",\r\n                \" `T::MaxNominatorRewardedPerValidator` biggest stakers.\",\r\n                \" (Note: the field `total` and `own` of the exposure remains unchanged).\",\r\n                \" This is used to limit the i/o cost for the nominator payout.\",\r\n                \"\",\r\n                \" This is keyed fist by the era index to allow bulk deletion and then the stash account.\",\r\n                \"\",\r\n                \" Is it removed after `HISTORY_DEPTH` eras.\",\r\n                \" If stakers hasn't been set or has been removed then empty exposure is returned.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasValidatorPrefs\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n             "]
[15.564457, "o", "   \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"EraIndex\",\r\n                  \"key2\": \"T::AccountId\",\r\n                  \"value\": \"ValidatorPrefs\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Similar to `ErasStakers`, this holds the preferences of validators.\",\r\n                \"\",\r\n                \" This is keyed first by the era index to allow bulk deletion and then the stash account.\",\r\n                \"\",\r\n                \" Is it removed after `HISTORY_DEPTH` eras.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasValidatorReward\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"EraIndex\",\r\n                  \"value\": \"BalanceOf<T>\",\r\n                "]
[15.564494, "o", "  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The total validator era payout for the last `HISTORY_DEPTH` eras.\",\r\n                \"\",\r\n                \" Eras that haven't finished yet or has been removed doesn't have reward.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasRewardPoints\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"EraIndex\",\r\n                  \"value\": \"EraRewardPoints<T::AccountId>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Rewards for the last `HISTORY_DEPTH` eras.\",\r\n                \" If reward hasn"]
[15.564528, "o", "'t been set or has been removed then 0 reward is returned.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ErasTotalStake\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"EraIndex\",\r\n                  \"value\": \"BalanceOf<T>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The total amount staked for the last `HISTORY_DEPTH` eras.\",\r\n                \" If total hasn't been set or has been removed then 0 stake is returned.\"\r\n              ]\r\n "]
[15.564566, "o", "           },\r\n            {\r\n              \"name\": \"ForceEra\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Forcing\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Mode of era forcing.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SlashRewardFraction\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Perbill\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The percentage of the slash that is distributed to reporters.\",\r\n                \"\",\r\n                \" The rest of the slashed value is handled by the `Slash`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CanceledSlashPayout\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n"]
[15.564608, "o", "                \"Plain\": \"BalanceOf<T>\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The amount of currency given to reporters of a slash event which was\",\r\n                \" canceled by extraordinary circumstances (e.g. governance).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"UnappliedSlashes\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"EraIndex\",\r\n                  \"value\": \"Vec<UnappliedSlash<T::AccountId, BalanceOf<T>>>\",\r\n                  \"unused\": false\r\n                }\r\n   "]
[15.564649, "o", "           },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" All unapplied slashes that are queued for later.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"BondedEras\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(EraIndex, SessionIndex)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" A mapping from still-bonded eras to the first session index of that era.\",\r\n                \"\",\r\n                \" Must contains information for eras for the range:\",\r\n                \" `[active_era - bounding_duration; active_era]`\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ValidatorSlashInEra\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"EraInde"]
[15.564682, "o", "x\",\r\n                  \"key2\": \"T::AccountId\",\r\n                  \"value\": \"(Perbill, BalanceOf<T>)\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" All slashing events on validators, mapped by era to the highest slash proportion\",\r\n                \" and slash value of the era.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NominatorSlashInEra\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"EraIndex\",\r\n                  \"key2\": \"T::AccountId\",\r\n                  \"value\": \"BalanceOf<T>\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" All slashing events on n"]
[15.564713, "o", "ominators, mapped by era to the highest slash value of the era.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SlashingSpans\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"slashing::SlashingSpans\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Slashing spans for stash accounts.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SpanSlash\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"(T::AccountId, slashing::SpanIndex)\",\r\n                  \"value\": \"slashing::SpanRecord<BalanceOf<T>>\",\r\n                  \"unused\": false\r\n                }\r\n             "]
[15.564759, "o", " },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Records information about the maximum slash of a stash within a slashing span,\",\r\n                \" as well as how much reward has been paid out.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"EarliestUnappliedSlash\",\r\n              \"modifier\": \"Optional\","]
[15.564794, "o", "\r\n              \"ty\": {\r\n                \"Plain\": \"EraIndex\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The earliest era for which we have a pending, unapplied slash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentPlannedSession\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"SessionIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The last planned session scheduled by the session pallet.\",\r\n                \"\",\r\n                \" This is basically in sync with the call to [`SessionManager::new_session`].\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"StorageVersion\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Releases\"\r\n    "]
[15.564827, "o", "          },\r\n              \"default\": [\r\n                5\r\n              ],\r\n              \"documentation\": [\r\n                \" True if network has been upgraded to this version.\",\r\n                \" Storage version of the pallet.\",\r\n                \"\",\r\n                \" This is set to v6.0.0 for new networks.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"bond\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"controller\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              },\r\n              {\r\n                \"name\": \"payee\",\r\n                \"ty\": \"RewardDestination<T::AccountId>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Take the origin account as a stash and lock up `value` of its balance. `controller` will\",\r\n              \" be the acco"]
[15.56486, "o", "unt that controls it.\",\r\n              \"\",\r\n              \" `value` must be more than the `minimum_balance` specified by `T::Currency`.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the stash account.\",\r\n              \"\",\r\n              \" Emits `Bonded`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Moderate complexity.\",\r\n              \" - O(1).\",\r\n              \" - Three extra DB entries.\",\r\n              \"\",\r\n              \" NOTE: Two of the storage writes (`Self::bonded`, `Self::payee`) are _never_ cleaned\",\r\n              \" unless the `origin` falls below _existential deposit_ and gets removed as dust.\",\r\n              \" ------------------\",\r\n              \" Weight: O(1)\",\r\n              \" DB Weight:\",\r\n              \" - Read: Bonded, Ledger, [Origin Account], Current Era, History Depth, Locks\",\r\n              \" - Write: Bonded, Payee, [Origin Account], Locks, Ledger\",\r\n              \" # </weight>\"\r\n      "]
[15.564891, "o", "      ]\r\n          },\r\n          {\r\n            \"name\": \"bond_extra\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"max_additional\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add some extra amount that have appeared in the stash `free_balance` into the balance up\",\r\n              \" for staking.\",\r\n              \"\",\r\n              \" Use this if there are additional funds in your stash account that you wish to bond.\",\r\n              \" Unlike [`bond`] or [`unbond`] this function does not impose any limitation on the amount\",\r\n              \" that can be added.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the stash, not the controller and\",\r\n              \" it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" Emits `Bonded`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of th"]
[15.564921, "o", "e arguments. Insignificant complexity.\",\r\n              \" - O(1).\",\r\n              \" - One DB entry.\",\r\n              \" ------------\",\r\n              \" DB Weight:\",\r\n              \" - Read: Era Election Status, Bonded, Ledger, [Origin Account], Locks\",\r\n              \" - Write: [Origin Account], Locks, Ledger\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"unbond\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a portion of the stash to be unlocked ready for transfer out after the bond\",\r\n              \" period ends. If this leaves an amount actively bonded less than\",\r\n              \" T::Currency::minimum_balance(), then it is increased to the full amount.\",\r\n              \"\",\r\n              \" Once the unlock period is done, you can call `withdraw_unbonded` to actually move\",\r\n              \" t"]
[15.56496, "o", "he funds out of management ready for transfer.\",\r\n              \"\",\r\n              \" No more than a limited number of unlocking chunks (see `MAX_UNLOCKING_CHUNKS`)\",\r\n              \" can co-exists at the same time. In that case, [`Call::withdraw_unbonded`] need\",\r\n              \" to be called first to remove some of the chunks (if possible).\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \" And, it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" Emits `Unbonded`.\",\r\n              \"\",\r\n              \" See also [`Call::withdraw_unbonded`].\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Limited but potentially exploitable complexity.\",\r\n              \" - Contains a limited number of reads.\",\r\n              \" - Each call (requires the remainder of the bonded balance to be above `minimum_balance`)\",\r\n              \"   will "]
[15.564991, "o", "cause a new entry to be inserted into a vector (`Ledger.unlocking`) kept in storage.\",\r\n              \"   The only way to clean the aforementioned storage item is also user-controlled via\",\r\n              \"   `withdraw_unbonded`.\",\r\n              \" - One DB entry.\",\r\n              \" ----------\",\r\n              \" Weight: O(1)\",\r\n              \" DB Weight:\",\r\n              \" - Read: EraElectionStatus, Ledger, CurrentEra, Locks, BalanceOf Stash,\",\r\n              \" - Write: Locks, Ledger, BalanceOf Stash,\",\r\n              \" </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"withdraw_unbonded\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"num_slashing_spans\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove any unlocked chunks from the `unlocking` queue from our management.\",\r\n              \"\",\r\n              \" This essentially frees up that balance to be used by the stash account to do\",\r\n       "]
[15.56503, "o", "       \" whatever it wants.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \" And, it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" Emits `Withdrawn`.\",\r\n              \"\",\r\n              \" See also [`Call::unbond`].\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Could be dependent on the `origin` argument and how much `unlocking` chunks exist.\",\r\n              \"  It implies `consolidate_unlocked` which loops over `Ledger.unlocking`, which is\",\r\n              \"  indirectly user-controlled. See [`unbond`] for more detail.\",\r\n              \" - Contains a limited number of reads, yet the size of which could be large based on `ledger`.\",\r\n              \" - Writes are limited to the `origin` account key.\",\r\n              \" ---------------\",\r\n              \" Complexity O(S) where S is the number of slashing spans to remove\",\r\n              \" Update:\",\r\n"]
[15.56506, "o", "              \" - Reads: EraElectionStatus, Ledger, Current Era, Locks, [Origin Account]\",\r\n              \" - Writes: [Origin Account], Locks, Ledger\",\r\n              \" Kill:\",\r\n              \" - Reads: EraElectionStatus, Ledger, Current Era, Bonded, Slashing Spans, [Origin\",\r\n              \"   Account], Locks, BalanceOf stash\",\r\n              \" - Writes: Bonded, Slashing Spans (if S > 0), Ledger, Payee, Validators, Nominators,\",\r\n              \"   [Origin Account], Locks, BalanceOf stash.\",\r\n              \" - Writes Each: SpanSlash * S\",\r\n              \" NOTE: Weight annotation is the kill scenario, we refund otherwise.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"validate\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"prefs\",\r\n                \"ty\": \"ValidatorPrefs\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Declare the desire to validate for the origin controller.\",\r\n              \"\",\r\n       "]
[15.565101, "o", "       \" Effects will be felt at the beginning of the next era.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \" And, it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Insignificant complexity.\",\r\n              \" - Contains a limited number of reads.\",\r\n              \" - Writes are limited to the `origin` account key.\",\r\n              \" -----------\",\r\n              \" Weight: O(1)\",\r\n              \" DB Weight:\",\r\n              \" - Read: Era Election Status, Ledger\",\r\n              \" - Write: Nominators, Validators\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"nominate\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"targets\",\r\n                \"ty\": \"Vec<<T::Lookup as StaticLookup>::Source>\"\r\n              }\r\n            ],\r\n            "]
[15.565133, "o", "\"documentation\": [\r\n              \" Declare the desire to nominate `targets` for the origin controller.\",\r\n              \"\",\r\n              \" Effects will be felt at the beginning of the next era. This can only be called when\",\r\n              \" [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \" And, it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - The transaction's complexity is proportional to the size of `targets` (N)\",\r\n              \" which is capped at CompactAssignments::LIMIT (MAX_NOMINATIONS).\",\r\n              \" - Both the reads and writes follow a similar pattern.\",\r\n              \" ---------\",\r\n              \" Weight: O(N)\",\r\n              \" where N is the number of targets\",\r\n              \" DB Weight:\",\r\n              \" - Reads: Era Election Status, Ledger, Current Era\",\r\n              \" - Wr"]
[15.565166, "o", "ites: Validators, Nominators\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"chill\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Declare no desire to either validate or nominate.\",\r\n              \"\",\r\n              \" Effects will be felt at the beginning of the next era.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \" And, it can be only called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Insignificant complexity.\",\r\n              \" - Contains one read.\",\r\n              \" - Writes are limited to the `origin` account key.\",\r\n              \" --------\",\r\n              \" Weight: O(1)\",\r\n              \" DB Weight:\",\r\n              \" - Read: EraElectionStatus, Ledger\",\r\n              \" - Write: Validators, Nominators\",\r\n              \" # </weight>\""]
[15.5652, "o", "\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_payee\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"payee\",\r\n                \"ty\": \"RewardDestination<T::AccountId>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" (Re-)set the payment target for a controller.\",\r\n              \"\",\r\n              \" Effects will be felt at the beginning of the next era.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Insignificant complexity.\",\r\n              \" - Contains a limited number of reads.\",\r\n              \" - Writes are limited to the `origin` account key.\",\r\n              \" ---------\",\r\n              \" - Weight: O(1)\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Ledger\",\r\n              \"     - Write: Payee\",\r\n              \" # </weight>\"\r\n           "]
[15.565231, "o", " ]\r\n          },\r\n          {\r\n            \"name\": \"set_controller\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"controller\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" (Re-)set the controller of a stash.\",\r\n              \"\",\r\n              \" Effects will be felt at the beginning of the next era.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the stash, not the controller.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Independent of the arguments. Insignificant complexity.\",\r\n              \" - Contains a limited number of reads.\",\r\n              \" - Writes are limited to the `origin` account key.\",\r\n              \" ----------\",\r\n              \" Weight: O(1)\",\r\n              \" DB Weight:\",\r\n              \" - Read: Bonded, Ledger New Controller, Ledger Old Controller\",\r\n              \" - Write: Bonded, Ledger New Contr"]
[15.565262, "o", "oller, Ledger Old Controller\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_validator_count\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Sets the ideal number of validators.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight: O(1)\",\r\n              \" Write: Validator Count\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"increase_validator_count\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"additional\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Increments the ideal number of validators.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n   "]
[15.565316, "o", "           \"\",\r\n              \" # <weight>\",\r\n              \" Same as [`set_validator_count`].\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"scale_validator_count\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"factor\",\r\n                \"ty\": \"Percent\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Scale up the ideal number of validators by a factor.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Same as [`set_validator_count`].\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_no_eras\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Force there to be no new eras indefinitely.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - No argument"]
[15.565349, "o", "s.\",\r\n              \" - Weight: O(1)\",\r\n              \" - Write: ForceEra\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_new_era\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Force there to be a new era at the end of the next session. After this, it will be\",\r\n              \" reset to normal (non-forced) behaviour.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - No arguments.\",\r\n              \" - Weight: O(1)\",\r\n              \" - Write ForceEra\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_invulnerables\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"invulnerables\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the validators who cannot be slashed (if any).\",\r\n         "]
[15.565398, "o", "     \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(V)\",\r\n              \" - Write: Invulnerables\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_unstake\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"stash\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"num_slashing_spans\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Force a current staker to become completely unstaked, immediately.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" O(S) where S is the number of slashing spans to be removed\",\r\n              \" Reads: Bonded, Slashing Spans, Account, Locks\",\r\n              \" Writes: Bonded, Slashing Spans (if S > 0), Ledger, Payee, Validators, Nomin"]
[15.565434, "o", "ators, Account, Locks\",\r\n              \" Writes Each: SpanSlash * S\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_new_era_always\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Force there to be a new era at the end of sessions indefinitely.\",\r\n              \"\",\r\n              \" The dispatch origin must be Root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Weight: O(1)\",\r\n              \" - Write: ForceEra\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_deferred_slash\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"era\",\r\n                \"ty\": \"EraIndex\"\r\n              },\r\n              {\r\n                \"name\": \"slash_indices\",\r\n                \"ty\": \"Vec<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel enactment of a deferred slash.\",\r\n              \"\",\r\n              \" C"]
[15.565467, "o", "an be called by the `T::SlashCancelOrigin`.\",\r\n              \"\",\r\n              \" Parameters: era and indices of the slashes for that era to kill.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Complexity: O(U + S)\",\r\n              \" with U unapplied slashes weighted with U=1000\",\r\n              \" and S is the number of slash indices to be canceled.\",\r\n              \" - Read: Unapplied Slashes\",\r\n              \" - Write: Unapplied Slashes\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"payout_stakers\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"validator_stash\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"era\",\r\n                \"ty\": \"EraIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Pay out all the stakers behind a single validator for a single era.\",\r\n              \"\",\r\n              \" - `validator_stash` is the stas"]
[15.5655, "o", "h account of the validator. Their nominators, up to\",\r\n              \"   `T::MaxNominatorRewardedPerValidator`, will also receive their rewards.\",\r\n              \" - `era` may be any era between `[current_era - history_depth; current_era]`.\",\r\n              \"\",\r\n              \" The origin of this call must be _Signed_. Any account can call this function, even if\",\r\n              \" it is not one of the stakers.\",\r\n              \"\",\r\n              \" This can only be called when [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Time complexity: at most O(MaxNominatorRewardedPerValidator).\",\r\n              \" - Contains a limited number of reads and writes.\",\r\n              \" -----------\",\r\n              \" N is the Number of payouts for the validator (including the validator)\",\r\n              \" Weight:\",\r\n              \" - Reward Destination Staked: O(N)\",\r\n              \" - Reward Destination Controller (Creating): O(N)\",\r\n              \" DB Weight:\",\r\n      "]
[15.565531, "o", "        \" - Read: EraElectionStatus, CurrentEra, HistoryDepth, ErasValidatorReward,\",\r\n              \"         ErasStakersClipped, ErasRewardPoints, ErasValidatorPrefs (8 items)\",\r\n              \" - Read Each: Bonded, Ledger, Payee, Locks, System Account (5 items)\",\r\n              \" - Write Each: System Account, Locks, Ledger (3 items)\",\r\n              \"\",\r\n              \"   NOTE: weights are assuming that payouts are made to alive stash account (Staked).\",\r\n              \"   Paying even a dead controller is cheaper weight-wise. We don't do any refunds here.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"rebond\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Rebond a portion of the stash scheduled to be unlocked.\",\r\n              \"\",\r\n              \" The dispatch origin must be signed by the controller"]
[15.565562, "o", ", and it can be only called when\",\r\n              \" [`EraElectionStatus`] is `Closed`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Time complexity: O(L), where L is unlocking chunks\",\r\n              \" - Bounded by `MAX_UNLOCKING_CHUNKS`.\",\r\n              \" - Storage changes: Can't increase storage, only decrease it.\",\r\n              \" ---------------\",\r\n              \" - DB Weight:\",\r\n              \"     - Reads: EraElectionStatus, Ledger, Locks, [Origin Account]\",\r\n              \"     - Writes: [Origin Account], Locks, Ledger\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_history_depth\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new_history_depth\",\r\n                \"ty\": \"Compact<EraIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"_era_items_deleted\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set `HistoryD"]
[15.565612, "o", "epth` value. This function will delete any history information\",\r\n              \" when `HistoryDepth` is reduced.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `new_history_depth`: The new history depth you would like to set.\",\r\n              \" - `era_items_deleted`: The number of items that will be deleted by this dispatch.\",\r\n              \"    This should report all the storage items that will be deleted by clearing old\",\r\n              \"    era history. Needed to report an accurate weight for the dispatch. Trusted by\",\r\n              \"    `Root` to report an accurate number.\",\r\n              \"\",\r\n              \" Origin must be root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - E: Number of history depths removed, i.e. 10 -> 7 = 3\",\r\n              \" - Weight: O(E)\",\r\n              \" - DB Weight:\",\r\n              \"     - Reads: Current Era, History Depth\",\r\n              \"     - Writes: History Depth\",\r\n              \"     - Clear Prefix Each: Era Stakers, E"]
[15.565649, "o", "raStakersClipped, ErasValidatorPrefs\",\r\n              \"     - Writes Each: ErasValidatorReward, ErasRewardPoints, ErasTotalStake, ErasStartSessionIndex\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"reap_stash\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"stash\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"num_slashing_spans\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove all data structure concerning a staker/stash once its balance is at the minimum.\",\r\n              \" This is essentially equivalent to `withdraw_unbonded` except it can be called by anyone\",\r\n              \" and the target `stash` must have no funds left beyond the ED.\",\r\n              \"\",\r\n              \" This can be called from any origin.\",\r\n              \"\",\r\n              \" - `stash`: The stash account to reap. Its balance must be zero.\","]
[15.565757, "o", "\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Complexity: O(S) where S is the number of slashing spans on the account.\",\r\n              \" DB Weight:\",\r\n              \" - Reads: Stash Account, Bonded, Slashing Spans, Locks\",\r\n              \" - Writes: Bonded, Slashing Spans (if S > 0), Ledger, Payee, Validators, Nominators, Stash Account, Locks\",\r\n              \" - Writes Each: SpanSlash * S\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"kick\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"Vec<<T::Lookup as StaticLookup>::Source>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove the given nominations from the calling validator.\",\r\n              \"\",\r\n              \" Effects will be felt at the beginning of the next era.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ by the controller, not the stash.\",\r\n     "]
[15.585086, "o", "         \" And, it can be only called when [`EraElectionStatus`] is `Closed`. The controller\",\r\n              \" account should represent a validator.\",\r\n              \"\",\r\n              \" - `who`: A list of nominator stash accounts who are nominating this validator which\",\r\n              \"   should no longer be nominating this validator.\",\r\n              \"\",\r\n              \" Note: Making this call only makes sense if you first set the validator preferences to\",\r\n              \" block any further nominations.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"EraPayout\",\r\n            \"arguments\": [\r\n              \"EraIndex\",\r\n              \"Balance\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" The era payout has been set; the first balance is the validator-payout; the second is\",\r\n              \" the remainder from the maximum amount of reward.\",\r\n              \" \\\\[era_index, validator_payout, remainder\\\\]\"\r\n           "]
[15.585257, "o", " ]\r\n          },\r\n          {\r\n            \"name\": \"Reward\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" The staker has been rewarded by this amount. \\\\[stash, amount\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Slash\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" One validator (and its nominators) has been slashed by the given amount.\",\r\n              \" \\\\[validator, amount\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"OldSlashingReportDiscarded\",\r\n            \"arguments\": [\r\n              \"SessionIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An old slashing report from a prior era was discarded because it could\",\r\n              \" not be processed. \\\\[session_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Staking"]
[15.585317, "o", "Election\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" A new set of stakers was elected.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Bonded\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has bonded this amount. \\\\[stash, amount\\\\]\",\r\n              \"\",\r\n              \" NOTE: This event is only emitted when funds are bonded via a dispatchable. Notably,\",\r\n              \" it will not be emitted for staking rewards when they are added to stake.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Unbonded\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has unbonded this amount. \\\\[stash, amount\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Withdrawn\",\r\n            \"arguments\": [\r\n              \"AccountId\","]
[15.585367, "o", "\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has called `withdraw_unbonded` and removed unbonding chunks worth `Balance`\",\r\n              \" from the unlocking queue. \\\\[stash, amount\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Kicked\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A nominator has been kicked from a validator. \\\\[nominator, stash\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"SessionsPerEra\",\r\n            \"ty\": \"SessionIndex\",\r\n            \"value\": [\r\n              6,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Number of sessions per era.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BondingDuration\",\r\n            \"ty\": \"EraIndex\",\r\n            \"value\": [\r\n           "]
[15.585436, "o", "   28,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Number of eras that staked funds must remain bonded for.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SlashDeferDuration\",\r\n            \"ty\": \"EraIndex\",\r\n            \"value\": [\r\n              27,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Number of eras that slashes are deferred by, after computation.\",\r\n              \"\",\r\n              \" This should be less than the bonding duration.\",\r\n              \" Set to 0 if slashes should be applied immediately, without opportunity for\",\r\n              \" intervention.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxNominatorRewardedPerValidator\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              0,\r\n              1,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Th"]
[15.585487, "o", "e maximum number of nominators rewarded for each validator.\",\r\n              \"\",\r\n              \" For each validator only the `$MaxNominatorRewardedPerValidator` biggest stakers can claim\",\r\n              \" their reward. This used to limit the i/o cost for the nominator payout.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxNominations\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              16,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Maximum number of nominations per nominator.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"NotController\",\r\n            \"documentation\": [\r\n              \" Not a controller account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotStash\",\r\n            \"documentation\": [\r\n              \" Not a stash account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyBonded\",\r\n            \"do"]
[15.5856, "o", "cumentation\": [\r\n              \" Stash is already bonded.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyPaired\",\r\n            \"documentation\": [\r\n              \" Controller is already paired.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"EmptyTargets\",\r\n            \"documentation\": [\r\n              \" Targets cannot be empty.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateIndex\",\r\n            \"documentation\": [\r\n              \" Duplicate index.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidSlashIndex\",\r\n            \"documentation\": [\r\n              \" Slash record index out of bounds.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InsufficientValue\",\r\n            \"documentation\": [\r\n              \" Can not bond with value less than minimum balance.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoMoreChunks\",\r\n            \"documentation\": [\r\n              \" Can not schedule more "]
[15.5857, "o", "unlock chunks.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoUnlockChunk\",\r\n            \"documentation\": [\r\n              \" Can not rebond without unlocking chunks.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"FundedTarget\",\r\n            \"documentation\": [\r\n              \" Attempting to target a stash that still has funds.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidEraToReward\",\r\n            \"documentation\": [\r\n              \" Invalid era to reward.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidNumberOfNominations\",\r\n            \"documentation\": [\r\n              \" Invalid number of nominations.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotSortedAndUnique\",\r\n            \"documentation\": [\r\n              \" Items are not sorted and unique.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyClaimed\",\r\n            \"documentation\": [\r\n              \" Rewards for this era have a"]
[15.585761, "o", "lready been claimed for this validator.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IncorrectHistoryDepth\",\r\n            \"documentation\": [\r\n              \" Incorrect previous history depth input provided.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IncorrectSlashingSpans\",\r\n            \"documentation\": [\r\n              \" Incorrect number of slashing spans provided.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BadState\",\r\n            \"documentation\": [\r\n              \" Internal state has become somehow corrupted and the operation cannot continue.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyTargets\",\r\n            \"documentation\": [\r\n              \" Too many nomination targets supplied.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BadTarget\",\r\n            \"documentation\": [\r\n              \" A nomination target was supplied that was blocked or otherwise not a validator.\"\r\n            ]\r\n          }\r\n    "]
[15.585797, "o", "    ],\r\n        \"index\": 7\r\n      },\r\n      {\r\n        \"name\": \"Offences\",\r\n        \"storage\": {\r\n          \"prefix\": \"Offences\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Reports\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"ReportIdOf<T>\",\r\n                  \"value\": \"OffenceDetails<T::AccountId, T::IdentificationTuple>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The primary structure that holds all offence records keyed by report identifiers.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DeferredOffences\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<DeferredOffenceOf<T>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],"]
[15.585831, "o", "\r\n              \"documentation\": [\r\n                \" Deferred reports that have been rejected by the offence handler and need to be submitted\",\r\n                \" at a later time.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ConcurrentReportsIndex\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"Kind\",\r\n                  \"key2\": \"OpaqueTimeSlot\",\r\n                  \"value\": \"Vec<ReportIdOf<T>>\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" A vector of reports of the same kind that happened at the same time slot.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ReportsByKindIndex\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                 "]
[15.585862, "o", " \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"Kind\",\r\n                  \"value\": \"Vec<u8>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Enumerates all reports of a kind along with the time they happened.\",\r\n                \"\",\r\n                \" All reports are sorted by the time of offence.\",\r\n                \"\",\r\n                \" Note that the actual type of this mapping is `Vec<u8>`, this is because values of\",\r\n                \" different types are not supported at the moment so we are doing the manual serialization.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Offence\",\r\n            \"arguments\": [\r\n              \"Kind\",\r\n              \"OpaqueTimeSlot\",\r\n              \"bool\"\r\n            ],\r\n            \"documentation\": [\r\n              \" There is an offence report"]
[15.585913, "o", "ed of the given `kind` happened at the `session_index` and\",\r\n              \" (kind-specific) time slot. This event is not deposited for duplicate slashes. last\",\r\n              \" element indicates of the offence was applied (true) or queued (false)\",\r\n              \" \\\\[kind, timeslot, applied\\\\].\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 8\r\n      },\r\n      {\r\n        \"name\": \"Historical\",\r\n        \"storage\": null,\r\n        \"calls\": null,\r\n        \"event\": null,\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 33\r\n      },\r\n      {\r\n        \"name\": \"Session\",\r\n        \"storage\": {\r\n          \"prefix\": \"Session\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Validators\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::ValidatorId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                "]
[15.585964, "o", "\" The current set of validators.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentIndex\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"SessionIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current index of the session.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"QueuedChanged\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" True if the underlying economic identities or weighting behind the validators\",\r\n                \" has changed in the queued validator set.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"QueuedKeys\",\r\n              \"modifier\": \"De"]
[15.586006, "o", "fault\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(T::ValidatorId, T::Keys)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The queued keys for the next session. When the next session begins, these keys\",\r\n                \" will be used to determine the validator's session keys.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DisabledValidators\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<u32>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Indices of disabled validators.\",\r\n                \"\",\r\n                \" The set is cleared when `on_session_ending` returns a new set of identities.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextKeys\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                "]
[15.586064, "o", "\"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::ValidatorId\",\r\n                  \"value\": \"T::Keys\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The next session keys for a validator.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"KeyOwner\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"(KeyTypeId, Vec<u8>)\",\r\n                  \"value\": \"T::ValidatorId\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The owner of a key. The key is the `KeyTypeId` + the encoded key.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          "]
[15.586214, "o", "{\r\n            \"name\": \"set_keys\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"keys\",\r\n                \"ty\": \"T::Keys\"\r\n              },\r\n              {\r\n                \"name\": \"proof\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Sets the session key(s) of the function caller to `keys`.\",\r\n              \" Allows an account to set its session key prior to becoming a validator.\",\r\n              \" This doesn't take effect until the next session.\",\r\n              \"\",\r\n              \" The dispatch origin of this function must be signed.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(1)`\",\r\n              \"   Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.\",\r\n              \" - DbReads: `origin account`, `T::ValidatorIdOf`, `NextKeys`\",\r\n              \" - DbWrites: `origin account`, `NextKeys`\",\r\n              \" - DbReads per key id: `KeyOwner`\","]
[15.586289, "o", "\r\n              \" - DbWrites per key id: `KeyOwner`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"purge_keys\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Removes any session key(s) of the function caller.\",\r\n              \" This doesn't take effect until the next session.\",\r\n              \"\",\r\n              \" The dispatch origin of this function must be signed.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(1)` in number of key types.\",\r\n              \"   Actual cost depends on the number of length of `T::Keys::key_ids()` which is fixed.\",\r\n              \" - DbReads: `T::ValidatorIdOf`, `NextKeys`, `origin account`\",\r\n              \" - DbWrites: `NextKeys`, `origin account`\",\r\n              \" - DbWrites per key id: `KeyOwnder`\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"NewSession\",\r\n            \"arguments"]
[15.586378, "o", "\": [\r\n              \"SessionIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" New session has happened. Note that the argument is the \\\\[session_index\\\\], not the block\",\r\n              \" number as the type might suggest.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InvalidProof\",\r\n            \"documentation\": [\r\n              \" Invalid ownership proof.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoAssociatedValidatorId\",\r\n            \"documentation\": [\r\n              \" No associated validator ID for account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicatedKey\",\r\n            \"documentation\": [\r\n              \" Registered duplicate key.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoKeys\",\r\n            \"documentation\": [\r\n              \" No keys are associated with this account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"No"]
[15.586482, "o", "Account\",\r\n            \"documentation\": [\r\n              \" Key setting account is not live, so it's impossible to associate keys.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 9\r\n      },\r\n      {\r\n        \"name\": \"Grandpa\",\r\n        \"storage\": {\r\n          \"prefix\": \"GrandpaFinality\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"State\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"StoredState<T::BlockNumber>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" State of the current authority set.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"PendingChange\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"StoredPendingChange<T::BlockNumber>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Pending chang"]
[15.586564, "o", "e: (signaled at, scheduled change).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextForced\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::BlockNumber\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" next block number where we can force a change.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Stalled\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"(T::BlockNumber, T::BlockNumber)\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" `true` if we are currently stalled.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentSetId\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"SetId\"\r\n              },\r\n              \"default\": [\r\n      "]
[15.586627, "o", "          0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The number of changes (both in terms of keys and underlying economic responsibilities)\",\r\n                \" in the \\\"set\\\" of Grandpa validators from genesis.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SetIdSession\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"SetId\",\r\n                  \"value\": \"SessionIndex\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" A mapping from grandpa set ID to the index of the *most recent* session for which its\",\r\n                \" members were responsible.\",\r\n                "]
[15.586738, "o", "\"\",\r\n                \" TWOX-NOTE: `SetId` is not under user control.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"report_equivocation\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"equivocation_proof\",\r\n                \"ty\": \"EquivocationProof<T::Hash, T::BlockNumber>\"\r\n              },\r\n              {\r\n                \"name\": \"key_owner_proof\",\r\n                \"ty\": \"T::KeyOwnerProof\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Report voter equivocation/misbehavior. This method will verify the\",\r\n              \" equivocation proof and validate the given key ownership proof\",\r\n              \" against the extracted offender. If both are valid, the offence\",\r\n              \" will be reported.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"report_equivocation_unsigned\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"equivocation_proof\",\r\n "]
[15.586793, "o", "               \"ty\": \"EquivocationProof<T::Hash, T::BlockNumber>\"\r\n              },\r\n              {\r\n                \"name\": \"key_owner_proof\",\r\n                \"ty\": \"T::KeyOwnerProof\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Report voter equivocation/misbehavior. This method will verify the\",\r\n              \" equivocation proof and validate the given key ownership proof\",\r\n              \" against the extracted offender. If both are valid, the offence\",\r\n              \" will be reported.\",\r\n              \"\",\r\n              \" This extrinsic must be called unsigned and it is expected that only\",\r\n              \" block authors will call it (validated in `ValidateUnsigned`), as such\",\r\n              \" if the block author is defined it will be defined as the equivocation\",\r\n              \" reporter.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"note_stalled\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"delay\",\r\n               "]
[15.586831, "o", " \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"best_finalized_block_number\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Note that the current authority set of the GRANDPA finality gadget has\",\r\n              \" stalled. This will trigger a forced authority set change at the beginning\",\r\n              \" of the next session, to be enacted `delay` blocks after that. The delay\",\r\n              \" should be high enough to safely assume that the block signalling the\",\r\n              \" forced change will not be re-orged (e.g. 1000 blocks). The GRANDPA voters\",\r\n              \" will start the new authority set using the given finalized block as base.\",\r\n              \" Only callable by root.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"NewAuthorities\",\r\n            \"arguments\": [\r\n              \"AuthorityList\"\r\n            ],\r\n            \"documentation\""]
[15.586877, "o", ": [\r\n              \" New authority set has been applied. \\\\[authority_set\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Paused\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Current authority set has been paused.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Resumed\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Current authority set has been resumed.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"PauseFailed\",\r\n            \"documentation\": [\r\n              \" Attempt to signal GRANDPA pause when the authority set isn't live\",\r\n              \" (either paused or already pending pause).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ResumeFailed\",\r\n            \"documentation\": [\r\n              \" Attempt to signal GRANDPA resume when the authority set isn't paused\",\r\n              \" (either live or already pending"]
[15.586928, "o", " resume).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ChangePending\",\r\n            \"documentation\": [\r\n              \" Attempt to signal GRANDPA change with one already pending.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooSoon\",\r\n            \"documentation\": [\r\n              \" Cannot signal forced change so soon after last.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidKeyOwnershipProof\",\r\n            \"documentation\": [\r\n              \" A key ownership proof provided as part of an equivocation report is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidEquivocationProof\",\r\n            \"documentation\": [\r\n              \" An equivocation proof provided as part of an equivocation report is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateOffenceReport\",\r\n            \"documentation\": [\r\n              \" A given equivocation report is valid but already previously reported.\"\r\n      "]
[15.586973, "o", "      ]\r\n          }\r\n        ],\r\n        \"index\": 11\r\n      },\r\n      {\r\n        \"name\": \"ImOnline\",\r\n        \"storage\": {\r\n          \"prefix\": \"ImOnline\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"HeartbeatAfter\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::BlockNumber\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The block number after which it's ok to send heartbeats in the current\",\r\n                \" session.\",\r\n                \"\",\r\n                \" At the beginning of each session we set this to a value that should fall\",\r\n                \" roughly in the middle of the session duration. The idea is to first wait for\",\r\n                \" the validators to produce a block in the current session, so that the\",\r\n                \" heartbeat later on will not be necessary.\",\r\n                "]
[15.58699, "o", "\"\",\r\n                \" This value will only be used as a fallback if we fail to get a proper session\",\r\n                \" progress estimate from `NextSessionRotation`, as those estimates should be\",\r\n                \" more accurate then the value we calculate for `HeartbeatAfter`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Keys\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::AuthorityId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current set of keys that may issue a heartbeat.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ReceivedHeartbeats\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"SessionIndex\",\r\n                  \"key2\": \"AuthIndex\",\r\n                  \"value\": \"Vec<u8>\",\r\n         "]
[15.587055, "o", "         \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" For each session index, we keep a mapping of `AuthIndex` to\",\r\n                \" `offchain::OpaqueNetworkState`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"AuthoredBlocks\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"SessionIndex\",\r\n                  \"key2\": \"ValidatorId<T>\",\r\n                  \"value\": \"u32\",\r\n                  \"key2_hasher\": \"Twox64Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" For each session index, we keep a mapping of `ValidatorId<T>` to the\",\r\n                \" number of bl"]
[15.587156, "o", "ocks authored by the given authority.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"heartbeat\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"heartbeat\",\r\n                \"ty\": \"Heartbeat<T::BlockNumber>\"\r\n              },\r\n              {\r\n                \"name\": \"_signature\",\r\n                \"ty\": \"<T::AuthorityId as RuntimeAppPublic>::Signature\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(K + E)` where K is length of `Keys` (heartbeat.validators_len)\",\r\n              \"   and E is length of `heartbeat.network_state.external_address`\",\r\n              \"   - `O(K)`: decoding of length `K`\",\r\n              \"   - `O(E)`: decoding/encoding of length `E`\",\r\n              \" - DbReads: pallet_session `Validators`, pallet_session `CurrentIndex`, `Keys`,\",\r\n              \"   `ReceivedHeartbeats`\",\r\n              \" - DbWrites: `ReceivedHeartbea"]
[15.587252, "o", "ts`\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"HeartbeatReceived\",\r\n            \"arguments\": [\r\n              \"AuthorityId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A new heartbeat was received from `AuthorityId` \\\\[authority_id\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AllGood\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" At the end of the session, no offence was committed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SomeOffline\",\r\n            \"arguments\": [\r\n              \"Vec<IdentificationTuple>\"\r\n            ],\r\n            \"documentation\": [\r\n              \" At the end of the session, at least one validator was found to be \\\\[offline\\\\].\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InvalidKey\",\r\n            \"documentation\": [\r\n             "]
[15.587351, "o", " \" Non existent public key.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicatedHeartbeat\",\r\n            \"documentation\": [\r\n              \" Duplicated heartbeat.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 12\r\n      },\r\n      {\r\n        \"name\": \"AuthorityDiscovery\",\r\n        \"storage\": null,\r\n        \"calls\": [],\r\n        \"event\": null,\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 13\r\n      },\r\n      {\r\n        \"name\": \"Democracy\",\r\n        \"storage\": {\r\n          \"prefix\": \"Democracy\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"PublicPropCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"PropIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The number of (public) proposals that have been made so far.\"\r\n              ]\r\n            },\r"]
[15.587433, "o", "\r\n            {\r\n              \"name\": \"PublicProps\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(PropIndex, T::Hash, T::AccountId)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The public proposals. Unsorted. The second item is the proposal's hash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DepositOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"PropIndex\",\r\n                  \"value\": \"(Vec<T::AccountId>, BalanceOf<T>)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Those who have locked a deposit.\",\r\n                \"\",\r\n                \" TWOX-NOTE: Safe, as increasing integer keys ar"]
[15.587513, "o", "e safe.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Preimages\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"PreimageStatus<T::AccountId, BalanceOf<T>, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Map of hashes to the proposal preimage, along with who registered it and their deposit.\",\r\n                \" The block number is the block at which it was deposited.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ReferendumCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"ReferendumIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                "]
[15.58758, "o", "0\r\n              ],\r\n              \"documentation\": [\r\n                \" The next free referendum index, aka the number of referenda started so far.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"LowestUnbaked\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"ReferendumIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The lowest referendum index representing an unbaked referendum. Equal to\",\r\n                \" `ReferendumCount` if there isn't a unbaked referendum.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ReferendumInfoOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"ReferendumIndex\",\r\n                  \"value\": \"ReferendumInfo<T::BlockNumber, T::Has"]
[15.587624, "o", "h, BalanceOf<T>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Information concerning any given referendum.\",\r\n                \"\",\r\n                \" TWOX-NOTE: SAFE as indexes are not under an attacker’s control.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"VotingOf\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"Voting<BalanceOf<T>, T::AccountId, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n "]
[15.587677, "o", "               0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" All votes for a particular voter. We store the balance for the number of votes that we\",\r\n      "]
[15.587715, "o", "          \" have recorded. The second item is the total amount of delegations, that will be added.\",\r\n                \"\",\r\n                \" TWOX-NOTE: SAFE as `AccountId`s are crypto hashes anyway.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Locks\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"T::BlockNumber\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Accounts for which there are locks in action which may be removed at some point in the\",\r\n                \" future. The value is the block number at which the lock expires and may be removed.\",\r\n                \"\",\r\n                \" TWOX-NOTE: OK ― `AccountId` is a secure hash.\"\r\n              ]\r\n            },\r\n            {\r\n "]
[15.587764, "o", "             \"name\": \"LastTabledWasExternal\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"bool\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" True if the last referendum tabled was submitted externally. False if it was a public\",\r\n                \" proposal.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"NextExternal\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"(T::Hash, VoteThreshold)\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The referendum to be tabled whenever it would be valid to table an external proposal.\",\r\n                \" This happens when a referendum needs to be tabled and one of two conditions are met:\",\r\n                \" - `LastTabledWasExternal` is `false`; or\",\r\n                \" - `PublicProps` i"]
[15.587812, "o", "s empty.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Blacklist\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"(T::BlockNumber, Vec<T::AccountId>)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" A record of who vetoed what. Maps proposal hash to a possible existent block number\",\r\n                \" (until when it may not be resubmitted) and who vetoed it.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Cancellations\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"bool\",\r\n                  \"unused\": false\r\n                }\r"]
[15.587883, "o", "\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Record of all proposals that have been subject to emergency cancellation.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"StorageVersion\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"Releases\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Storage version of the pallet.\",\r\n                \"\",\r\n                \" New networks start with last version.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"propose\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n"]
[15.587941, "o", "            ],\r\n            \"documentation\": [\r\n              \" Propose a sensitive action to be taken.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_ and the sender must\",\r\n              \" have funds to cover the deposit.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The hash of the proposal preimage.\",\r\n              \" - `value`: The amount of deposit (must be at least `MinimumDeposit`).\",\r\n              \"\",\r\n              \" Emits `Proposed`.\",\r\n              \"\",\r\n              \" Weight: `O(p)`\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"second\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"Compact<PropIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"seconds_upper_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Signals agreement with a particular proposal.\",\r\n              \"\",\r"]
[15.587996, "o", "\r\n              \" The dispatch origin of this call must be _Signed_ and the sender\",\r\n              \" must have funds to cover the deposit, equal to the original deposit.\",\r\n              \"\",\r\n              \" - `proposal`: The index of the proposal to second.\",\r\n              \" - `seconds_upper_bound`: an upper bound on the current number of seconds on this\",\r\n              \"   proposal. Extrinsic is weighted according to this value with no refund.\",\r\n              \"\",\r\n              \" Weight: `O(S)` where S is the number of seconds a proposal already has.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"vote\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"ref_index\",\r\n                \"ty\": \"Compact<ReferendumIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"vote\",\r\n                \"ty\": \"AccountVote<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Vote in a referendum. If `vote.is_aye()`, the vote is t"]
[15.588054, "o", "o enact the proposal;\",\r\n              \" otherwise it is a vote to keep the status quo.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `ref_index`: The index of the referendum to vote for.\",\r\n              \" - `vote`: The vote configuration.\",\r\n              \"\",\r\n              \" Weight: `O(R)` where R is the number of referendums the voter has voted on.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"emergency_cancel\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"ref_index\",\r\n                \"ty\": \"ReferendumIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule an emergency cancellation of a referendum. Cannot happen twice to the same\",\r\n              \" referendum.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be `CancellationOrigin`.\",\r\n              \"\",\r\n              \" -`ref_index`: The index of the referendum "]
[15.588264, "o", "to cancel.\",\r\n              \"\",\r\n              \" Weight: `O(1)`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"external_propose\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a referendum to be tabled once it is legal to schedule an external\",\r\n              \" referendum.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be `ExternalOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The preimage hash of the proposal.\",\r\n              \"\",\r\n              \" Weight: `O(V)` with V number of vetoers in the blacklist of proposal.\",\r\n              \"   Decoding vec of length V. Charged as maximum\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"external_propose_majority\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": "]
[15.588324, "o", "\"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a majority-carries referendum to be tabled next once it is legal to schedule\",\r\n              \" an external referendum.\",\r\n              \"\",\r\n              \" The dispatch of this call must be `ExternalMajorityOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The preimage hash of the proposal.\",\r\n              \"\",\r\n              \" Unlike `external_propose`, blacklisting has no effect on this and it may replace a\",\r\n              \" pre-scheduled `external_propose` call.\",\r\n              \"\",\r\n              \" Weight: `O(1)`\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"external_propose_default\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule a negative-turnout-bias referendum to be tabled next once it is legal to\",\r\n  "]
[15.588379, "o", "            \" schedule an external referendum.\",\r\n              \"\",\r\n              \" The dispatch of this call must be `ExternalDefaultOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The preimage hash of the proposal.\",\r\n              \"\",\r\n              \" Unlike `external_propose`, blacklisting has no effect on this and it may replace a\",\r\n              \" pre-scheduled `external_propose` call.\",\r\n              \"\",\r\n              \" Weight: `O(1)`\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"fast_track\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"voting_period\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n                \"name\": \"delay\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Schedule the currently externally-proposed majorit"]
[15.588421, "o", "y-carries referendum to be tabled\",\r\n              \" immediately. If there is no externally-proposed referendum currently, or if there is one\",\r\n              \" but it is not a majority-carries referendum then it fails.\",\r\n              \"\",\r\n              \" The dispatch of this call must be `FastTrackOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The hash of the current external proposal.\",\r\n              \" - `voting_period`: The period that is allowed for voting on this proposal. Increased to\",\r\n              \"   `FastTrackVotingPeriod` if too low.\",\r\n              \" - `delay`: The number of block after voting has ended in approval and this should be\",\r\n              \"   enacted. This doesn't have a minimum amount.\",\r\n              \"\",\r\n              \" Emits `Started`.\",\r\n              \"\",\r\n              \" Weight: `O(1)`\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"veto_external\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n  "]
[15.588454, "o", "              \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Veto and blacklist the external proposal hash.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be `VetoOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The preimage hash of the proposal to veto and blacklist.\",\r\n              \"\",\r\n              \" Emits `Vetoed`.\",\r\n              \"\",\r\n              \" Weight: `O(V + log(V))` where V is number of `existing vetoers`\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_referendum\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"ref_index\",\r\n                \"ty\": \"Compact<ReferendumIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a referendum.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Root_.\",\r\n              \"\",\r\n              \" - `ref_index`: The index of the referendum to cancel.\",\r"]
[15.588499, "o", "\r\n              \"\",\r\n              \" # Weight: `O(1)`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_queued\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"which\",\r\n                \"ty\": \"ReferendumIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel a proposal queued for enactment.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Root_.\",\r\n              \"\",\r\n              \" - `which`: The index of the referendum to cancel.\",\r\n              \"\",\r\n              \" Weight: `O(D)` where `D` is the items in the dispatch queue. Weighted as `D = 10`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"delegate\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"to\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"conviction\",\r\n                \"ty\": \"Conviction\"\r\n              },\r\n              {\r\n              "]
[15.588563, "o", "  \"name\": \"balance\",\r\n                \"ty\": \"BalanceOf<T>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Delegate the voting power (with some given conviction) of the sending account.\",\r\n              \"\",\r\n              \" The balance delegated is locked for as long as it's delegated, and thereafter for the\",\r\n              \" time appropriate for the conviction's lock period.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_, and the signing account must either:\",\r\n              \"   - be delegating already; or\",\r\n              \"   - have no voting activity (if there is, then it will need to be removed/consolidated\",\r\n              \"     through `reap_vote` or `unvote`).\",\r\n              \"\",\r\n              \" - `to`: The account whose voting the `target` account's voting power will follow.\",\r\n              \" - `conviction`: The conviction that will be attached to the delegated votes. When the\",\r\n              \"   account is undelegated, th"]
[15.588626, "o", "e funds will be locked for the corresponding period.\",\r\n              \" - `balance`: The amount of the account's balance to be used in delegating. This must\",\r\n              \"   not be more than the account's current balance.\",\r\n              \"\",\r\n              \" Emits `Delegated`.\",\r\n              \"\",\r\n              \" Weight: `O(R)` where R is the number of referendums the voter delegating to has\",\r\n              \"   voted on. Weight is charged as if maximum votes.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"undelegate\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Undelegate the voting power of the sending account.\",\r\n              \"\",\r\n              \" Tokens may be unlocked following once an amount of time consistent with the lock period\",\r\n              \" of the conviction with which the delegation was issued.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_ and the signing account must be\",\r\n              \" curr"]
[15.588676, "o", "ently delegating.\",\r\n              \"\",\r\n              \" Emits `Undelegated`.\",\r\n              \"\",\r\n              \" Weight: `O(R)` where R is the number of referendums the voter delegating to has\",\r\n              \"   voted on. Weight is charged as if maximum votes.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"clear_public_proposals\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Clears all public proposals.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Root_.\",\r\n              \"\",\r\n              \" Weight: `O(1)`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"note_preimage\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"encoded_proposal\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Register the preimage for an upcoming proposal. This doesn't require the proposal to be\",\r\n              \" in the dispatch queue but d"]
[15.588733, "o", "oes require a deposit, returned once enacted.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `encoded_proposal`: The preimage of a proposal.\",\r\n              \"\",\r\n              \" Emits `PreimageNoted`.\",\r\n              \"\",\r\n              \" Weight: `O(E)` with E size of `encoded_proposal` (protected by a required deposit).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"note_preimage_operational\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"encoded_proposal\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Same as `note_preimage` but origin is `OperationalPreimageOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"note_imminent_preimage\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"encoded_proposal\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n      "]
[15.588789, "o", "      \"documentation\": [\r\n              \" Register the preimage for an upcoming proposal. This requires the proposal to be\",\r\n              \" in the dispatch queue. No deposit is needed. When this call is successful, i.e.\",\r\n              \" the preimage has not been uploaded before and matches some imminent proposal,\",\r\n              \" no fee is paid.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `encoded_proposal`: The preimage of a proposal.\",\r\n              \"\",\r\n              \" Emits `PreimageNoted`.\",\r\n              \"\",\r\n              \" Weight: `O(E)` with E size of `encoded_proposal` (protected by a required deposit).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"note_imminent_preimage_operational\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"encoded_proposal\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Sam"]
[15.588853, "o", "e as `note_imminent_preimage` but origin is `OperationalPreimageOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"reap_preimage\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"proposal_len_upper_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove an expired proposal preimage and collect the deposit.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The preimage hash of a proposal.\",\r\n              \" - `proposal_length_upper_bound`: an upper bound on length of the proposal.\",\r\n              \"   Extrinsic is weighted according to this value with no refund.\",\r\n              \"\",\r\n              \" This will only work after `VotingPeriod` blocks from the time that the preimage was\",\r\n"]
[15.588891, "o", "              \" noted, if it's the same account doing it. If it's a different account, then it'll only\",\r\n              \" work an additional `EnactmentPeriod` later.\",\r\n              \"\",\r\n              \" Emits `PreimageReaped`.\",\r\n              \"\",\r\n              \" Weight: `O(D)` where D is length of proposal.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"unlock\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"target\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Unlock tokens that have an expired lock.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `target`: The account to remove the lock on.\",\r\n              \"\",\r\n              \" Weight: `O(R)` with R number of vote of target.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remove_vote\",\r\n            \"arguments\": [\r\n              {\r\n            "]
[15.58893, "o", "    \"name\": \"index\",\r\n                \"ty\": \"ReferendumIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a vote for a referendum.\",\r\n              \"\",\r\n              \" If:\",\r\n              \" - the referendum was cancelled, or\",\r\n              \" - the referendum is ongoing, or\",\r\n              \" - the referendum has ended such that\",\r\n              \"   - the vote of the account was in opposition to the result; or\",\r\n              \"   - there was no conviction to the account's vote; or\",\r\n              \"   - the account made a split vote\",\r\n              \" ...then the vote is removed cleanly and a following call to `unlock` may result in more\",\r\n              \" funds being available.\",\r\n              \"\",\r\n              \" If, however, the referendum has ended and:\",\r\n              \" - it finished corresponding to the vote of the account, and\",\r\n              \" - the account made a standard vote with conviction, and\",\r\n              \" - the lock period of the convicti"]
[15.588971, "o", "on is not over\",\r\n              \" ...then the lock will be aggregated into the overall account's lock, which may involve\",\r\n              \" *overlocking* (where the two locks are combined into a single lock that is the maximum\",\r\n              \" of both the amount locked and the time is it locked for).\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_, and the signer must have a vote\",\r\n              \" registered for referendum `index`.\",\r\n              \"\",\r\n              \" - `index`: The index of referendum of the vote to be removed.\",\r\n              \"\",\r\n              \" Weight: `O(R + log R)` where R is the number of referenda that `target` has voted on.\",\r\n              \"   Weight is calculated for the maximum number of vote.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remove_other_vote\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"target\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n        "]
[15.589007, "o", "        \"name\": \"index\",\r\n                \"ty\": \"ReferendumIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a vote for a referendum.\",\r\n              \"\",\r\n              \" If the `target` is equal to the signer, then this function is exactly equivalent to\",\r\n              \" `remove_vote`. If not equal to the signer, then the vote must have expired,\",\r\n              \" either because the referendum was cancelled, because the voter lost the referendum or\",\r\n              \" because the conviction period is over.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `target`: The account of the vote to be removed; this account must have voted for\",\r\n              \"   referendum `index`.\",\r\n              \" - `index`: The index of referendum of the vote to be removed.\",\r\n              \"\",\r\n              \" Weight: `O(R + log R)` where R is the number of referenda that `target` has voted on.\",\r\n    "]
[15.589041, "o", "          \"   Weight is calculated for the maximum number of vote.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"enact_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"ReferendumIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Enact a proposal from a referendum. For now we just make the weight be the maximum.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"blacklist\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_ref_index\",\r\n                \"ty\": \"Option<ReferendumIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Permanently place a proposal into the blacklist. This prevents it from e"]
[15.589075, "o", "ver being\",\r\n              \" proposed again.\",\r\n              \"\",\r\n              \" If called on a queued public or external proposal, then this will result in it being\",\r\n              \" removed. If the `ref_index` supplied is an active referendum with the proposal hash,\",\r\n              \" then it will be cancelled.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be `BlacklistOrigin`.\",\r\n              \"\",\r\n              \" - `proposal_hash`: The proposal hash to blacklist permanently.\",\r\n              \" - `ref_index`: An ongoing referendum whose hash is `proposal_hash`, which will be\",\r\n              \" cancelled.\",\r\n              \"\",\r\n              \" Weight: `O(p)` (though as this is an high-privilege dispatch, we assume it has a\",\r\n              \"   reasonable value).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"prop_index\",\r\n                \"ty\": \"Compact<PropIndex>\"\r\n     "]
[15.589108, "o", "         }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a proposal.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be `CancelProposalOrigin`.\",\r\n              \"\",\r\n              \" - `prop_index`: The index of the proposal to cancel.\",\r\n              \"\",\r\n              \" Weight: `O(p)` where `p = PublicProps::<T>::decode_len()`\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Proposed\",\r\n            \"arguments\": [\r\n              \"PropIndex\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion has been proposed by a public account. \\\\[proposal_index, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Tabled\",\r\n            \"arguments\": [\r\n              \"PropIndex\",\r\n              \"Balance\",\r\n              \"Vec<AccountId>\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A public proposal has been tabled for referendum vote. "]
[15.58914, "o", "\\\\[proposal_index, deposit, depositors\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ExternalTabled\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" An external proposal has been tabled.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Started\",\r\n            \"arguments\": [\r\n              \"ReferendumIndex\",\r\n              \"VoteThreshold\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A referendum has begun. \\\\[ref_index, threshold\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Passed\",\r\n            \"arguments\": [\r\n              \"ReferendumIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal has been approved by referendum. \\\\[ref_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotPassed\",\r\n            \"arguments\": [\r\n              \"ReferendumIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal has been rejected by refe"]
[15.589229, "o", "rendum. \\\\[ref_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Cancelled\",\r\n            \"arguments\": [\r\n              \"ReferendumIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A referendum has been cancelled. \\\\[ref_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Executed\",\r\n            \"arguments\": [\r\n              \"ReferendumIndex\",\r\n              \"bool\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal has been enacted. \\\\[ref_index, is_ok\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Delegated\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has delegated their vote to another account. \\\\[who, target\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Undelegated\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"document"]
[15.589326, "o", "ation\": [\r\n              \" An \\\\[account\\\\] has cancelled a previous delegation operation.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Vetoed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Hash\",\r\n              \"BlockNumber\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An external proposal has been vetoed. \\\\[who, proposal_hash, until\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageNoted\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal's preimage was noted, and the deposit taken. \\\\[proposal_hash, who, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageUsed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal preimage was rem"]
[15.589456, "o", "oved and used (the deposit was returned).\",\r\n              \" \\\\[proposal_hash, provider, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageInvalid\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"ReferendumIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal could not be executed because its preimage was invalid.\",\r\n              \" \\\\[proposal_hash, ref_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageMissing\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"ReferendumIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal could not be executed because its preimage was missing.\",\r\n              \" \\\\[proposal_hash, ref_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageReaped\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"AccountId\",\r\n              \"Balance\",\r\n              \"AccountId\"\r\n           "]
[15.589531, "o", " ],\r\n            \"documentation\": [\r\n              \" A registered preimage was removed and the deposit collected by the reaper.\",\r\n              \" \\\\[proposal_hash, provider, deposit, reaper\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Unlocked\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An \\\\[account\\\\] has been unlocked successfully.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Blacklisted\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal \\\\[hash\\\\] has been blacklisted permanently.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"EnactmentPeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              39,\r\n              6,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum period "]
[15.589588, "o", "of locking and the period between a proposal being approved and enacted.\",\r\n              \"\",\r\n              \" It should generally be a little more than the unstake period to ensure that\",\r\n              \" voting stakers have an opportunity to remove themselves from the system in the case where\",\r\n              \" they are on the losing side of a vote.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"LaunchPeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              39,\r\n              6,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" How often (in blocks) new public referenda are launched.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"VotingPeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              39,\r\n              6,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" How often (in blocks) to check for new votes.\"\r\n         "]
[15.589626, "o", "   ]\r\n          },\r\n          {\r\n            \"name\": \"MinimumDeposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              16,\r\n              165,\r\n              212,\r\n              232,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum amount to be used as a deposit for a public referendum proposal.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"FastTrackVotingPeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              8,\r\n              7,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Minimum voting period allowed for an emergency referendum.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"CooloffPeriod\",\r\n            \"ty\": \"T::BlockNumb"]
[15.589667, "o", "er\",\r\n            \"value\": [\r\n              192,\r\n              137,\r\n              1,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Period in blocks where an external proposal may not be re-submitted after being vetoed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageByteDeposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              225,\r\n              245,\r\n              5,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount of balance that must be deposited per byte of preimage stored.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxVotes\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              100,\r\n              0,\r\n              0,\r\n        "]
[15.589704, "o", "      0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum number of votes for an account.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"ValueLow\",\r\n            \"documentation\": [\r\n              \" Value too low\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ProposalMissing\",\r\n            \"documentation\": [\r\n              \" Proposal does not exist\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BadIndex\",\r\n            \"documentation\": [\r\n              \" Unknown index\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyCanceled\",\r\n            \"documentation\": [\r\n              \" Cannot cancel the same proposal twice\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateProposal\",\r\n            \"documentation\": [\r\n              \" Proposal already made\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ProposalBlacklisted\",\r\n            \"documentation\""]
[15.589785, "o", ": [\r\n              \" Proposal still blacklisted\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotSimpleMajority\",\r\n            \"documentation\": [\r\n              \" Next external proposal not simple majority\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidHash\",\r\n            \"documentation\": [\r\n              \" Invalid hash\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoProposal\",\r\n            \"documentation\": [\r\n              \" No external proposal\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyVetoed\",\r\n            \"documentation\": [\r\n              \" Identity may not veto a proposal twice\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotDelegated\",\r\n            \"documentation\": [\r\n              \" Not delegated\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicatePreimage\",\r\n            \"documentation\": [\r\n              \" Preimage already noted\"\r\n            ]\r\n          },\r\n          "]
[15.589883, "o", "{\r\n            \"name\": \"NotImminent\",\r\n            \"documentation\": [\r\n              \" Not imminent\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooEarly\",\r\n            \"documentation\": [\r\n              \" Too early\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Imminent\",\r\n            \"documentation\": [\r\n              \" Imminent\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageMissing\",\r\n            \"documentation\": [\r\n              \" Preimage not found\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ReferendumInvalid\",\r\n            \"documentation\": [\r\n              \" Vote given for invalid referendum\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreimageInvalid\",\r\n            \"documentation\": [\r\n              \" Invalid preimage\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoneWaiting\",\r\n            \"documentation\": [\r\n              \" No proposals waiting\"\r\n            ]\r\n          },\r\n       "]
[15.589942, "o", "   {\r\n            \"name\": \"NotLocked\",\r\n            \"documentation\": [\r\n              \" The target account does not have a lock.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotExpired\",\r\n            \"documentation\": [\r\n              \" The lock on the account to be unlocked has not yet expired.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotVoter\",\r\n            \"documentation\": [\r\n              \" The given account did not vote on the referendum.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoPermission\",\r\n            \"documentation\": [\r\n              \" The actor has no permission to conduct the action.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyDelegating\",\r\n            \"documentation\": [\r\n              \" The account is already delegating.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Overflow\",\r\n            \"documentation\": [\r\n              \" An unexpected integer overflow occurred.\"\r\n            ]\r\n "]
[15.58998, "o", "         },\r\n          {\r\n            \"name\": \"Underflow\",\r\n            \"documentation\": [\r\n              \" An unexpected integer underflow occurred.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InsufficientFunds\",\r\n            \"documentation\": [\r\n              \" Too high a balance was provided that the account cannot afford.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotDelegating\",\r\n            \"documentation\": [\r\n              \" The account is not currently delegating.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"VotesExist\",\r\n            \"documentation\": [\r\n              \" The account currently has votes attached to it and the operation cannot succeed until\",\r\n              \" these are removed, either through `unvote` or `reap_vote`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InstantNotAllowed\",\r\n            \"documentation\": [\r\n              \" The instant referendum origin is currently disallowed.\"\r\n            ]\r\n        "]
[15.590057, "o", "  },\r\n          {\r\n            \"name\": \"Nonsense\",\r\n            \"documentation\": [\r\n              \" Delegation to oneself makes no sense.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongUpperBound\",\r\n            \"documentation\": [\r\n              \" Invalid upper bound.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxVotesReached\",\r\n            \"documentation\": [\r\n              \" Maximum number of votes reached.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidWitness\",\r\n            \"documentation\": [\r\n              \" The provided witness data is wrong.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyProposals\",\r\n            \"documentation\": [\r\n              \" Maximum number of proposals reached.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 14\r\n      },\r\n      {\r\n        \"name\": \"Council\",\r\n        \"storage\": {\r\n          \"prefix\": \"Instance1Collective\",\r\n          \"entries\": [\r\n            {\r\n              \"n"]
[15.590092, "o", "ame\": \"Proposals\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::Hash>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The hashes of the active proposals.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ProposalOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"<T as Config<I>>::Proposal\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Actual proposal for a given hash, if it's current.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Voting\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n         "]
[15.590124, "o", "         \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"Votes<T::AccountId, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Votes on a given proposal, if it is ongoing.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ProposalCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Proposals so far.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Members\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::AccountId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n  "]
[15.590171, "o", "            ],\r\n              \"documentation\": [\r\n                \" The current members of the collective. This is stored sorted (just by value).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Prime\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::AccountId\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The prime member that helps determine the default vote behavior in case of absentations.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"set_members\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new_members\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"prime\",\r\n                \"ty\": \"Option<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"old_count\",\r\n                \"ty\": \"Me"]
[15.59024, "o", "mberCount\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the collective's membership.\",\r\n              \"\",\r\n              \" - `new_members`: The new member list. Be nice to the chain and provide it sorted.\",\r\n              \" - `prime`: The prime member whose vote sets the default.\",\r\n              \" - `old_count`: The upper bound for the previous number of members in storage.\",\r\n              \"                Used for weight estimation.\",\r\n              \"\",\r\n              \" Requires root origin.\",\r\n              \"\",\r\n              \" NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but\",\r\n              \"       the weight estimations rely on it to estimate dispatchable weight.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(MP + N)` where:\",\r\n              \"   - `M` old-members-count (code- and governance-bounded)\",\r\n              \"   - `N` new-members-count (code- and governance-bounded"]
[15.590309, "o", ")\",\r\n              \"   - `P` proposals-count (code-bounded)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the members\",\r\n              \"   - 1 storage read (codec `O(P)`) for reading the proposals\",\r\n              \"   - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal\",\r\n              \"   - 1 storage write (codec `O(1)`) for deleting the old `prime` and setting the new one\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"execute\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"Box<<T as Config<I>>::Proposal>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Dispatch a proposal from a member using the `Member` origin.\",\r\n              \"\",\r\n              \" "]
[15.590424, "o", "Origin must be a member of the collective.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching `proposal`\",\r\n              \" - DB: 1 read (codec `O(M)`) + DB access of `proposal`\",\r\n              \" - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"propose\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"threshold\",\r\n                \"ty\": \"Compact<MemberCount>\"\r\n              },\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"Box<<T as Config<I>>::Proposal>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add a new proposal to either be voted on or executed directly.\",\r\n              \"\",\r\n              \" Requires the sender to b"]
[15.590487, "o", "e member.\",\r\n              \"\",\r\n              \" `threshold` determines whether `proposal` is executed directly (`threshold < 2`)\",\r\n              \" or put up for voting.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(B + M + P1)` or `O(B + M + P2)` where:\",\r\n              \"   - `B` is `proposal` size in bytes (length-fee-bounded)\",\r\n              \"   - `M` is members-count (code- and governance-bounded)\",\r\n              \"   - branching is influenced by `threshold` where:\",\r\n              \"     - `P1` is proposal execution complexity (`threshold < 2`)\",\r\n              \"     - `P2` is proposals-count (code-bounded) (`threshold >= 2`)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage read `is_member` (codec `O(M)`)\",\r\n              \"   - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)\",\r\n              \"   - DB accesses influenced by `threshold`:\",\r\n              \"     - EITHER storage accesses done by `proposal` (`threshold < 2`)\",\r\n        "]
[15.590521, "o", "      \"     - OR proposal insertion (`threshold <= 2`)\",\r\n              \"       - 1 storage mutation `Proposals` (codec `O(P2)`)\",\r\n              \"       - 1 storage mutation `ProposalCount` (codec `O(1)`)\",\r\n              \"       - 1 storage write `ProposalOf` (codec `O(B)`)\",\r\n              \"       - 1 storage write `Voting` (codec `O(M)`)\",\r\n              \"   - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"vote\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"approve\",\r\n                \"ty\": \"bool\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add an aye or nay vote for the sender to the given proposal.\",\r\n              \"\",\r\n              \" Requires the sender to be a memb"]
[15.590552, "o", "er.\",\r\n              \"\",\r\n              \" Transaction fees will be waived if the member is voting on any particular proposal\",\r\n              \" for the first time and the call is successful. Subsequent vote changes will charge a fee.\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(M)` where `M` is members-count (code- and governance-bounded)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage read `Members` (codec `O(M)`)\",\r\n              \"   - 1 storage mutation `Voting` (codec `O(M)`)\",\r\n              \" - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"close\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"proposal_weight_bound\",\r\n                \"ty\": \"Compact<Weig"]
[15.590611, "o", "ht>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Close a vote that is either approved, disapproved or whose voting period has ended.\",\r\n              \"\",\r\n              \" May be called by any signed account in order to finish voting and close the proposal.\",\r\n              \"\",\r\n              \" If called before the end of the voting period it will only close the vote if it is\",\r\n              \" has enough votes to be approved or disapproved.\",\r\n              \"\",\r\n              \" If called after the end of the voting period abstentions are counted as rejections\",\r\n              \" unless there is a prime member set and the prime member cast an approval.\",\r\n              \"\",\r\n              \" If the close operation completes successfully with disapproval, the transaction fee will\",\r\n              \" be waived. Otherwise execution of the approved operation will be ch"]
[15.590661, "o", "arged to the caller.\",\r\n              \"\",\r\n              \" + `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed proposal.\",\r\n              \" + `length_bound`: The upper bound for the length of the proposal in storage. Checked via\",\r\n              \"                   `storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(B + M + P1 + P2)` where:\",\r\n              \"   - `B` is `proposal` size in bytes (length-fee-bounded)\",\r\n              \"   - `M` is members-count (code- and governance-bounded)\",\r\n              \"   - `P1` is the complexity of `proposal` preimage.\",\r\n              \"   - `P2` is proposal-count (code-bounded)\",\r\n              \" - DB:\",\r\n              \"  - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)\",\r\n              \"  - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec `O(P2)`)\",\r\n    "]
[15.590717, "o", "          \"  - any mutations done while executing `proposal` (`P1`)\",\r\n              \" - up to 3 events\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"disapprove_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Disapprove a proposal, close, and remove it from the system, regardless of its current state.\",\r\n              \"\",\r\n              \" Must be called by the Root origin.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" * `proposal_hash`: The hash of the proposal that should be disapproved.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Complexity: O(P) where P is the number of max proposals\",\r\n              \" DB Weight:\",\r\n              \" * Reads: Proposals\",\r\n              \" * Writes: Voting, Proposals, ProposalOf\",\r\n              \" # </weight>\"\r\n        "]
[15.590755, "o", "    ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Proposed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"ProposalIndex\",\r\n              \"Hash\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion (given hash) has been proposed (by given account) with a threshold (given\",\r\n              \" `MemberCount`).\",\r\n              \" \\\\[account, proposal_index, proposal_hash, threshold\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Voted\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Hash\",\r\n              \"bool\",\r\n              \"MemberCount\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion (given hash) has been voted on by given account, leaving\",\r\n              \" a tally (yes votes and no votes given respectively as `MemberCount`).\",\r\n              \" \\\\[account, proposal_hash, voted, yes, no\\\\]\"\r\n         "]
[15.590795, "o", "   ]\r\n          },\r\n          {\r\n            \"name\": \"Approved\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion was approved by the required threshold.\",\r\n              \" \\\\[proposal_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Disapproved\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion was not approved by the required threshold.\",\r\n              \" \\\\[proposal_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Executed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion was executed; result will be `Ok` if it returned without error.\",\r\n              \" \\\\[proposal_hash, result\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MemberExecuted\",\r\n            \"arguments\": [\r\n              \""]
[15.590864, "o", "Hash\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A single member did some action; result will be `Ok` if it returned without error.\",\r\n              \" \\\\[proposal_hash, result\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Closed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"MemberCount\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proposal was closed because its threshold was reached or after its duration was up.\",\r\n              \" \\\\[proposal_hash, yes, no\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"NotMember\",\r\n            \"documentation\": [\r\n              \" Account is not a member\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateProposal\",\r\n            \"documentation\": [\r\n              \" Duplicate proposals not allowed\"\r\n            ]\r\n          },\r\n  "]
[15.590909, "o", "        {\r\n            \"name\": \"ProposalMissing\",\r\n            \"documentation\": [\r\n              \" Proposal must exist\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongIndex\",\r\n            \"documentation\": [\r\n              \" Mismatched index\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateVote\",\r\n            \"documentation\": [\r\n              \" Duplicate vote ignored\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyInitialized\",\r\n            \"documentation\": [\r\n              \" Members are already initialized!\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooEarly\",\r\n            \"documentation\": [\r\n              \" The close call was made too early, before the end of the voting.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyProposals\",\r\n            \"documentation\": [\r\n              \" There can only be a maximum of `MaxProposals` active proposals.\"\r\n            ]\r\n          },\r\n          {\r\n         "]
[15.591028, "o", "   \"name\": \"WrongProposalWeight\",\r\n            \"documentation\": [\r\n              \" The given weight bound for the proposal was too low.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongProposalLength\",\r\n            \"documentation\": [\r\n              \" The given length bound for the proposal was too low.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 15\r\n      },\r\n      {\r\n        \"name\": \"TechnicalCommittee\",\r\n        \"storage\": {\r\n          \"prefix\": \"Instance2Collective\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Proposals\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::Hash>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The hashes of the active proposals.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ProposalOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n               "]
[15.591083, "o", " \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"<T as Config<I>>::Proposal\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Actual proposal for a given hash, if it's current.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Voting\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"Votes<T::AccountId, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Votes on a given proposal, if it is ongoing.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ProposalCount\""]
[15.591139, "o", ",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Proposals so far.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Members\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::AccountId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current members of the collective. This is stored sorted (just by value).\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Prime\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::AccountId\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n         "]
[15.591179, "o", "       \" The prime member that helps determine the default vote behavior in case of absentations.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"set_members\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new_members\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"prime\",\r\n                \"ty\": \"Option<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"old_count\",\r\n                \"ty\": \"MemberCount\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the collective's membership.\",\r\n              \"\",\r\n              \" - `new_members`: The new member list. Be nice to the chain and provide it sorted.\",\r\n              \" - `prime`: The prime member whose vote sets the default.\",\r\n              \" - `old_count`: The upper bound for the previous number of members in storage.\",\r\n              \"                Used"]
[15.591214, "o", " for weight estimation.\",\r\n              \"\",\r\n              \" Requires root origin.\",\r\n              \"\",\r\n              \" NOTE: Does not enforce the expected `MaxMembers` limit on the amount of members, but\",\r\n              \"       the weight estimations rely on it to estimate dispatchable weight.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(MP + N)` where:\",\r\n              \"   - `M` old-members-count (code- and governance-bounded)\",\r\n              \"   - `N` new-members-count (code- and governance-bounded)\",\r\n              \"   - `P` proposals-count (code-bounded)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage mutation (codec `O(M)` read, `O(N)` write) for reading and writing the members\",\r\n              \"   - 1 storage read (codec `O(P)`) for reading the proposals\",\r\n              \"   - `P` storage mutations (codec `O(M)`) for updating the votes for each proposal\",\r\n              \"   - 1 storage write (codec `O(1)`) for deleting the old `prim"]
[15.591248, "o", "e` and setting the new one\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"execute\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"Box<<T as Config<I>>::Proposal>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Dispatch a proposal from a member using the `Member` origin.\",\r\n              \"\",\r\n              \" Origin must be a member of the collective.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(M + P)` where `M` members-count (code-bounded) and `P` complexity of dispatching `proposal`\",\r\n              \" - DB: 1 read (codec `O(M)`) + DB access of `proposal`\",\r\n              \" - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"propose\",\r\n           "]
[15.5913, "o", " \"arguments\": [\r\n              {\r\n                \"name\": \"threshold\",\r\n                \"ty\": \"Compact<MemberCount>\"\r\n              },\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"Box<<T as Config<I>>::Proposal>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add a new proposal to either be voted on or executed directly.\",\r\n              \"\",\r\n              \" Requires the sender to be member.\",\r\n              \"\",\r\n              \" `threshold` determines whether `proposal` is executed directly (`threshold < 2`)\",\r\n              \" or put up for voting.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(B + M + P1)` or `O(B + M + P2)` where:\",\r\n              \"   - `B` is `proposal` size in bytes (length-fee-bounded)\",\r\n              \"   - `M` is members-count (code- and governance-boun"]
[15.591343, "o", "ded)\",\r\n              \"   - branching is influenced by `threshold` where:\",\r\n              \"     - `P1` is proposal execution complexity (`threshold < 2`)\",\r\n              \"     - `P2` is proposals-count (code-bounded) (`threshold >= 2`)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage read `is_member` (codec `O(M)`)\",\r\n              \"   - 1 storage read `ProposalOf::contains_key` (codec `O(1)`)\",\r\n              \"   - DB accesses influenced by `threshold`:\",\r\n              \"     - EITHER storage accesses done by `proposal` (`threshold < 2`)\",\r\n              \"     - OR proposal insertion (`threshold <= 2`)\",\r\n              \"       - 1 storage mutation `Proposals` (codec `O(P2)`)\",\r\n              \"       - 1 storage mutation `ProposalCount` (codec `O(1)`)\",\r\n              \"       - 1 storage write `ProposalOf` (codec `O(B)`)\",\r\n              \"       - 1 storage write `Voting` (codec `O(M)`)\",\r\n              \"   - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n       "]
[15.591379, "o", "     \"name\": \"vote\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"approve\",\r\n                \"ty\": \"bool\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add an aye or nay vote for the sender to the given proposal.\",\r\n              \"\",\r\n              \" Requires the sender to be a member.\",\r\n              \"\",\r\n              \" Transaction fees will be waived if the member is voting on any particular proposal\",\r\n              \" for the first time and the call is successful. Subsequent vote changes will charge a fee.\",\r\n              \" # <weight>\",\r\n              \" ## Weight\",\r\n              \" - `O(M)` where `M` is members-count (code- and governance-bounded)\",\r\n              \" - DB:\",\r\n              \"   - 1 storage read `Members` (code"]
[15.591448, "o", "c `O(M)`)\",\r\n              \"   - 1 storage mutation `Voting` (codec `O(M)`)\",\r\n              \" - 1 event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"close\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"proposal_weight_bound\",\r\n                \"ty\": \"Compact<Weight>\"\r\n              },\r\n              {\r\n                \"name\": \"length_bound\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Close a vote that is either approved, disapproved or whose voting period has ended.\",\r\n              \"\",\r\n              \" May be called by any signed account in order to finish voting and close the proposal.\",\r\n              \"\",\r\n              \" If called "]
[15.591501, "o", "before the end of the voting period it will only close the vote if it is\",\r\n              \" has enough votes to be approved or disapproved.\",\r\n              \"\",\r\n              \" If called after the end of the voting period abstentions are counted as rejections\",\r\n              \" unless there is a prime member set and the prime member cast an approval.\",\r\n              \"\",\r\n              \" If the close operation completes successfully with disapproval, the transaction fee will\",\r\n              \" be waived. Otherwise execution of the approved operation will be charged to the caller.\",\r\n              \"\",\r\n              \" + `proposal_weight_bound`: The maximum amount of weight consumed by executing the closed proposal.\",\r\n              \" + `length_bound`: The upper bound for the length of the proposal in storage. Checked via\",\r\n              \"                   `storage::read` so it is `size_of::<u32>() == 4` larger than the pure length.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" ## Weigh"]
[15.591556, "o", "t\",\r\n              \" - `O(B + M + P1 + P2)` where:\",\r\n              \"   - `B` is `proposal` size in bytes (length-fee-bounded)\",\r\n              \"   - `M` is members-count (code- and governance-bounded)\",\r\n              \"   - `P1` is the complexity of `proposal` preimage.\",\r\n              \"   - `P2` is proposal-count (code-bounded)\",\r\n              \" - DB:\",\r\n              \"  - 2 storage reads (`Members`: codec `O(M)`, `Prime`: codec `O(1)`)\",\r\n              \"  - 3 mutations (`Voting`: codec `O(M)`, `ProposalOf`: codec `O(B)`, `Proposals`: codec `O(P2)`)\",\r\n              \"  - any mutations done while executing `proposal` (`P1`)\",\r\n              \" - up to 3 events\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"disapprove_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Disapprove a proposal, close, and"]
[15.591615, "o", " remove it from the system, regardless of its current state.\",\r\n              \"\",\r\n              \" Must be called by the Root origin.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" * `proposal_hash`: The hash of the proposal that should be disapproved.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Complexity: O(P) where P is the number of max proposals\",\r\n              \" DB Weight:\",\r\n              \" * Reads: Proposals\",\r\n              \" * Writes: Voting, Proposals, ProposalOf\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Proposed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"ProposalIndex\",\r\n              \"Hash\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion (given hash) has been proposed (by given account) with a threshold (given\",\r\n              \" `MemberCount`).\",\r\n              \" \\\\[account, propos"]
[15.591676, "o", "al_index, proposal_hash, threshold\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Voted\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Hash\",\r\n              \"bool\",\r\n              \"MemberCount\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion (given hash) has been voted on by given account, leaving\",\r\n              \" a tally (yes votes and no votes given respectively as `MemberCount`).\",\r\n              \" \\\\[account, proposal_hash, voted, yes, no\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Approved\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion was approved by the required threshold.\",\r\n              \" \\\\[proposal_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Disapproved\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n           "]
[15.591742, "o", "   \" A motion was not approved by the required threshold.\",\r\n              \" \\\\[proposal_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Executed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A motion was executed; result will be `Ok` if it returned without error.\",\r\n              \" \\\\[proposal_hash, result\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MemberExecuted\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A single member did some action; result will be `Ok` if it returned without error.\",\r\n              \" \\\\[proposal_hash, result\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Closed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"MemberCount\",\r\n              \"MemberCount\"\r\n            ],\r\n            \"documenta"]
[15.591787, "o", "tion\": [\r\n              \" A proposal was closed because its threshold was reached or after its duration was up.\",\r\n              \" \\\\[proposal_hash, yes, no\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"NotMember\",\r\n            \"documentation\": [\r\n              \" Account is not a member\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateProposal\",\r\n            \"documentation\": [\r\n              \" Duplicate proposals not allowed\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ProposalMissing\",\r\n            \"documentation\": [\r\n              \" Proposal must exist\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongIndex\",\r\n            \"documentation\": [\r\n              \" Mismatched index\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicateVote\",\r\n            \"documentation\": [\r\n              \" Duplicate vote ignored\"\r\n            ]\r\n          },\r\n          "]
[15.591842, "o", "{\r\n            \"name\": \"AlreadyInitialized\",\r\n            \"documentation\": [\r\n              \" Members are already initialized!\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooEarly\",\r\n            \"documentation\": [\r\n              \" The close call was made too early, before the end of the voting.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyProposals\",\r\n            \"documentation\": [\r\n              \" There can only be a maximum of `MaxProposals` active proposals.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongProposalWeight\",\r\n            \"documentation\": [\r\n              \" The given weight bound for the proposal was too low.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongProposalLength\",\r\n            \"documentation\": [\r\n              \" The given length bound for the proposal was too low.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 16\r\n      },\r\n      {\r\n        \"name\": \"ElectionsPhragmen\",\r\n        \"sto"]
[15.591902, "o", "rage\": {\r\n          \"prefix\": \"PhragmenElection\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Members\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<SeatHolder<T::AccountId, BalanceOf<T>>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current elected members.\",\r\n                \"\",\r\n                \" Invariant: Always sorted based on account id.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"RunnersUp\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<SeatHolder<T::AccountId, BalanceOf<T>>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current reserved runners-up.\",\r\n                \"\",\r\n                \" Invariant: Always sorted based on rank (worse to best). Upon removal of a member, the\""]
[15.606723, "o", ",\r\n                \" last (i.e. _best_) runner-up will be replaced.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Candidates\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<(T::AccountId, BalanceOf<T>)>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The present candidate list. A current member or runner-up can never enter this vector\",\r\n                \" and is always implicitly assumed to be a candidate.\",\r\n                \"\",\r\n                \" Second element is the deposit.\",\r\n                \"\",\r\n                \" Invariant: Always sorted based on account id.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"ElectionRounds\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n "]
[15.606838, "o", "               0\r\n              ],\r\n              \"documentation\": [\r\n                \" The total number of vote rounds that have happened, excluding the upcoming one.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Voting\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"Voter<T::AccountId, BalanceOf<T>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n              "]
[15.606932, "o", "  0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Votes and locked stake of a particular voter.\",\r\n                \"\",\r\n                \" TWOX-NOTE: SAFE as `AccountId` is a crypto hash.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"vote\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"votes\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Vote for a set of candidates for the upcoming round of election. This can be called to\",\r\n              \" set the initial votes, or update already exist"]
[15.606973, "o", "ing votes.\",\r\n              \"\",\r\n              \" Upon initial voting, `value` units of `who`'s balance is locked and a deposit amount is\",\r\n              \" reserved. The deposit is based on the number of votes and can be updated over time.\",\r\n              \"\",\r\n              \" The `votes` should:\",\r\n              \"   - not be empty.\",\r\n              \"   - be less than the number of possible candidates. Note that all current members and\",\r\n              \"     runners-up are also automatically candidates for the next round.\",\r\n              \"\",\r\n              \" If `value` is more than `who`'s total balance, then the maximum of the two is used.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be signed.\",\r\n              \"\",\r\n              \" ### Warning\",\r\n              \"\",\r\n              \" It is the responsibility of the caller to **NOT** place all of their balance into the\",\r\n              \" lock and keep some for further operations.\",\r\n              \"\",\r\n              \" # <weight>\",\r"]
[15.607026, "o", "\r\n              \" We assume the maximum weight among all 3 cases: vote_equal, vote_more and vote_less.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remove_voter\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Remove `origin` as a voter.\",\r\n              \"\",\r\n              \" This removes the lock and returns the deposit.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be signed and be a voter.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"submit_candidacy\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"candidate_count\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Submit oneself for candidacy. A fixed amount of deposit is recorded.\",\r\n              \"\",\r\n              \" All candidates are wiped at the end of the term. They either become a member/runner-up,\",\r\n              \" or leave "]
[15.607062, "o", "the system while their deposit is slashed.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be signed.\",\r\n              \"\",\r\n              \" ### Warning\",\r\n              \"\",\r\n              \" Even if a candidate ends up being a member, they must call [`Call::renounce_candidacy`]\",\r\n              \" to get their deposit back. Losing the spot in an election will always lead to a slash.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" The number of current candidates must be provided as witness data.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"renounce_candidacy\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"renouncing\",\r\n                \"ty\": \"Renouncing\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Renounce one's intention to be a candidate for the next election round. 3 potential\",\r\n              \" outcomes exist:\",\r\n              \"\",\r\n              \" -"]
[15.607094, "o", " `origin` is a candidate and not elected in any set. In this case, the deposit is\",\r\n              \"   unreserved, returned and origin is removed as a candidate.\",\r\n              \" - `origin` is a current runner-up. In this case, the deposit is unreserved, returned and\",\r\n              \"   origin is removed as a runner-up.\",\r\n              \" - `origin` is a current member. In this case, the deposit is unreserved and origin is\",\r\n              \"   removed as a member, consequently not being a candidate for the next round anymore.\",\r\n              \"   Similar to [`remove_members`], if replacement runners exists, they are immediately used.\",\r\n              \"   If the prime is renouncing, then no prime will exist until the next round.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be signed, and have one of the above roles.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" The type of renouncing must be provided as witness data.\",\r\n              \" # </weight>\"\r\n     "]
[15.607148, "o", "       ]\r\n          },\r\n          {\r\n            \"name\": \"remove_member\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"has_replacement\",\r\n                \"ty\": \"bool\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a particular member from the set. This is effective immediately and the bond of\",\r\n              \" the outgoing member is slashed.\",\r\n              \"\",\r\n              \" If a runner-up is available, then the best runner-up will be removed and replaces the\",\r\n              \" outgoing member. Otherwise, a new phragmen election is started.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be root.\",\r\n              \"\",\r\n              \" Note that this does not affect the designated block number of the next election.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" If w"]
[15.607185, "o", "e have a replacement, we use a small weight. Else, since this is a root call and\",\r\n              \" will go into phragmen, we assume full block for now.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"clean_defunct_voters\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"_num_voters\",\r\n                \"ty\": \"u32\"\r\n              },\r\n              {\r\n                \"name\": \"_num_defunct\",\r\n                \"ty\": \"u32\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Clean all voters who are defunct (i.e. they do not serve any purpose at all). The\",\r\n              \" deposit of the removed voters are returned.\",\r\n              \"\",\r\n              \" This is an root function to be used only for cleaning the state.\",\r\n              \"\",\r\n              \" The dispatch origin of this call must be root.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" The total number of voters and those that are defu"]
[15.607217, "o", "nct must be provided as witness data.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"NewTerm\",\r\n            \"arguments\": [\r\n              \"Vec<(AccountId, Balance)>\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A new term with \\\\[new_members\\\\]. This indicates that enough candidates existed to run the\",\r\n              \" election, not that enough have has been elected. The inner value must be examined for\",\r\n              \" this purpose. A `NewTerm(\\\\[\\\\])` indicates that some candidates got their bond slashed and\",\r\n              \" none were elected, whilst `EmptyTerm` means that no candidates existed to begin with.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"EmptyTerm\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" No (or not enough) candidates existed for this round. This is different from\",\r\n              \" `NewTerm(\\\\[\\\\])`. See the description of `NewTe"]
[15.607248, "o", "rm`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ElectionError\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Internal error happened while trying to perform election.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MemberKicked\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A \\\\[member\\\\] has been removed. This should always be followed by either `NewTerm` or\",\r\n              \" `EmptyTerm`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Renounced\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Someone has renounced their candidacy.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"CandidateSlashed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A \\\\[candidate\\\\"]
[15.607278, "o", "] was slashed by \\\\[amount\\\\] due to failing to obtain a seat as member or\",\r\n              \" runner-up.\",\r\n              \"\",\r\n              \" Note that old members and runners-up are also candidates.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SeatHolderSlashed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A \\\\[seat holder\\\\] was slashed by \\\\[amount\\\\] by being forcefully removed from the set.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"CandidacyBond\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              16,\r\n              165,\r\n              212,\r\n              232,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"doc"]
[15.607307, "o", "umentation\": []\r\n          },\r\n          {\r\n            \"name\": \"VotingBondBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              112,\r\n              19,\r\n              183,\r\n              46,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": []\r\n          },\r\n          {\r\n            \"name\": \"VotingBondFactor\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              208,\r\n              18,\r\n              19,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": []\r\n          },\r\n          {\r\n            \"name\": \"DesiredMembers\",\r\n       "]
[15.607361, "o", "     \"ty\": \"u32\",\r\n            \"value\": [\r\n              13,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": []\r\n          },\r\n          {\r\n            \"name\": \"DesiredRunnersUp\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              20,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": []\r\n          },\r\n          {\r\n            \"name\": \"TermDuration\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              192,\r\n              137,\r\n              1,\r\n              0\r\n            ],\r\n            \"documentation\": []\r\n          },\r\n          {\r\n            \"name\": \"ModuleId\",\r\n            \"ty\": \"LockIdentifier\",\r\n            \"value\": [\r\n              112,\r\n              104,\r\n              114,\r\n              101,\r\n              108,\r\n              101,\r\n              99,\r\n              116\r\n            ],\r\n            \"documentation\": []\r\n          }\r\n        ],\r\n        \"errors\": ["]
[15.607424, "o", "\r\n          {\r\n            \"name\": \"UnableToVote\",\r\n            \"documentation\": [\r\n              \" Cannot vote when no candidates or members exist.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoVotes\",\r\n            \"documentation\": [\r\n              \" Must vote for at least one candidate.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyVotes\",\r\n            \"documentation\": [\r\n              \" Cannot vote more than candidates.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaximumVotesExceeded\",\r\n            \"documentation\": [\r\n              \" Cannot vote more than maximum allowed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"LowBalance\",\r\n            \"documentation\": [\r\n              \" Cannot vote with stake less than minimum balance.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnableToPayBond\",\r\n            \"documentation\": [\r\n              \" Voter can not pay voting bond.\"\r\n            ]\r\n          },\r\n   "]
[15.607529, "o", "       {\r\n            \"name\": \"MustBeVoter\",\r\n            \"documentation\": [\r\n              \" Must be a voter.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ReportSelf\",\r\n            \"documentation\": [\r\n              \" Cannot report self.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DuplicatedCandidate\",\r\n            \"documentation\": [\r\n              \" Duplicated candidate submission.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MemberSubmit\",\r\n            \"documentation\": [\r\n              \" Member cannot re-submit candidacy.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"RunnerUpSubmit\",\r\n            \"documentation\": [\r\n              \" Runner cannot re-submit candidacy.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InsufficientCandidateFunds\",\r\n            \"documentation\": [\r\n              \" Candidate does not have enough funds.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotMember\",\r\n        "]
[15.607654, "o", "    \"documentation\": [\r\n              \" Not a member.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidWitnessData\",\r\n            \"documentation\": [\r\n              \" The provided count of number of candidates is incorrect.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidVoteCount\",\r\n            \"documentation\": [\r\n              \" The provided count of number of votes is incorrect.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidRenouncing\",\r\n            \"documentation\": [\r\n              \" The renouncing origin presented a wrong `Renouncing` parameter.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidReplacement\",\r\n            \"documentation\": [\r\n              \" Prediction regarding replacement after member removal is wrong.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 17\r\n      },\r\n      {\r\n        \"name\": \"TechnicalMembership\",\r\n        \"storage\": {\r\n          \"prefix\": \"Instance1Membership\",\r\n        "]
[15.60771, "o", "  \"entries\": [\r\n            {\r\n              \"name\": \"Members\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<T::AccountId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current membership, stored as an ordered Vec.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Prime\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"T::AccountId\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The current prime member, if one exists.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"add_member\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r"]
[15.607748, "o", "\r\n              \" Add a member `who` to the set.\",\r\n              \"\",\r\n              \" May only be called from `T::AddOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remove_member\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a member `who` from the set.\",\r\n              \"\",\r\n              \" May only be called from `T::RemoveOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"swap_member\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"remove\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"add\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Swap out one member `remove` for another `add`.\",\r\n              \"\",\r\n              \" May only be called from `T::Swap"]
[15.607779, "o", "Origin`.\",\r\n              \"\",\r\n              \" Prime membership is *not* passed from `remove` to `add`, if extant.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"reset_members\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"members\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Change the membership to a new set, disregarding the existing membership. Be nice and\",\r\n              \" pass `members` pre-sorted.\",\r\n              \"\",\r\n              \" May only be called from `T::ResetOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"change_key\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Swap out the sending member for some other key `new`.\",\r\n              \"\",\r\n              \" May only be called from `Signed` origin of "]
[15.60781, "o", "a current member.\",\r\n              \"\",\r\n              \" Prime membership is passed from the origin account to `new`, if extant.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_prime\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the prime member. Must be a current member.\",\r\n              \"\",\r\n              \" May only be called from `T::PrimeOrigin`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"clear_prime\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Remove the prime member if it exists.\",\r\n              \"\",\r\n              \" May only be called from `T::PrimeOrigin`.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"MemberAdded\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" The given member was added; s"]
[15.607847, "o", "ee the transaction for who.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MemberRemoved\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" The given member was removed; see the transaction for who.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MembersSwapped\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Two members were swapped; see the transaction for who.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MembersReset\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" The membership was reset; see the transaction for who the new set is.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"KeyChanged\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" One of the members' keys changed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Dummy\",\r\n            \"arguments\": [\r\n              \"sp_std::marker::PhantomD"]
[15.607881, "o", "ata<(AccountId, Event)>\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Phantom member, never used.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 18\r\n      },\r\n      {\r\n        \"name\": \"Treasury\",\r\n        \"storage\": {\r\n          \"prefix\": \"Treasury\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"ProposalCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"ProposalIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Number of proposals that have been made.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Proposals\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"ProposalIndex\",\r\n           "]
[15.607913, "o", "       \"value\": \"Proposal<T::AccountId, BalanceOf<T, I>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Proposals that have been made.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Approvals\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<ProposalIndex>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Proposal indices that have been approved but not yet awarded.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"propose_spend\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T, I>>\"\r\n              },\r\n              {\r\n                \"name\": \"beneficiary\",\r\n                \"ty"]
[15.607946, "o", "\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Put forward a suggestion for spending. A deposit proportional to the value\",\r\n              \" is reserved and slashed if the proposal is rejected. It is returned once the\",\r\n              \" proposal is awarded.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: O(1)\",\r\n              \" - DbReads: `ProposalCount`, `origin account`\",\r\n              \" - DbWrites: `ProposalCount`, `Proposals`, `origin account`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"reject_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_id\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Reject a proposed spend. The original deposit will be slashed.\",\r\n              \"\",\r\n              \" May only be called from `T::Rej"]
[15.607977, "o", "ectOrigin`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: O(1)\",\r\n              \" - DbReads: `Proposals`, `rejected proposer account`\",\r\n              \" - DbWrites: `Proposals`, `rejected proposer account`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"approve_proposal\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proposal_id\",\r\n                \"ty\": \"Compact<ProposalIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Approve a proposal. At a later time, the proposal will be allocated to the beneficiary\",\r\n              \" and the original deposit will be returned.\",\r\n              \"\",\r\n              \" May only be called from `T::ApproveOrigin`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: O(1).\",\r\n              \" - DbReads: `Proposals`, `Approvals`\",\r\n              \" - DbWrite: `Approvals`\",\r\n              \" # </weight>\"\r\n   "]
[15.608026, "o", "         ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Proposed\",\r\n            \"arguments\": [\r\n              \"ProposalIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" New proposal. \\\\[proposal_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Spending\",\r\n            \"arguments\": [\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" We have ended a spend period and will now allocate funds. \\\\[budget_remaining\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Awarded\",\r\n            \"arguments\": [\r\n              \"ProposalIndex\",\r\n              \"Balance\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some funds have been allocated. \\\\[proposal_index, award, beneficiary\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Rejected\",\r\n            \"arguments\": [\r\n              \"ProposalIndex\",\r\n              \"Balance\"\r\n"]
[15.608074, "o", "            ],\r\n            \"documentation\": [\r\n              \" A proposal was rejected; funds were slashed. \\\\[proposal_index, slashed\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Burnt\",\r\n            \"arguments\": [\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some of our funds have been burnt. \\\\[burn\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Rollover\",\r\n            \"arguments\": [\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Spending has finished; this is the amount that rolls over until next spend.\",\r\n              \" \\\\[budget_remaining\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Deposit\",\r\n            \"arguments\": [\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Some funds have been deposited. \\\\[deposit\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\""]
[15.608111, "o", ": \"ProposalBond\",\r\n            \"ty\": \"Permill\",\r\n            \"value\": [\r\n              80,\r\n              195,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Fraction of a proposal's value that should be bonded in order to place the proposal.\",\r\n              \" An accepted proposal gets these back. A rejected proposal does not.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ProposalBondMinimum\",\r\n            \"ty\": \"BalanceOf<T, I>\",\r\n            \"value\": [\r\n              0,\r\n              16,\r\n              165,\r\n              212,\r\n              232,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Minimum amount of funds that should be placed in a deposit for making a proposal.\"\r\n            ]\r\n          },\r\n          {\r\n       "]
[15.608147, "o", "     \"name\": \"SpendPeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              70,\r\n              5,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Period between successive spends.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Burn\",\r\n            \"ty\": \"Permill\",\r\n            \"value\": [\r\n              16,\r\n              39,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Percentage of spare funds (if any) that are burnt per spend period.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ModuleId\",\r\n            \"ty\": \"ModuleId\",\r\n            \"value\": [\r\n              112,\r\n              121,\r\n              47,\r\n              116,\r\n              114,\r\n              115,\r\n              114,\r\n              121\r\n            ],\r\n            \"documentation\": [\r\n              \" The treasury's module id, used for deriving its sovereign account ID.\"\r\n      "]
[15.608195, "o", "      ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InsufficientProposersBalance\",\r\n            \"documentation\": [\r\n              \" Proposer's balance is too low.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidIndex\",\r\n            \"documentation\": [\r\n              \" No proposal or bounty at that index.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 19\r\n      },\r\n      {\r\n        \"name\": \"Claims\",\r\n        \"storage\": {\r\n          \"prefix\": \"Claims\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Claims\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"EthereumAddress\",\r\n                  \"value\": \"BalanceOf<T>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": []\r\n            },\r\n            {\r\n   "]
[15.608227, "o", "           \"name\": \"Total\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"BalanceOf<T>\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": []\r\n            },\r\n            {\r\n              \"name\": \"Vesting\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"EthereumAddress\",\r\n                  \"value\": \"(BalanceOf<T>, BalanceOf<T>, T::BlockNumber)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"document"]
[15.60829, "o", "ation\": [\r\n                \" Vesting schedule for a claim.\",\r\n                \" First balance is the total amount that should be held for vesting.\",\r\n                \" Second balance is how much should be unlocked per block.\",\r\n                \" The block number is when the vesting should start.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Signing\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"EthereumAddress\",\r\n                  \"value\": \"StatementKind\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The statement kind that must be signed, if any.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Preclaims\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n             "]
[15.608346, "o", "     \"hasher\": \"Identity\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"EthereumAddress\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Pre-claimed Ethereum accounts, by the Account ID that they are claimed to.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"claim\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"dest\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"ethereum_signature\",\r\n                \"ty\": \"EcdsaSignature\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Make a claim to collect your DOTs.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _None_.\",\r\n              \"\",\r\n              \" Unsigned Validation:\",\r\n              \" A"]
[15.608378, "o", " call to claim is deemed valid if the signature provided matches\",\r\n              \" the expected signed message of:\",\r\n              \"\",\r\n              \" > Ethereum Signed Message:\",\r\n              \" > (configured prefix string)(address)\",\r\n              \"\",\r\n              \" and `address` matches the `dest` account.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `dest`: The destination account to payout the claim.\",\r\n              \" - `ethereum_signature`: The signature of an ethereum signed message\",\r\n              \"    matching the format described above.\",\r\n              \"\",\r\n              \" <weight>\",\r\n              \" The weight of this call is invariant over the input parameters.\",\r\n              \" Weight includes logic to validate unsigned `claim` call.\",\r\n              \"\",\r\n              \" Total Complexity: O(1)\",\r\n              \" </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"mint_claim\",\r\n            \"arguments\": [\r\n              {\r\n                "]
[15.608447, "o", "\"name\": \"who\",\r\n                \"ty\": \"EthereumAddress\"\r\n              },\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"BalanceOf<T>\"\r\n              },\r\n              {\r\n                \"name\": \"vesting_schedule\",\r\n                \"ty\": \"Option<(BalanceOf<T>, BalanceOf<T>, T::BlockNumber)>\"\r\n              },\r\n              {\r\n                \"name\": \"statement\",\r\n                \"ty\": \"Option<StatementKind>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Mint a new claim to collect DOTs.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Root_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `who`: The Ethereum address allowed to collect this claim.\",\r\n              \" - `value`: The number of DOTs that will be claimed.\",\r\n              \" - `vesting_schedule`: An optional vesting schedule for these DOTs.\",\r\n              \"\",\r\n              \" <weight>\",\r\n              \" The weight of this call is"]
[15.608514, "o", " invariant over the input parameters.\",\r\n              \" We assume worst case that both vesting and statement is being inserted.\",\r\n              \"\",\r\n              \" Total Complexity: O(1)\",\r\n              \" </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"claim_attest\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"dest\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"ethereum_signature\",\r\n                \"ty\": \"EcdsaSignature\"\r\n              },\r\n              {\r\n                \"name\": \"statement\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Make a claim to collect your DOTs by signing a statement.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _None_.\",\r\n              \"\",\r\n              \" Unsigned Validation:\",\r\n              \" A call to `claim_attest` is deemed valid if the signature provided matches\""]
[15.608571, "o", ",\r\n              \" the expected signed message of:\",\r\n              \"\",\r\n              \" > Ethereum Signed Message:\",\r\n              \" > (configured prefix string)(address)(statement)\",\r\n              \"\",\r\n              \" and `address` matches the `dest` account; the `statement` must match that which is\",\r\n              \" expected according to your purchase arrangement.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `dest`: The destination account to payout the claim.\",\r\n              \" - `ethereum_signature`: The signature of an ethereum signed message\",\r\n              \"    matching the format described above.\",\r\n              \" - `statement`: The identity of the statement which is being attested to in the signature.\",\r\n              \"\",\r\n              \" <weight>\",\r\n              \" The weight of this call is invariant over the input parameters.\",\r\n              \" Weight includes logic to validate unsigned `claim_attest` call.\",\r\n              \"\",\r\n              \" Total Complexity: O(1"]
[15.608631, "o", ")\",\r\n              \" </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"attest\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"statement\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Attest to a statement, needed to finalize the claims process.\",\r\n              \"\",\r\n              \" WARNING: Insecure unless your chain includes `PrevalidateAttests` as a `SignedExtension`.\",\r\n              \"\",\r\n              \" Unsigned Validation:\",\r\n              \" A call to attest is deemed valid if the sender has a `Preclaim` registered\",\r\n              \" and provides a `statement` which is expected for the account.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `statement`: The identity of the statement which is being attested to in the signature.\",\r\n              \"\",\r\n              \" <weight>\",\r\n              \" The weight of this call is invariant over the input parameters.\",\r\n     "]
[15.60874, "o", "         \" Weight includes logic to do pre-validation on `attest` call.\",\r\n              \"\",\r\n              \" Total Complexity: O(1)\",\r\n              \" </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"move_claim\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"old\",\r\n                \"ty\": \"EthereumAddress\"\r\n              },\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"EthereumAddress\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_preclaim\",\r\n                \"ty\": \"Option<T::AccountId>\"\r\n              }\r\n            ],\r\n            \"documentation\": []\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"Claimed\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"EthereumAddress\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Someone claimed some DOTs. [who, ethereum_address, amount]\"\r\n            ]\r\n          }\r\n        ]"]
[15.60879, "o", ",\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"Prefix\",\r\n            \"ty\": \"&[u8]\",\r\n            \"value\": [\r\n              132,\r\n              80,\r\n              97,\r\n              121,\r\n              32,\r\n              68,\r\n              79,\r\n              84,\r\n              115,\r\n              32,\r\n              116,\r\n              111,\r\n              32,\r\n              116,\r\n              104,\r\n              101,\r\n              32,\r\n              80,\r\n              111,\r\n              108,\r\n              107,\r\n              97,\r\n              100,\r\n              111,\r\n              116,\r\n              32,\r\n              97,\r\n              99,\r\n              99,\r\n              111,\r\n              117,\r\n              110,\r\n              116,\r\n              58\r\n            ],\r\n            \"documentation\": [\r\n              \" The Prefix that is used in signed Ethereum messages for this network\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InvalidE"]
[15.608853, "o", "thereumSignature\",\r\n            \"documentation\": [\r\n              \" Invalid Ethereum signature.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SignerHasNoClaim\",\r\n            \"documentation\": [\r\n              \" Ethereum address has no claim.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SenderHasNoClaim\",\r\n            \"documentation\": [\r\n              \" Account ID sending tx has no claim.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PotUnderflow\",\r\n            \"documentation\": [\r\n              \" There's not enough in the pot to pay out some unvested amount. Generally implies a logic\",\r\n              \" error.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidStatement\",\r\n            \"documentation\": [\r\n              \" A needed statement was not included.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"VestedBalanceExists\",\r\n            \"documentation\": [\r\n              \" The account already has a vested balance.\"\r\n "]
[15.608915, "o", "           ]\r\n          }\r\n        ],\r\n        \"index\": 24\r\n      },\r\n      {\r\n        \"name\": \"Vesting\",\r\n        \"storage\": {\r\n          \"prefix\": \"Vesting\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Vesting\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"VestingInfo<BalanceOf<T>, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Information regarding the vesting of a given account.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"vest\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Unlock any vested funds of the sender account.\",\r\n              \"\",\r\n              \" The dispatc"]
[15.609018, "o", "h origin for this call must be _Signed_ and the sender must have funds still\",\r\n              \" locked under this pallet.\",\r\n              \"\",\r\n              \" Emits either `VestingCompleted` or `VestingUpdated`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - DbWeight: 2 Reads, 2 Writes\",\r\n              \"     - Reads: Vesting Storage, Balances Locks, [Sender Account]\",\r\n              \"     - Writes: Vesting Storage, Balances Locks, [Sender Account]\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"vest_other\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"target\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Unlock any vested funds of a `target` account.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `target`: "]
[15.609087, "o", "The account whose vested funds should be unlocked. Must have funds still\",\r\n              \" locked under this pallet.\",\r\n              \"\",\r\n              \" Emits either `VestingCompleted` or `VestingUpdated`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - DbWeight: 3 Reads, 3 Writes\",\r\n              \"     - Reads: Vesting Storage, Balances Locks, Target Account\",\r\n              \"     - Writes: Vesting Storage, Balances Locks, Target Account\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"vested_transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"target\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"schedule\",\r\n                \"ty\": \"VestingInfo<BalanceOf<T>, T::BlockNumber>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Create a vested transfer.\",\r\n              \"\",\r\n   "]
[15.609154, "o", "           \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `target`: The account that should be transferred the vested funds.\",\r\n              \" - `amount`: The amount of funds to transfer and will be vested.\",\r\n              \" - `schedule`: The vesting schedule attached to the transfer.\",\r\n              \"\",\r\n              \" Emits `VestingCreated`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - DbWeight: 3 Reads, 3 Writes\",\r\n              \"     - Reads: Vesting Storage, Balances Locks, Target Account, [Sender Account]\",\r\n              \"     - Writes: Vesting Storage, Balances Locks, Target Account, [Sender Account]\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"force_vested_transfer\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"source\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n      "]
[15.609223, "o", "          \"name\": \"target\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"schedule\",\r\n                \"ty\": \"VestingInfo<BalanceOf<T>, T::BlockNumber>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Force a vested transfer.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Root_.\",\r\n              \"\",\r\n              \" - `source`: The account whose funds should be transferred.\",\r\n              \" - `target`: The account that should be transferred the vested funds.\",\r\n              \" - `amount`: The amount of funds to transfer and will be vested.\",\r\n              \" - `schedule`: The vesting schedule attached to the transfer.\",\r\n              \"\",\r\n              \" Emits `VestingCreated`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(1)`.\",\r\n              \" - DbWeight: 4 Reads, 4 Writes\",\r\n              \"     - Reads: Vesting Storage, Balances Locks,"]
[15.609295, "o", " Target Account, Source Account\",\r\n              \"     - Writes: Vesting Storage, Balances Locks, Target Account, Source Account\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"VestingUpdated\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount vested has been updated. This could indicate more funds are available. The\",\r\n              \" balance given is the amount which is left unvested (and thus locked).\",\r\n              \" \\\\[account, unvested\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"VestingCompleted\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An \\\\[account\\\\] has become fully vested. No further vesting can happen.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"MinVestedT"]
[15.609406, "o", "ransfer\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              16,\r\n              165,\r\n              212,\r\n              232,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum amount transferred to call `vested_transfer`.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"NotVesting\",\r\n            \"documentation\": [\r\n              \" The account given is not vesting.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ExistingVestingSchedule\",\r\n            \"documentation\": [\r\n              \" An existing vesting schedule already exists for this account that cannot be clobbered.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AmountLow\",\r\n            \"documentation\": [\r\n        "]
[15.609482, "o", "      \" Amount being transferred is too low to create a vesting schedule.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 25\r\n      },\r\n      {\r\n        \"name\": \"Utility\",\r\n        \"storage\": null,\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"batch\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"calls\",\r\n                \"ty\": \"Vec<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Send a batch of dispatch calls.\",\r\n              \"\",\r\n              \" May be called from any origin.\",\r\n              \"\",\r\n              \" - `calls`: The calls to be dispatched from the same origin.\",\r\n              \"\",\r\n              \" If origin is root then call are dispatch without checking origin filter. (This includes\",\r\n              \" bypassing `frame_system::Config::BaseCallFilter`).\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: O(C) where C is the number of calls to be batched.\",\r\n          "]
[15.60957, "o", "    \" # </weight>\",\r\n              \"\",\r\n              \" This will return `Ok` in all circumstances. To determine the success of the batch, an\",\r\n              \" event is deposited. If a call failed and the batch was interrupted, then the\",\r\n              \" `BatchInterrupted` event is deposited, along with the number of successful calls made\",\r\n              \" and the error of the failed call. If all were successful, then the `BatchCompleted`\",\r\n              \" event is deposited.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"as_derivative\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"u16\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Send a call through an indexed pseudonym of the sender.\",\r\n              \"\",\r\n              \" Filter from origin are passed along. The call will be di"]
[15.609643, "o", "spatched with an origin which\",\r\n              \" use the same filter as the origin of this call.\",\r\n              \"\",\r\n              \" NOTE: If you need to ensure that any account-based filtering is not honored (i.e.\",\r\n              \" because you expect `proxy` to have been used prior in the call stack and you do not want\",\r\n              \" the call restrictions to apply to any sub-accounts), then use `as_multi_threshold_1`\",\r\n              \" in the Multisig pallet instead.\",\r\n              \"\",\r\n              \" NOTE: Prior to version *12, this was called `as_limited_sub`.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"batch_all\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"calls\",\r\n                \"ty\": \"Vec<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Send a batch of dispatch calls and atomically execute them.\",\r\n   "]
[15.609725, "o", "           \" The whole transaction will rollback and fail if any of the calls failed.\",\r\n              \"\",\r\n              \" May be called from any origin.\",\r\n              \"\",\r\n              \" - `calls`: The calls to be dispatched from the same origin.\",\r\n              \"\",\r\n              \" If origin is root then call are dispatch without checking origin filter. (This includes\",\r\n              \" bypassing `frame_system::Config::BaseCallFilter`).\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: O(C) where C is the number of calls to be batched.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"BatchInterrupted\",\r\n            \"arguments\": [\r\n              \"u32\",\r\n              \"DispatchError\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Batch of dispatches did not complete fully. Index of first failing dispatch given, as\",\r\n              \" well as the error. \\\\[index, error\\\\]\"\r\n     "]
[15.60981, "o", "       ]\r\n          },\r\n          {\r\n            \"name\": \"BatchCompleted\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Batch of dispatches completed fully with no error.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [],\r\n        \"errors\": [],\r\n        \"index\": 26\r\n      },\r\n      {\r\n        \"name\": \"Identity\",\r\n        \"storage\": {\r\n          \"prefix\": \"Identity\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"IdentityOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"Registration<BalanceOf<T>>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Information that is pertinent to identify the entity behind an account.\",\r\n                \"\",\r\n          "]
[15.609892, "o", "      \" TWOX-NOTE: OK ― `AccountId` is a secure hash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SuperOf\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Blake2_128Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"(T::AccountId, Data)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The super-identity of an alternative \\\"sub\\\" identity together with its name, within that\",\r\n                \" context. If the account is not some other account's sub-identity, then just `None`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SubsOf\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n            "]
[15.609919, "o", "      \"value\": \"(BalanceOf<T>, Vec<T::AccountId>)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Alternative \\\"sub\\\" identities of this account.\",\r\n                \"\",\r\n                \" The first item is the deposit, the second is a vector of the accounts.\",\r\n                \"\",\r\n                \" TWOX-NOTE: OK ― `AccountId` is a secure hash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Registrars\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<Option<RegistrarInfo<BalanceOf<T>"]
[15.61002, "o", ", T::AccountId>>>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The set of registrars. Not expected to get very big as can only be added through a\",\r\n                \" special origin (likely a council motion).\",\r\n                \"\",\r\n                \" The index into this can be cast to `RegistrarIndex` to get a valid value.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"add_registrar\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"account\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add a registrar to the system.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be `T::RegistrarOrigin`.\",\r\n              \"\",\r\n              \" - `account`: the account of the registrar.\",\r\n              \"\",\r\n              \" Emits `RegistrarAdded` if"]
[15.61009, "o", " successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R)` where `R` registrar-count (governance-bounded and code-bounded).\",\r\n              \" - One storage mutation (codec `O(R)`).\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_identity\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"info\",\r\n                \"ty\": \"IdentityInfo\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set an account's identity information and reserve the appropriate deposit.\",\r\n              \"\",\r\n              \" If the account already has identity information, the deposit is taken as part payment\",\r\n              \" for the new deposit.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `info`: The identity information.\",\r\n              \"\",\r\n              \" Emits `IdentitySet` if succes"]
[15.61017, "o", "sful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(X + X' + R)`\",\r\n              \"   - where `X` additional-field-count (deposit-bounded and code-bounded)\",\r\n              \"   - where `R` judgements-count (registrar-count-bounded)\",\r\n              \" - One balance reserve operation.\",\r\n              \" - One storage mutation (codec-read `O(X' + R)`, codec-write `O(X + R)`).\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_subs\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"subs\",\r\n                \"ty\": \"Vec<(T::AccountId, Data)>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the sub-accounts of the sender.\",\r\n              \"\",\r\n              \" Payment: Any aggregate balance reserved by previous `set_subs` calls will be returned\",\r\n              \" and an amount `SubAccountDeposit` will be reserved for each item in `subs`.\",\r\n             "]
[15.610595, "o", " \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a registered\",\r\n              \" identity.\",\r\n              \"\",\r\n              \" - `subs`: The identity's (new) sub-accounts.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(P + S)`\",\r\n              \"   - where `P` old-subs-count (hard- and deposit-bounded).\",\r\n              \"   - where `S` subs-count (hard- and deposit-bounded).\",\r\n              \" - At most one balance operations.\",\r\n              \" - DB:\",\r\n              \"   - `P + S` storage mutations (codec complexity `O(1)`)\",\r\n              \"   - One storage read (codec complexity `O(P)`).\",\r\n              \"   - One storage write (codec complexity `O(S)`).\",\r\n              \"   - One storage-exists (`IdentityOf::contains_key`).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"clear_identity\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Clear an account's"]
[15.610688, "o", " identity info and all sub-accounts and return all deposits.\",\r\n              \"\",\r\n              \" Payment: All reserved balances on the account are returned.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a registered\",\r\n              \" identity.\",\r\n              \"\",\r\n              \" Emits `IdentityCleared` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R + S + X)`\",\r\n              \"   - where `R` registrar-count (governance-bounded).\",\r\n              \"   - where `S` subs-count (hard- and deposit-bounded).\",\r\n              \"   - where `X` additional-field-count (deposit-bounded and code-bounded).\",\r\n              \" - One balance-unreserve operation.\",\r\n              \" - `2` storage reads and `S + 2` storage deletions.\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"request_judgement\",\r\n            \"arguments\": [\r\n          "]
[15.610767, "o", "    {\r\n                \"name\": \"reg_index\",\r\n                \"ty\": \"Compact<RegistrarIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"max_fee\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Request a judgement from a registrar.\",\r\n              \"\",\r\n              \" Payment: At most `max_fee` will be reserved for payment to the registrar if judgement\",\r\n              \" given.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a\",\r\n              \" registered identity.\",\r\n              \"\",\r\n              \" - `reg_index`: The index of the registrar whose judgement is requested.\",\r\n              \" - `max_fee`: The maximum fee that may be paid. This should just be auto-populated as:\",\r\n              \"\",\r\n              \" ```nocompile\",\r\n              \" Self::registrars().get(reg_index).unwrap().fee\",\r\n              \" ```\",\r\n              \"\",\r\n          "]
[15.610848, "o", "    \" Emits `JudgementRequested` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R + X)`.\",\r\n              \" - One balance-reserve operation.\",\r\n              \" - Storage: 1 read `O(R)`, 1 mutate `O(X + R)`.\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_request\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"reg_index\",\r\n                \"ty\": \"RegistrarIndex\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel a previous request.\",\r\n              \"\",\r\n              \" Payment: A previously reserved deposit is returned on success.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a\",\r\n              \" registered identity.\",\r\n              \"\",\r\n              \" - `reg_index`: The index of the registrar whose judgement is no longer requested.\",\r\n              \"\",\r\n"]
[15.610948, "o", "              \" Emits `JudgementUnrequested` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R + X)`.\",\r\n              \" - One balance-reserve operation.\",\r\n              \" - One storage mutation `O(R + X)`.\",\r\n              \" - One event\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_fee\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<RegistrarIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"fee\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the fee required for a judgement to be requested from a registrar.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must be the account\",\r\n              \" of the registrar whose index is `index`.\",\r\n              \"\",\r\n              \" - `index`: the index o"]
[15.61103, "o", "f the registrar whose fee is to be set.\",\r\n              \" - `fee`: the new fee.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R)`.\",\r\n              \" - One storage mutation `O(R)`.\",\r\n              \" - Benchmark: 7.315 + R * 0.329 µs (min squares analysis)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_account_id\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<RegistrarIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"new\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Change the account associated with a registrar.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must be the account\",\r\n              \" of the registrar whose index is `index`.\",\r\n              \"\",\r\n              \" - `index`: the index of the registrar wh"]
[15.611121, "o", "ose fee is to be set.\",\r\n              \" - `new`: the new account ID.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R)`.\",\r\n              \" - One storage mutation `O(R)`.\",\r\n              \" - Benchmark: 8.823 + R * 0.32 µs (min squares analysis)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"set_fields\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"Compact<RegistrarIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"fields\",\r\n                \"ty\": \"IdentityFields\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Set the field information for a registrar.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must be the account\",\r\n              \" of the registrar whose index is `index`.\",\r\n              \"\",\r\n              \" - `index`: the index of the registrar whose fee is to be"]
[15.611198, "o", " set.\",\r\n              \" - `fields`: the fields that the registrar concerns themselves with.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R)`.\",\r\n              \" - One storage mutation `O(R)`.\",\r\n              \" - Benchmark: 7.464 + R * 0.325 µs (min squares analysis)\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"provide_judgement\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"reg_index\",\r\n                \"ty\": \"Compact<RegistrarIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"target\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"judgement\",\r\n                \"ty\": \"Judgement<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Provide a judgement for an account's identity.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the"]
[15.611263, "o", " sender must be the account\",\r\n              \" of the registrar whose index is `reg_index`.\",\r\n              \"\",\r\n              \" - `reg_index`: the index of the registrar whose judgement is being made.\",\r\n              \" - `target`: the account whose identity the judgement is upon. This must be an account\",\r\n              \"   with a registered identity.\",\r\n              \" - `judgement`: the judgement of the registrar of index `reg_index` about `target`.\",\r\n              \"\",\r\n              \" Emits `JudgementGiven` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R + X)`.\",\r\n              \" - One balance-transfer operation.\",\r\n              \" - Up to one account-lookup operation.\",\r\n              \" - Storage: 1 read `O(R)`, 1 mutate `O(R + X)`.\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"kill_identity\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"target\",\r\n      "]
[15.61136, "o", "          \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove an account's identity and sub-account information and slash the deposits.\",\r\n              \"\",\r\n              \" Payment: Reserved balances from `set_subs` and `set_identity` are slashed and handled by\",\r\n              \" `Slash`. Verification request deposits are not returned; they should be cancelled\",\r\n              \" manually using `cancel_request`.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must match `T::ForceOrigin`.\",\r\n              \"\",\r\n              \" - `target`: the account whose identity the judgement is upon. This must be an account\",\r\n              \"   with a registered identity.\",\r\n              \"\",\r\n              \" Emits `IdentityKilled` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(R + S + X)`.\",\r\n              \" - One balance-reserve operation.\",\r\n              \" - `S + 2` storage mu"]
[15.611459, "o", "tations.\",\r\n              \" - One event.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"add_sub\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"sub\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"data\",\r\n                \"ty\": \"Data\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Add the given account to the sender's subs.\",\r\n              \"\",\r\n              \" Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated\",\r\n              \" to the sender.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a registered\",\r\n              \" sub identity of `sub`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"rename_sub\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"sub\",\r\n                \"ty\": \"<T::Loo"]
[15.611539, "o", "kup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": \"data\",\r\n                \"ty\": \"Data\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Alter the associated name of the given sub-account.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a registered\",\r\n              \" sub identity of `sub`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"remove_sub\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"sub\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove the given account from the sender's subs.\",\r\n              \"\",\r\n              \" Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated\",\r\n              \" to the sender.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signe"]
[15.611609, "o", "d_ and the sender must have a registered\",\r\n              \" sub identity of `sub`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"quit_sub\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Remove the sender as a sub-account.\",\r\n              \"\",\r\n              \" Payment: Balance reserved by a previous `set_subs` call for one sub will be repatriated\",\r\n              \" to the sender (*not* the original depositor).\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the sender must have a registered\",\r\n              \" super-identity.\",\r\n              \"\",\r\n              \" NOTE: This should not normally be used, but is provided in the case that the non-\",\r\n              \" controller of an account is maliciously registered as a sub-account.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"IdentitySet\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n       "]
[15.611686, "o", "     \"documentation\": [\r\n              \" A name was set or reset (which will remove all judgements). \\\\[who\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IdentityCleared\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A name was cleared, and the given balance returned. \\\\[who, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"IdentityKilled\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A name was removed and the given balance slashed. \\\\[who, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"JudgementRequested\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"RegistrarIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A judgement was asked from a registrar. \\\\[who, registrar_index\\\\]\"\r\n        "]
[15.611778, "o", "    ]\r\n          },\r\n          {\r\n            \"name\": \"JudgementUnrequested\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"RegistrarIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A judgement request was retracted. \\\\[who, registrar_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"JudgementGiven\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"RegistrarIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A judgement was given by a registrar. \\\\[target, registrar_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"RegistrarAdded\",\r\n            \"arguments\": [\r\n              \"RegistrarIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A registrar was added. \\\\[registrar_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SubIdentityAdded\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n       "]
[15.611856, "o", "       \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A sub-identity was added to an identity and the deposit paid. \\\\[sub, main, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SubIdentityRemoved\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A sub-identity was removed from an identity and the deposit freed.\",\r\n              \" \\\\[sub, main, deposit\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SubIdentityRevoked\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A sub-identity was cleared, and the given deposit repatriated from the\",\r\n              \" main identity account to the sub-identity account. \\\\[sub, main, deposit\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constan"]
[15.61194, "o", "ts\": [\r\n          {\r\n            \"name\": \"BasicDeposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              125,\r\n              181,\r\n              42,\r\n              47,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit for a registered identity.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"FieldDeposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              205,\r\n              86,\r\n              39,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" T"]
[15.612028, "o", "he amount held on deposit per additional field for a registered identity.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SubAccountDeposit\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              128,\r\n              248,\r\n              132,\r\n              176,\r\n              46,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit for a registered subaccount. This should account for the fact\",\r\n              \" that one storage item's value will increase by the size of an account ID, and there will be\",\r\n              \" another trie item whose value is the size of an account ID plus 32 bytes.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxSubAccounts\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              100,\r"]
[15.612107, "o", "\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum number of sub-accounts allowed per identified account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxAdditionalFields\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              100,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Maximum number of additional fields that may be stored in an ID. Needed to bound the I/O\",\r\n              \" required to access an identity, but can be pretty high.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxRegistrars\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              20,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Maxmimum number of registrars allowed in the system. Needed to bound the complexity\",\r\n              \" of, e.g., updating judgement"]
[15.612172, "o", "s.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"TooManySubAccounts\",\r\n            \"documentation\": [\r\n              \" Too many subs-accounts.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotFound\",\r\n            \"documentation\": [\r\n              \" Account isn't found.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotNamed\",\r\n            \"documentation\": [\r\n              \" Account isn't named.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"EmptyIndex\",\r\n            \"documentation\": [\r\n              \" Empty index.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"FeeChanged\",\r\n            \"documentation\": [\r\n              \" Fee is changed.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoIdentity\",\r\n            \"documentation\": [\r\n              \" No identity found.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"StickyJudgement\",\r\n            \"documentatio"]
[15.612231, "o", "n\": [\r\n              \" Sticky judgement.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"JudgementGiven\",\r\n            \"documentation\": [\r\n              \" Judgement given.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidJudgement\",\r\n            \"documentation\": [\r\n              \" Invalid judgement.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidIndex\",\r\n            \"documentation\": [\r\n              \" The index is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidTarget\",\r\n            \"documentation\": [\r\n              \" The target is invalid.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyFields\",\r\n            \"documentation\": [\r\n              \" Too many additional fields.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooManyRegistrars\",\r\n            \"documentation\": [\r\n              \" Maximum amount of registrars reached. Cannot add any more.\"\r\n            ]\r\n          }"]
[15.612298, "o", ",\r\n          {\r\n            \"name\": \"AlreadyClaimed\",\r\n            \"documentation\": [\r\n              \" Account ID is already named.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotSub\",\r\n            \"documentation\": [\r\n              \" Sender is not a sub-account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotOwned\",\r\n            \"documentation\": [\r\n              \" Sub-account isn't owned by sender.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 28\r\n      },\r\n      {\r\n        \"name\": \"Proxy\",\r\n        \"storage\": {\r\n          \"prefix\": \"Proxy\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Proxies\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"(Vec<ProxyDefinition<T::AccountId, T::ProxyType, T::BlockNumber>>,\\n BalanceOf<T>)\",\r\n                  \"unused\": false\r\n                }\r\n     "]
[15.612364, "o", "         },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The set of account proxies. Maps the account which has delegated to the accounts\",\r\n                \" which are being delegated to, together with the amount held on deposit.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Announcements\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::AccountId\",\r\n                  \"value\": \"(Vec<Announcement<T::AccountId, CallHashOf<T>, T::BlockNumber>>,\\n BalanceOf<T>)\",\r\n                  \"unuse"]
[15.612426, "o", "d\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The announcements made by the proxy (key).\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"proxy\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"real\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"force_proxy_type\",\r\n                \"ty\": \"Option<T::ProxyType>\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              "]
[15.612503, "o", "}\r\n            ],\r\n            \"documentation\": [\r\n              \" Dispatch the given `call` from an account that the sender is authorised for through\",\r\n              \" `add_proxy`.\",\r\n              \"\",\r\n              \" Removes any corresponding announcement(s).\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `real`: The account that the proxy will make a call on behalf of.\",\r\n              \" - `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.\",\r\n              \" - `call`: The call to be made by the `real` account.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"add_proxy\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"delegate\",\r\n                \"ty\": \"T::Acco"]
[15.612587, "o", "untId\"\r\n              },\r\n              {\r\n                \"name\": \"proxy_type\",\r\n                \"ty\": \"T::ProxyType\"\r\n              },\r\n              {\r\n                \"name\": \"delay\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Register a proxy account for the sender that is able to make calls on its behalf.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `proxy`: The account that the `caller` would like to make a proxy.\",\r\n              \" - `proxy_type`: The permissions allowed for this proxy account.\",\r\n              \" - `delay`: The announcement period required of the initial proxy. Will generally be\",\r\n              \" zero.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r"]
[15.61266, "o", "\r\n          {\r\n            \"name\": \"remove_proxy\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"delegate\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"proxy_type\",\r\n                \"ty\": \"T::ProxyType\"\r\n              },\r\n              {\r\n                \"name\": \"delay\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Unregister a proxy account for the sender.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `proxy`: The account that the `caller` would like to remove as a proxy.\",\r\n              \" - `proxy_type`: The permissions currently enabled for the removed proxy account.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\"\r\n         "]
[15.612724, "o", "   ]\r\n          },\r\n          {\r\n            \"name\": \"remove_proxies\",\r\n            \"arguments\": [],\r\n            \"documentation\": [\r\n              \" Unregister all proxy accounts for the sender.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" WARNING: This may be called on accounts created by `anonymous`, however if done, then\",\r\n              \" the unreserved fees will be inaccessible. **All access to this account will be lost.**\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"anonymous\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"proxy_type\",\r\n                \"ty\": \"T::ProxyType\"\r\n              },\r\n              {\r\n                \"name\": \"delay\",\r\n                \"ty\": \"T::BlockNumber\"\r\n              },\r\n              {\r\n "]
[15.612779, "o", "               \"name\": \"index\",\r\n                \"ty\": \"u16\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Spawn a fresh new account that is guaranteed to be otherwise inaccessible, and\",\r\n              \" initialize it with a proxy of `proxy_type` for `origin` sender.\",\r\n              \"\",\r\n              \" Requires a `Signed` origin.\",\r\n              \"\",\r\n              \" - `proxy_type`: The type of the proxy that the sender will be registered as over the\",\r\n              \" new account. This will almost always be the most permissive `ProxyType` possible to\",\r\n              \" allow for maximum flexibility.\",\r\n              \" - `index`: A disambiguation index, in case this is called multiple times in the same\",\r\n              \" transaction (e.g. with `utility::batch`). Unless you're using `batch` you probably just\",\r\n              \" want to use `0`.\",\r\n              \" - `delay`: The announcement period required of the initial proxy. Will generally be\",\r\n              \" zero.\",\r"]
[15.612851, "o", "\r\n              \"\",\r\n              \" Fails with `Duplicate` if this has already been called in this transaction, from the\",\r\n              \" same sender, with the same parameters.\",\r\n              \"\",\r\n              \" Fails if there are insufficient funds to pay for deposit.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\",\r\n              \" TODO: Might be over counting 1 read\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"kill_anonymous\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"spawner\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"proxy_type\",\r\n                \"ty\": \"T::ProxyType\"\r\n              },\r\n              {\r\n                \"name\": \"index\",\r\n                \"ty\": \"u16\"\r\n              },\r\n              {\r\n                \"name\": \"height\",\r\n                \"ty\": \"Compact<T::BlockNumber>\"\r"]
[15.612931, "o", "\r\n              },\r\n              {\r\n                \"name\": \"ext_index\",\r\n                \"ty\": \"Compact<u32>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Removes a previously spawned anonymous proxy.\",\r\n              \"\",\r\n              \" WARNING: **All access to this account will be lost.** Any funds held in it will be\",\r\n              \" inaccessible.\",\r\n              \"\",\r\n              \" Requires a `Signed` origin, and the sender account must have been created by a call to\",\r\n              \" `anonymous` with corresponding parameters.\",\r\n              \"\",\r\n              \" - `spawner`: The account that originally called `anonymous` to create this account.\",\r\n              \" - `index`: The disambiguation index originally passed to `anonymous`. Probably `0`.\",\r\n              \" - `proxy_type`: The proxy type originally passed to `anonymous`.\",\r\n              \" - `height`: The height of the chain when the call to `anonymous` was processed.\",\r\n              \" - `ext_index`: T"]
[15.612991, "o", "he extrinsic index in which the call to `anonymous` was processed.\",\r\n              \"\",\r\n              \" Fails with `NoPermission` in case the caller is not a previously created anonymous\",\r\n              \" account whose `anonymous` call has corresponding parameters.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of the number of proxies the user has (P).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"announce\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"real\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"call_hash\",\r\n                \"ty\": \"CallHashOf<T>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Publish the hash of a proxy-call that will be made in the future.\",\r\n              \"\",\r\n              \" This must be called some number of blocks before the corresponding `proxy` is attempted\",\r\n            "]
[15.61306, "o", "  \" if the delay associated with the proxy relationship is greater than zero.\",\r\n              \"\",\r\n              \" No more than `MaxPending` announcements may be made at any one time.\",\r\n              \"\",\r\n              \" This will take a deposit of `AnnouncementDepositFactor` as well as\",\r\n              \" `AnnouncementDepositBase` if there are no other pending announcements.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and a proxy of `real`.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `real`: The account that the proxy will make a call on behalf of.\",\r\n              \" - `call_hash`: The hash of the call to be made by the `real` account.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of:\",\r\n              \" - A: the number of announcements made.\",\r\n              \" - P: the number of proxies the user has.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": "]
[15.613137, "o", "\"remove_announcement\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"real\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"call_hash\",\r\n                \"ty\": \"CallHashOf<T>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove a given announcement.\",\r\n              \"\",\r\n              \" May be called by a proxy account to remove a call they previously announced and return\",\r\n              \" the deposit.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `real`: The account that the proxy will make a call on behalf of.\",\r\n              \" - `call_hash`: The hash of the call to be made by the `real` account.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of:\",\r\n              \" - A: the number of announcements made.\",\r\n              \" - P: the number of "]
[15.613213, "o", "proxies the user has.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"reject_announcement\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"delegate\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"call_hash\",\r\n                \"ty\": \"CallHashOf<T>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove the given announcement of a delegate.\",\r\n              \"\",\r\n              \" May be called by a target (proxied) account to remove a call that one of their delegates\",\r\n              \" (`delegate`) has announced they want to execute. The deposit is returned.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `delegate`: The account that previously announced the call.\",\r\n              \" - `call_hash`: The hash of the call to be made.\",\r\n              "]
[15.613305, "o", "\"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of:\",\r\n              \" - A: the number of announcements made.\",\r\n              \" - P: the number of proxies the user has.\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"proxy_announced\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"delegate\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"real\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"force_proxy_type\",\r\n                \"ty\": \"Option<T::ProxyType>\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Dispatch the given `call` from an account that the sender is authorized for through\",\r\n              \" `add_proxy`.\",\r\n              \"\",\r\n              \" Removes an"]
[15.613428, "o", "y corresponding announcement(s).\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Parameters:\",\r\n              \" - `real`: The account that the proxy will make a call on behalf of.\",\r\n              \" - `force_proxy_type`: Specify the exact proxy type to be used and checked for this call.\",\r\n              \" - `call`: The call to be made by the `real` account.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" Weight is a function of:\",\r\n              \" - A: the number of announcements made.\",\r\n              \" - P: the number of proxies the user has.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"ProxyExecuted\",\r\n            \"arguments\": [\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A proxy was executed correctly, with the given \\\\[result\\\\].\"\r\n            ]\r\n          },\r\n          {\r\n"]
[15.613522, "o", "            \"name\": \"AnonymousCreated\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"ProxyType\",\r\n              \"u16\"\r\n            ],\r\n            \"documentation\": [\r\n              \" Anonymous account has been created by new proxy with given\",\r\n              \" disambiguation index and proxy type. \\\\[anonymous, who, proxy_type, disambiguation_index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Announced\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An announcement was placed to make a call in the future. \\\\[real, proxy, call_hash\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"ProxyDepositBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              132,\r\n              178,\r\n              149,\r\n              46,\r\n      "]
[15.613603, "o", "        0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The base amount of currency needed to reserve for creating a proxy.\",\r\n              \"\",\r\n              \" This is held for an additional storage item whose value size is\",\r\n              \" `sizeof(Balance)` bytes and whose key size is `sizeof(AccountId)` bytes.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ProxyDepositFactor\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              128,\r\n              102,\r\n              171,\r\n              19,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The"]
[15.663708, "o", " amount of currency needed per proxy added.\",\r\n              \"\",\r\n              \" This is held for adding 32 bytes plus an instance of `ProxyType` more into a pre-existing\",\r\n              \" storage value. Thus, when configuring `ProxyDepositFactor` one should take into account\",\r\n              \" `32 + proxy_type.encode().len()` bytes of data.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxProxies\",\r\n            \"ty\": \"u16\",\r\n            \"value\": [\r\n              32,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum amount of proxies allowed for a single account.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxPending\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              32,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum amount of time-delayed announcements that are allowed to be pending.\"\r\n            ]\r\n          },\r\n          {\r"]
[15.663812, "o", "\r\n            \"name\": \"AnnouncementDepositBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              132,\r\n              178,\r\n              149,\r\n              46,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The base amount of currency needed to reserve for creating an announcement.\",\r\n              \"\",\r\n              \" This is held when a new storage item holding a `Balance` is created (typically 16 bytes).\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AnnouncementDepositFactor\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              205,\r\n              86,\r\n              39,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,"]
[15.663867, "o", "\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount of currency needed per announcement made.\",\r\n              \"\",\r\n              \" This is held for adding an `AccountId`, `Hash` and `BlockNumber` (typically 68 bytes)\",\r\n              \" into a pre-existing storage value.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"TooMany\",\r\n            \"documentation\": [\r\n              \" There are too many proxies registered or too many announcements pending.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotFound\",\r\n            \"documentation\": [\r\n              \" Proxy registration not found.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotProxy\",\r\n            \"documentation\": [\r\n              \" Sender is not a proxy of the account to be proxied.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Unproxyable\""]
[15.663946, "o", ",\r\n            \"documentation\": [\r\n              \" A call which is incompatible with the proxy type's filter was attempted.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Duplicate\",\r\n            \"documentation\": [\r\n              \" Account is already a proxy.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoPermission\",\r\n            \"documentation\": [\r\n              \" Call may not be made by proxy because it may escalate its privileges.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Unannounced\",\r\n            \"documentation\": [\r\n              \" Announcement, if made at all, was made too recently.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoSelfProxy\",\r\n            \"documentation\": [\r\n              \" Cannot add self as proxy.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 29\r\n      },\r\n      {\r\n        \"name\": \"Multisig\",\r\n        \"storage\": {\r\n          \"prefix\": \"Multisig\",\r\n          \"entries\": [\r\n            {\r\n       "]
[15.663995, "o", "       \"name\": \"Multisigs\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"DoubleMap\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key1\": \"T::AccountId\",\r\n                  \"key2\": \"[u8; 32]\",\r\n                  \"value\": \"Multisig<T::BlockNumber, BalanceOf<T>, T::AccountId>\",\r\n                  \"key2_hasher\": \"Blake2_128Concat\"\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The set of open multisig operations.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Calls\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"[u8; 32]\",\r\n                  \"value\": \"(OpaqueCall, T::AccountId, BalanceOf<T>)\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n      "]
[15.664027, "o", "        ],\r\n              \"documentation\": []\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"as_multi_threshold_1\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"other_signatories\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"Box<<T as Config>::Call>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Immediately dispatch a multi-signature call using a single approval from the caller.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `other_signatories`: The accounts (other than the sender) who are part of the\",\r\n              \" multi-signature, but do not participate in the approval process.\",\r\n              \" - `call`: The call to be executed.\",\r\n              \"\",\r\n              \" Result is equivalent to the dispatched result.\",\r\n       "]
[15.664058, "o", "       \"\",\r\n              \" # <weight>\",\r\n              \" O(Z + C) where Z is the length of the call and C its execution weight.\",\r\n              \" -------------------------------\",\r\n              \" - DB Weight: None\",\r\n              \" - Plus Call Weight\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"as_multi\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"threshold\",\r\n                \"ty\": \"u16\"\r\n              },\r\n              {\r\n                \"name\": \"other_signatories\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_timepoint\",\r\n                \"ty\": \"Option<Timepoint<T::BlockNumber>>\"\r\n              },\r\n              {\r\n                \"name\": \"call\",\r\n                \"ty\": \"OpaqueCall\"\r\n              },\r\n              {\r\n                \"name\": \"store_call\",\r\n                \"ty\": \"bool\"\r\n              },\r\n              {\r\n                \"name\": \"max_weight\",\r\n     "]
[15.664088, "o", "           \"ty\": \"Weight\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Register approval for a dispatch to be made from a deterministic composite account if\",\r\n              \" approved by a total of `threshold - 1` of `other_signatories`.\",\r\n              \"\",\r\n              \" If there are enough, then dispatch the call.\",\r\n              \"\",\r\n              \" Payment: `DepositBase` will be reserved if this is the first approval, plus\",\r\n              \" `threshold` times `DepositFactor`. It is returned once this dispatch happens or\",\r\n              \" is cancelled.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `threshold`: The total number of approvals for this dispatch before it is executed.\",\r\n              \" - `other_signatories`: The accounts (other than the sender) who can approve this\",\r\n              \" dispatch. May not be empty.\",\r\n              \" - `maybe_timepoint`: If this is the fir"]
[15.664139, "o", "st approval, then this must be `None`. If it is\",\r\n              \" not the first approval, then it must be `Some`, with the timepoint (block number and\",\r\n              \" transaction index) of the first approval transaction.\",\r\n              \" - `call`: The call to be executed.\",\r\n              \"\",\r\n              \" NOTE: Unless this is the final approval, you will generally want to use\",\r\n              \" `approve_as_multi` instead, since it only requires a hash of the call.\",\r\n              \"\",\r\n              \" Result is equivalent to the dispatched result if `threshold` is exactly `1`. Otherwise\",\r\n              \" on success, result is `Ok` and the result from the interior call, if it was executed,\",\r\n              \" may be found in the deposited `MultisigExecuted` event.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(S + Z + Call)`.\",\r\n              \" - Up to one balance-reserve or unreserve operation.\",\r\n              \" - One passthrough operation, one insert, both `O(S)` where `S"]
[15.664208, "o", "` is the number of\",\r\n              \"   signatories. `S` is capped by `MaxSignatories`, with weight being proportional.\",\r\n              \" - One call encode & hash, both of complexity `O(Z)` where `Z` is tx-len.\",\r\n              \" - One encode & hash, both of complexity `O(S)`.\",\r\n              \" - Up to one binary search and insert (`O(logS + S)`).\",\r\n              \" - I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.\",\r\n              \" - One event.\",\r\n              \" - The weight of the `call`.\",\r\n              \" - Storage: inserts one item, value size bounded by `MaxSignatories`, with a\",\r\n              \"   deposit taken for its lifetime of\",\r\n              \"   `DepositBase + threshold * DepositFactor`.\",\r\n              \" -------------------------------\",\r\n              \" - DB Weight:\",\r\n              \"     - Reads: Multisig Storage, [Caller Account], Calls (if `store_call`)\",\r\n              \"     - Writes: Multisig Storage, [Caller Account], Calls (if `store_call`)\",\r\n              \" - Plus Cal"]
[15.664284, "o", "l Weight\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"approve_as_multi\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"threshold\",\r\n                \"ty\": \"u16\"\r\n              },\r\n              {\r\n                \"name\": \"other_signatories\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"maybe_timepoint\",\r\n                \"ty\": \"Option<Timepoint<T::BlockNumber>>\"\r\n              },\r\n              {\r\n                \"name\": \"call_hash\",\r\n                \"ty\": \"[u8; 32]\"\r\n              },\r\n              {\r\n                \"name\": \"max_weight\",\r\n                \"ty\": \"Weight\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Register approval for a dispatch to be made from a deterministic composite account if\",\r\n              \" approved by a total of `threshold - 1` of `other_signatories`.\",\r\n              \"\",\r\n              \" Payment: `DepositBase` wi"]
[15.664343, "o", "ll be reserved if this is the first approval, plus\",\r\n              \" `threshold` times `DepositFactor`. It is returned once this dispatch happens or\",\r\n              \" is cancelled.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `threshold`: The total number of approvals for this dispatch before it is executed.\",\r\n              \" - `other_signatories`: The accounts (other than the sender) who can approve this\",\r\n              \" dispatch. May not be empty.\",\r\n              \" - `maybe_timepoint`: If this is the first approval, then this must be `None`. If it is\",\r\n              \" not the first approval, then it must be `Some`, with the timepoint (block number and\",\r\n              \" transaction index) of the first approval transaction.\",\r\n              \" - `call_hash`: The hash of the call to be executed.\",\r\n              \"\",\r\n              \" NOTE: If this is the final approval, you will want to use `as_multi` instead.\",\r\n       "]
[15.664387, "o", "       \"\",\r\n              \" # <weight>\",\r\n              \" - `O(S)`.\",\r\n              \" - Up to one balance-reserve or unreserve operation.\",\r\n              \" - One passthrough operation, one insert, both `O(S)` where `S` is the number of\",\r\n              \"   signatories. `S` is capped by `MaxSignatories`, with weight being proportional.\",\r\n              \" - One encode & hash, both of complexity `O(S)`.\",\r\n              \" - Up to one binary search and insert (`O(logS + S)`).\",\r\n              \" - I/O: 1 read `O(S)`, up to 1 mutate `O(S)`. Up to one remove.\",\r\n              \" - One event.\",\r\n              \" - Storage: inserts one item, value size bounded by `MaxSignatories`, with a\",\r\n              \"   deposit taken for its lifetime of\",\r\n              \"   `DepositBase + threshold * DepositFactor`.\",\r\n              \" ----------------------------------\",\r\n              \" - DB Weight:\",\r\n              \"     - Read: Multisig Storage, [Caller Account]\",\r\n              \"     - Write: Multisig Storage, [Caller Account"]
[15.664447, "o", "]\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"cancel_as_multi\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"threshold\",\r\n                \"ty\": \"u16\"\r\n              },\r\n              {\r\n                \"name\": \"other_signatories\",\r\n                \"ty\": \"Vec<T::AccountId>\"\r\n              },\r\n              {\r\n                \"name\": \"timepoint\",\r\n                \"ty\": \"Timepoint<T::BlockNumber>\"\r\n              },\r\n              {\r\n                \"name\": \"call_hash\",\r\n                \"ty\": \"[u8; 32]\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel a pre-existing, on-going multisig transaction. Any deposit reserved previously\",\r\n              \" for this operation will be unreserved on success.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" - `threshold`: The total number of approvals for this dispatch before it is "]
[15.664506, "o", "executed.\",\r\n              \" - `other_signatories`: The accounts (other than the sender) who can approve this\",\r\n              \" dispatch. May not be empty.\",\r\n              \" - `timepoint`: The timepoint (block number and transaction index) of the first approval\",\r\n              \" transaction for this dispatch.\",\r\n              \" - `call_hash`: The hash of the call to be executed.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - `O(S)`.\",\r\n              \" - Up to one balance-reserve or unreserve operation.\",\r\n              \" - One passthrough operation, one insert, both `O(S)` where `S` is the number of\",\r\n              \"   signatories. `S` is capped by `MaxSignatories`, with weight being proportional.\",\r\n              \" - One encode & hash, both of complexity `O(S)`.\",\r\n              \" - One event.\",\r\n              \" - I/O: 1 read `O(S)`, one remove.\",\r\n              \" - Storage: removes one item.\",\r\n              \" ----------------------------------\",\r\n              \" - DB Weight:\",\r\n "]
[15.664551, "o", "             \"     - Read: Multisig Storage, [Caller Account], Refund Account, Calls\",\r\n              \"     - Write: Multisig Storage, [Caller Account], Refund Account, Calls\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"NewMultisig\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"AccountId\",\r\n              \"CallHash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A new multisig operation has begun. \\\\[approving, multisig, call_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MultisigApproval\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Timepoint<BlockNumber>\",\r\n              \"AccountId\",\r\n              \"CallHash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A multisig operation has been approved by someone.\",\r\n              \" \\\\[approving, timepoint, multisig, call_hash\\\\]\"\r\n            ]\r\n          },\r\n          {"]
[15.664589, "o", "\r\n            \"name\": \"MultisigExecuted\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Timepoint<BlockNumber>\",\r\n              \"AccountId\",\r\n              \"CallHash\",\r\n              \"DispatchResult\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A multisig operation has been executed. \\\\[approving, timepoint, multisig, call_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MultisigCancelled\",\r\n            \"arguments\": [\r\n              \"AccountId\",\r\n              \"Timepoint<BlockNumber>\",\r\n              \"AccountId\",\r\n              \"CallHash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A multisig operation has been cancelled. \\\\[cancelling, timepoint, multisig, call_hash\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"DepositBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              140,\r\n              97,\r\n              197,\r\n   "]
[15.664622, "o", "           46,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The base amount of currency needed to reserve for creating a multisig execution or to store\",\r\n              \" a dispatch call for later.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DepositFactor\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              208,\r\n              18,\r\n              19,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount of currency needed per unit threshold when creating a multisig execution.\"\r\n            ]\r\n          }"]
[15.664655, "o", ",\r\n          {\r\n            \"name\": \"MaxSignatories\",\r\n            \"ty\": \"u16\",\r\n            \"value\": [\r\n              100,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The maximum amount of signatories allowed for a given multisig.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"MinimumThreshold\",\r\n            \"documentation\": [\r\n              \" Threshold must be 2 or greater.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyApproved\",\r\n            \"documentation\": [\r\n              \" Call is already approved by this signatory.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoApprovalsNeeded\",\r\n            \"documentation\": [\r\n              \" Call doesn't need any (more) approvals.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TooFewSignatories\",\r\n            \"documentation\": [\r\n              \" There are too few signatories in the list.\"\r\n            ]\r\n          },\r"]
[15.66482, "o", "\r\n          {\r\n            \"name\": \"TooManySignatories\",\r\n            \"documentation\": [\r\n              \" There are too many signatories in the list.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SignatoriesOutOfOrder\",\r\n            \"documentation\": [\r\n              \" The signatories were provided out of order; they should be ordered.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SenderInSignatories\",\r\n            \"documentation\": [\r\n              \" The sender was contained in the other signatories; it shouldn't be.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotFound\",\r\n            \"documentation\": [\r\n              \" Multisig operation not found when attempting to cancel.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotOwner\",\r\n            \"documentation\": [\r\n              \" Only the account that originally created the multisig is able to cancel it.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NoTimepoint\",\r\n  "]
[15.664901, "o", "          \"documentation\": [\r\n              \" No timepoint was given, yet the multisig operation is already underway.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"WrongTimepoint\",\r\n            \"documentation\": [\r\n              \" A different timepoint was given to the multisig operation that is underway.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnexpectedTimepoint\",\r\n            \"documentation\": [\r\n              \" A timepoint was given, yet no multisig operation is underway.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaxWeightTooLow\",\r\n            \"documentation\": [\r\n              \" The maximum weight information provided was too low.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyStored\",\r\n            \"documentation\": [\r\n              \" The data to be stored is already stored.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 30\r\n      },\r\n      {\r\n        \"name\": \"Bounties\",\r\n        \"storage\": {\r\n          \"p"]
[15.664996, "o", "refix\": \"Treasury\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"BountyCount\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"BountyIndex\"\r\n              },\r\n              \"default\": [\r\n                0,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Number of bounty proposals that have been made.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Bounties\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"BountyIndex\",\r\n                  \"value\": \"Bounty<T::AccountId, BalanceOf<T>, T::BlockNumber>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Bounties that have been made.\"\r\n              ]\r\n   "]
[15.665034, "o", "         },\r\n            {\r\n              \"name\": \"BountyDescriptions\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"BountyIndex\",\r\n                  \"value\": \"Vec<u8>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" The description of each bounty.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"BountyApprovals\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Vec<BountyIndex>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Bounty indices that have been approved but not yet funded.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"propose_boun"]
[15.665079, "o", "ty\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              },\r\n              {\r\n                \"name\": \"description\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Propose a new bounty.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Payment: `TipReportDepositBase` will be reserved from the origin account, as well as\",\r\n              \" `DataDepositPerByte` for each byte in `reason`. It will be unreserved upon approval,\",\r\n              \" or slashed when rejected.\",\r\n              \"\",\r\n              \" - `curator`: The curator account whom will manage this bounty.\",\r\n              \" - `fee`: The curator fee.\",\r\n              \" - `value`: The total payment amount of this bounty, curator fee included.\",\r\n              \" - `description`: The description of this bounty.\"\r\n          "]
[15.665113, "o", "  ]\r\n          },\r\n          {\r\n            \"name\": \"approve_bounty\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Approve a bounty proposal. At a later time, the bounty will be funded and become active\",\r\n              \" and the original deposit will be returned.\",\r\n              \"\",\r\n              \" May only be called from `T::ApproveOrigin`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"propose_curator\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"curator\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              },\r\n              {\r\n                \"name\": "]
[15.665144, "o", "\"fee\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Assign a curator to a funded bounty.\",\r\n              \"\",\r\n              \" May only be called from `T::ApproveOrigin`.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"unassign_curator\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Unassign curator from a bounty.\",\r\n              \"\",\r\n              \" This function can only be called by the `RejectOrigin` a signed origin.\",\r\n              \"\",\r\n              \" If this function is called by the `RejectOrigin`, we assume that the curator is malicious\",\r\n              \" or inactive. As a result, we will slash the curator when possible.\",\r\n        "]
[15.665174, "o", "      \"\",\r\n              \" If the origin is the curator, we take this as a sign they are unable to do their job and\",\r\n              \" they willingly give up. We could slash them, but for now we allow them to recover their\",\r\n              \" deposit and exit without issue. (We may want to change this if it is abused.)\",\r\n              \"\",\r\n              \" Finally, the origin can be anyone if and only if the curator is \\\"inactive\\\". This allows\",\r\n              \" anyone in the community to call out that a curator is not doing their due diligence, and\",\r\n              \" we should pick a new curator. In this case the curator should also be slashed.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"accept_curator\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              }\r\n            ],\r\n            \"docum"]
[15.665213, "o", "entation\": [\r\n              \" Accept the curator role for a bounty.\",\r\n              \" A deposit will be reserved from curator and refund upon successful payout.\",\r\n              \"\",\r\n              \" May only be called from the curator.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"award_bounty\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"beneficiary\",\r\n                \"ty\": \"<T::Lookup as StaticLookup>::Source\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Award bounty to a beneficiary account. The beneficiary will be able to claim the funds after a delay.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be the curator of this bounty.\",\r\n              \"\",\r\n              \" - `bo"]
[15.665246, "o", "unty_id`: Bounty ID to award.\",\r\n              \" - `beneficiary`: The beneficiary account whom will receive the payout.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"claim_bounty\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Claim the payout from an awarded bounty after payout delay.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be the beneficiary of this bounty.\",\r\n              \"\",\r\n              \" - `bounty_id`: Bounty ID to claim.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"close_bounty\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bou"]
[15.665308, "o", "nty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Cancel a proposed or active bounty. All the funds will be sent to treasury and\",\r\n              \" the curator deposit will be unreserved if possible.\",\r\n              \"\",\r\n              \" Only `T::RejectOrigin` is able to cancel a bounty.\",\r\n              \"\",\r\n              \" - `bounty_id`: Bounty ID to cancel.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"extend_bounty_expiry\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"bounty_id\",\r\n                \"ty\": \"Compact<BountyIndex>\"\r\n              },\r\n              {\r\n                \"name\": \"_remark\",\r\n                \"ty\": \"Vec<u8>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Extend the expiry time of an active bounty.\",\r\n              \"\","]
[15.665368, "o", "\r\n              \" The dispatch origin for this call must be the curator of this bounty.\",\r\n              \"\",\r\n              \" - `bounty_id`: Bounty ID to extend.\",\r\n              \" - `remark`: additional information.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - O(1).\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"BountyProposed\",\r\n            \"arguments\": [\r\n              \"BountyIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" New bounty proposal. \\\\[index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyRejected\",\r\n            \"arguments\": [\r\n              \"BountyIndex\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty proposal was rejected; funds were slashed. \\\\[index, bond\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyBecameActive\",\r\n            \"arguments\": [\r\n              \"Bo"]
[15.665415, "o", "untyIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty proposal is funded and became active. \\\\[index\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyAwarded\",\r\n            \"arguments\": [\r\n              \"BountyIndex\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty is awarded to a beneficiary. \\\\[index, beneficiary\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyClaimed\",\r\n            \"arguments\": [\r\n              \"BountyIndex\",\r\n              \"Balance\",\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty is claimed by beneficiary. \\\\[index, payout, beneficiary\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyCanceled\",\r\n            \"arguments\": [\r\n              \"BountyIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty is cancelled. \\\\[index\\\\]\"\r\n            ]\r\n          },\r"]
[15.66545, "o", "\r\n          {\r\n            \"name\": \"BountyExtended\",\r\n            \"arguments\": [\r\n              \"BountyIndex\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A bounty expiry is extended. \\\\[index\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"DataDepositPerByte\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              225,\r\n              245,\r\n              5,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit per byte within bounty description.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyDepositBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              228,\r\n              11,\r\n       "]
[15.66548, "o", "       84,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit for placing a bounty proposal.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyDepositPayoutDelay\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              194,\r\n              1,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The delay period for which a bounty beneficiary need to wait before claim the payout.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyUpdatePeriod\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              128,\r\n              198,\r\n              19,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Bounty dur"]
[15.66551, "o", "ation in blocks.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyCuratorDeposit\",\r\n            \"ty\": \"Permill\",\r\n            \"value\": [\r\n              32,\r\n              161,\r\n              7,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Percentage of the curator fee that will be reserved upfront as deposit for bounty curator.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"BountyValueMinimum\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              232,\r\n              118,\r\n              72,\r\n              23,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Minimum value for a bounty.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaximumReasonLength\",\r\n            \"ty\""]
[15.665539, "o", ": \"u32\",\r\n            \"value\": [\r\n              0,\r\n              64,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Maximum acceptable reason length.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"InsufficientProposersBalance\",\r\n            \"documentation\": [\r\n              \" Proposer's balance is too low.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidIndex\",\r\n            \"documentation\": [\r\n              \" No proposal or bounty at that index.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"ReasonTooBig\",\r\n            \"documentation\": [\r\n              \" The reason given is just too big.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnexpectedStatus\",\r\n            \"documentation\": [\r\n              \" The bounty status is unexpected.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"RequireCurator\",\r\n            \"documentation\": [\r\n  "]
[15.665569, "o", "            \" Require bounty curator.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidValue\",\r\n            \"documentation\": [\r\n              \" Invalid bounty value.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"InvalidFee\",\r\n            \"documentation\": [\r\n              \" Invalid bounty fee.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PendingPayout\",\r\n            \"documentation\": [\r\n              \" A bounty payout is pending.\",\r\n              \" To cancel the bounty, you must unassign and slash the curator.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Premature\",\r\n            \"documentation\": [\r\n              \" The bounties cannot be claimed/closed because it's still in the countdown period.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 34\r\n      },\r\n      {\r\n        \"name\": \"Tips\",\r\n        \"storage\": {\r\n          \"prefix\": \"Treasury\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Tips\",\r\n        "]
[15.665603, "o", "      \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Twox64Concat\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"OpenTip<T::AccountId, BalanceOf<T>, T::BlockNumber, T::Hash>\",\r\n                  \"unused\": false\r\n                }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" TipsMap that are not yet completed. Keyed by the hash of `(reason, who)` from the value.\",\r\n                \" This has the insecure enumerable hash function since the key itself is already\",\r\n                \" guaranteed to be a secure hash.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Reasons\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Map\": {\r\n                  \"hasher\": \"Identity\",\r\n                  \"key\": \"T::Hash\",\r\n                  \"value\": \"Vec<u8>\",\r\n                  \"unused\": false\r\n               "]
[15.665634, "o", " }\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Simple preimage lookup from the reason's hash to the original data. Again, has an\",\r\n                \" insecure enumerable hash since the key is guaranteed to be the result of a secure hash.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"report_awesome\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"reason\",\r\n                \"ty\": \"Vec<u8>\"\r\n              },\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"T::AccountId\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Report something `reason` that deserves a tip and claim any eventual the finder's fee.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_.\",\r\n              \"\",\r\n              \" Payment: `TipReportDepositBase` will be reserved "]
[15.665677, "o", "from the origin account, as well as\",\r\n              \" `DataDepositPerByte` for each byte in `reason`.\",\r\n              \"\",\r\n              \" - `reason`: The reason for, or the thing that deserves, the tip; generally this will be\",\r\n              \"   a UTF-8-encoded URL.\",\r\n              \" - `who`: The account which should be credited for the tip.\",\r\n              \"\",\r\n              \" Emits `NewTip` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(R)` where `R` length of `reason`.\",\r\n              \"   - encoding and hashing of 'reason'\",\r\n              \" - DbReads: `Reasons`, `Tips`\",\r\n              \" - DbWrites: `Reasons`, `Tips`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"retract_tip\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Retract a prior tip-report from "]
[15.665718, "o", "`report_awesome`, and cancel the process of tipping.\",\r\n              \"\",\r\n              \" If successful, the original deposit will be unreserved.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the tip identified by `hash`\",\r\n              \" must have been reported by the signing account through `report_awesome` (and not\",\r\n              \" through `tip_new`).\",\r\n              \"\",\r\n              \" - `hash`: The identity of the open tip for which a tip value is declared. This is formed\",\r\n              \"   as the hash of the tuple of the original tip `reason` and the beneficiary account ID.\",\r\n              \"\",\r\n              \" Emits `TipRetracted` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(1)`\",\r\n              \"   - Depends on the length of `T::Hash` which is fixed.\",\r\n              \" - DbReads: `Tips`, `origin account`\",\r\n              \" - DbWrites: `Reasons`, `Tips`, `origin account`\",\r\n              \" # </"]
[15.665752, "o", "weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"tip_new\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"reason\",\r\n                \"ty\": \"Vec<u8>\"\r\n              },\r\n              {\r\n                \"name\": \"who\",\r\n                \"ty\": \"T::AccountId\"\r\n              },\r\n              {\r\n                \"name\": \"tip_value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Give a tip for something new; no finder's fee will be taken.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the signing account must be a\",\r\n              \" member of the `Tippers` set.\",\r\n              \"\",\r\n              \" - `reason`: The reason for, or the thing that deserves, the tip; generally this will be\",\r\n              \"   a UTF-8-encoded URL.\",\r\n              \" - `who`: The account which should be credited for the tip.\",\r\n              \" - `tip_value`: The amoun"]
[15.665785, "o", "t of tip that the sender would like to give. The median tip\",\r\n              \"   value of active tippers will be given to the `who`.\",\r\n              \"\",\r\n              \" Emits `NewTip` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(R + T)` where `R` length of `reason`, `T` is the number of tippers.\",\r\n              \"   - `O(T)`: decoding `Tipper` vec of length `T`\",\r\n              \"     `T` is charged as upper bound given by `ContainsLengthBound`.\",\r\n              \"     The actual cost depends on the implementation of `T::Tippers`.\",\r\n              \"   - `O(R)`: hashing and encoding of reason of length `R`\",\r\n              \" - DbReads: `Tippers`, `Reasons`\",\r\n              \" - DbWrites: `Reasons`, `Tips`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"tip\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"hash\",\r\n                \"ty\": \"T::Hash\"\r\n              },\r\n              {\r\n       "]
[15.665817, "o", "         \"name\": \"tip_value\",\r\n                \"ty\": \"Compact<BalanceOf<T>>\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Declare a tip value for an already-open tip.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _Signed_ and the signing account must be a\",\r\n              \" member of the `Tippers` set.\",\r\n              \"\",\r\n              \" - `hash`: The identity of the open tip for which a tip value is declared. This is formed\",\r\n              \"   as the hash of the tuple of the hash of the original tip `reason` and the beneficiary\",\r\n              \"   account ID.\",\r\n              \" - `tip_value`: The amount of tip that the sender would like to give. The median tip\",\r\n              \"   value of active tippers will be given to the `who`.\",\r\n              \"\",\r\n              \" Emits `TipClosing` if the threshold of tippers has been reached and the countdown period\",\r\n              \" has started.\",\r\n              \"\",\r\n              \" # <weight"]
[15.665847, "o", ">\",\r\n              \" - Complexity: `O(T)` where `T` is the number of tippers.\",\r\n              \"   decoding `Tipper` vec of length `T`, insert tip and check closing,\",\r\n              \"   `T` is charged as upper bound given by `ContainsLengthBound`.\",\r\n              \"   The actual cost depends on the implementation of `T::Tippers`.\",\r\n              \"\",\r\n              \"   Actually weight could be lower as it depends on how many tips are in `OpenTip` but it\",\r\n              \"   is weighted as if almost full i.e of length `T-1`.\",\r\n              \" - DbReads: `Tippers`, `Tips`\",\r\n              \" - DbWrites: `Tips`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"close_tip\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"hash\",\r\n                \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Close and payout a tip.\",\r\n              \"\",\r\n              \" The dispatch origin for this call must be _S"]
[15.665915, "o", "igned_.\",\r\n              \"\",\r\n              \" The tip identified by `hash` must have finished its countdown period.\",\r\n              \"\",\r\n              \" - `hash`: The identity of the open tip for which a tip value is declared. This is formed\",\r\n              \"   as the hash of the tuple of the original tip `reason` and the beneficiary account ID.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \" - Complexity: `O(T)` where `T` is the number of tippers.\",\r\n              \"   decoding `Tipper` vec of length `T`.\",\r\n              \"   `T` is charged as upper bound given by `ContainsLengthBound`.\",\r\n              \"   The actual cost depends on the implementation of `T::Tippers`.\",\r\n              \" - DbReads: `Tips`, `Tippers`, `tip finder`\",\r\n              \" - DbWrites: `Reasons`, `Tips`, `Tippers`, `tip finder`\",\r\n              \" # </weight>\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"slash_tip\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"hash\",\r\n "]
[15.665971, "o", "               \"ty\": \"T::Hash\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Remove and slash an already-open tip.\",\r\n              \"\",\r\n              \" May only be called from `T::RejectOrigin`.\",\r\n              \"\",\r\n              \" As a result, the finder is slashed and the deposits are lost.\",\r\n              \"\",\r\n              \" Emits `TipSlashed` if successful.\",\r\n              \"\",\r\n              \" # <weight>\",\r\n              \"   `T` is charged as upper bound given by `ContainsLengthBound`.\",\r\n              \"   The actual cost depends on the implementation of `T::Tippers`.\",\r\n              \" # </weight>\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"NewTip\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A new tip suggestion has been opened. \\\\[tip_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipClosing\",\r\n            \"argument"]
[15.66608, "o", "s\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A tip suggestion has reached threshold and is closing. \\\\[tip_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipClosed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A tip suggestion has been closed. \\\\[tip_hash, who, payout\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipRetracted\",\r\n            \"arguments\": [\r\n              \"Hash\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A tip suggestion has been retracted. \\\\[tip_hash\\\\]\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipSlashed\",\r\n            \"arguments\": [\r\n              \"Hash\",\r\n              \"AccountId\",\r\n              \"Balance\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A tip suggestion has been slashed. \\\\[tip_hash, finder, dep"]
[15.666139, "o", "osit\\\\]\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"TipCountdown\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              64,\r\n              56,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The period for which a tip remains open after is has achieved threshold tippers.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipFindersFee\",\r\n            \"ty\": \"Percent\",\r\n            \"value\": [\r\n              20\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount of the final tip which goes to the original reporter of the tip.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"TipReportDepositBase\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              228,\r\n              11,\r\n              84,\r\n              2,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n             "]
[15.666176, "o", " 0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit for placing a tip report.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"DataDepositPerByte\",\r\n            \"ty\": \"BalanceOf<T>\",\r\n            \"value\": [\r\n              0,\r\n              225,\r\n              245,\r\n              5,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The amount held on deposit per byte within the tip report reason.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"MaximumReasonLength\",\r\n            \"ty\": \"u32\",\r\n            \"value\": [\r\n              0,\r\n              64,\r\n              0,\r\n              0\r\n            ],\r\n  "]
[15.666231, "o", "          \"documentation\": [\r\n              \" Maximum acceptable reason length.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"ReasonTooBig\",\r\n            \"documentation\": [\r\n              \" The reason given is just too big.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"AlreadyKnown\",\r\n            \"documentation\": [\r\n              \" The tip was already found/started.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnknownTip\",\r\n            \"documentation\": [\r\n              \" The tip hash is unknown.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"NotFinder\",\r\n            \"documentation\": [\r\n              \" The account attempting to retract the tip is not the finder of the tip.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"StillOpen\",\r\n            \"documentation\": [\r\n              \" The tip cannot be claimed/closed because there are not enough tippers yet.\"\r\n            ]\r\n          },\r\n   "]
[15.666266, "o", "       {\r\n            \"name\": \"Premature\",\r\n            \"documentation\": [\r\n              \" The tip cannot be claimed/closed because it's still in the countdown period.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 35\r\n      },\r\n      {\r\n        \"name\": \"ElectionProviderMultiPhase\",\r\n        \"storage\": {\r\n          \"prefix\": \"ElectionProviderMultiPhase\",\r\n          \"entries\": [\r\n            {\r\n              \"name\": \"Round\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                1,\r\n                0,\r\n                0,\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Internal counter for the number of rounds.\",\r\n                \"\",\r\n                \" This is useful for de-duplication of transactions submitted to the pool, and general\",\r\n                \" diagnostics of the pallet.\",\r\n                \"\",\r\n                \" This is merely incremented once pe"]
[15.666297, "o", "r every time that an upstream `elect` is called.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"CurrentPhase\",\r\n              \"modifier\": \"Default\",\r\n              \"ty\": {\r\n                \"Plain\": \"Phase<T::BlockNumber>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current phase.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"QueuedSolution\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"ReadySolution<T::AccountId>\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Current best solution, signed or unsigned, queued to be returned upon `elect`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"Snapshot\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"RoundSnapshot<T::AccountId>\"\r"]
[15.666328, "o", "\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Snapshot data of the round.\",\r\n                \"\",\r\n                \" This is created at the beginning of the signed phase and cleared upon calling `elect`.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"DesiredTargets\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"u32\"\r\n              },\r\n              \"default\": [\r\n                0\r\n              ],\r\n              \"documentation\": [\r\n                \" Desired number of targets to elect for this round.\",\r\n                \"\",\r\n                \" Only exists when [`Snapshot`] is present.\"\r\n              ]\r\n            },\r\n            {\r\n              \"name\": \"SnapshotMetadata\",\r\n              \"modifier\": \"Optional\",\r\n              \"ty\": {\r\n                \"Plain\": \"SolutionOrSnapshotSize\"\r\n              },\r\n              \"default\": [\r\n                0\r\n    "]
[15.666358, "o", "          ],\r\n              \"documentation\": [\r\n                \" The metadata of the [`RoundSnapshot`]\",\r\n                \"\",\r\n                \" Only exists when [`Snapshot`] is present.\"\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        \"calls\": [\r\n          {\r\n            \"name\": \"submit_unsigned\",\r\n            \"arguments\": [\r\n              {\r\n                \"name\": \"solution\",\r\n                \"ty\": \"RawSolution<CompactOf<T>>\"\r\n              },\r\n              {\r\n                \"name\": \"witness\",\r\n                \"ty\": \"SolutionOrSnapshotSize\"\r\n              }\r\n            ],\r\n            \"documentation\": [\r\n              \" Submit a solution for the unsigned phase.\",\r\n              \"\",\r\n              \" The dispatch origin fo this call must be __none__.\",\r\n              \"\",\r\n              \" This submission is checked on the fly. Moreover, this unsigned solution is only\",\r\n              \" validated when submitted to the pool from the **local** node. Effectively, this means\",\r\n              "]
[15.666391, "o", "\" that only active validators can submit this transaction when authoring a block (similar\",\r\n              \" to an inherent).\",\r\n              \"\",\r\n              \" To prevent any incorrect solution (and thus wasted time/weight), this transaction will\",\r\n              \" panic if the solution submitted by the validator is invalid in any way, effectively\",\r\n              \" putting their authoring reward at risk.\",\r\n              \"\",\r\n              \" No deposit or reward is associated with this submission.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"event\": [\r\n          {\r\n            \"name\": \"SolutionStored\",\r\n            \"arguments\": [\r\n              \"ElectionCompute\"\r\n            ],\r\n            \"documentation\": [\r\n              \" A solution was stored with the given compute.\",\r\n              \"\",\r\n              \" If the solution is signed, this means that it hasn't yet been processed. If the\",\r\n              \" solution is unsigned, this means that it has also been processed.\"\r\n            ]\r\n          }"]
[15.666433, "o", ",\r\n          {\r\n            \"name\": \"ElectionFinalized\",\r\n            \"arguments\": [\r\n              \"Option<ElectionCompute>\"\r\n            ],\r\n            \"documentation\": [\r\n              \" The election has been finalized, with `Some` of the given computation, or else if the\",\r\n              \" election failed, `None`.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Rewarded\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has been rewarded for their signed submission being finalized.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"Slashed\",\r\n            \"arguments\": [\r\n              \"AccountId\"\r\n            ],\r\n            \"documentation\": [\r\n              \" An account has been slashed for submitting an invalid signed submission.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SignedPhaseStarted\",\r\n            \"arguments\": [\r\n              \"u32\"\r\n            ],\r\n            \""]
[15.666525, "o", "documentation\": [\r\n              \" The signed phase of the given round has started.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"UnsignedPhaseStarted\",\r\n            \"arguments\": [\r\n              \"u32\"\r\n            ],\r\n            \"documentation\": [\r\n              \" The unsigned phase of the given round has started.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"constants\": [\r\n          {\r\n            \"name\": \"UnsignedPhase\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              88,\r\n              2,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Duration of the unsigned phase.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"SignedPhase\",\r\n            \"ty\": \"T::BlockNumber\",\r\n            \"value\": [\r\n              0,\r\n              0,\r\n              0,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" Duration of the signed phase.\"\r\n            ]\r\n          },\r\n    "]
[15.66658, "o", "      {\r\n            \"name\": \"SolutionImprovementThreshold\",\r\n            \"ty\": \"Perbill\",\r\n            \"value\": [\r\n              32,\r\n              161,\r\n              7,\r\n              0\r\n            ],\r\n            \"documentation\": [\r\n              \" The minimum amount of improvement to the solution score that defines a solution as\",\r\n              \" \\\"better\\\" (in any phase).\"\r\n            ]\r\n          }\r\n        ],\r\n        \"errors\": [\r\n          {\r\n            \"name\": \"PreDispatchEarlySubmission\",\r\n            \"documentation\": [\r\n              \" Submission was too early.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreDispatchWrongWinnerCount\",\r\n            \"documentation\": [\r\n              \" Wrong number of winners presented.\"\r\n            ]\r\n          },\r\n          {\r\n            \"name\": \"PreDispatchWeakSubmission\",\r\n            \"documentation\": [\r\n              \" Submission was too weak, score-wise.\"\r\n            ]\r\n          }\r\n        ],\r\n        \"index\": 36\r\n      }\r\n    ],\r\n  "]
[15.666647, "o", "  \"extrinsic\": {\r\n      \"version\": 4,\r\n      \"signed_extensions\": [\r\n        \"CheckSpecVersion\",\r\n        \"CheckTxVersion\",\r\n        \"CheckGenesis\",\r\n        \"CheckMortality\",\r\n        \"CheckNonce\",\r\n        \"CheckWeight\",\r\n        \"ChargeTransactionPayment\",\r\n        \"PrevalidateAttests\"\r\n      ]\r\n    },\r\n    \"marker\": null\r\n  }\r\n}\r\n"]
[16.175837, "o", "\r\n"]
